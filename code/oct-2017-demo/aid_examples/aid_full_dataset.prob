secret:
  int ship1_latitude=8963;
  int ship1_longitude=121944;
  int ship1_maxspeed=10;

  int ship2_latitude=8287;
  int ship2_longitude=122524;
  int ship2_maxspeed=20;

  int ship3_latitude=11145;
  int ship3_longitude=126899;
  int ship3_maxspeed=30;

  int ship4_latitude=9563;
  int ship4_longitude=118995;
  int ship4_maxspeed=35;

  int ship5_latitude=5685;
  int ship5_longitude=119124;
  int ship5_maxspeed=32;

  int ship6_latitude=7496;
  int ship6_longitude=119503;
  int ship6_maxspeed=22;

  int ship7_latitude=9208;
  int ship7_longitude=126801;
  int ship7_maxspeed=25;

  int ship8_latitude=8703;
  int ship8_longitude=122962;
  int ship8_maxspeed=34;

  int ship9_latitude=9232;
  int ship9_longitude=120660;
  int ship9_maxspeed=28;

  int ship10_latitude=11800;
  int ship10_longitude=126280;
  int ship10_maxspeed=26;

  int port1_harbordepth = 65;
  int port2_harbordepth = 55;
  int port3_harbordepth = 45;
  int port4_harbordepth = 50;
  int port5_harbordepth = 45;
  int port6_harbordepth = 30;
  int port7_harbordepth = 40;
  int port8_harbordepth = 45;
  int port9_harbordepth = 30;
  int port10_harbordepth = 50;

belief:
  int ship1_latitude = uniform 3000 18000;
  int ship1_longitude = uniform 115000 130000;
  int ship1_maxspeed = uniform 5 50;
  int ship2_latitude = uniform 3000 18000;
  int ship2_longitude = uniform 115000 130000;
  int ship2_maxspeed = uniform 5 50;
  int ship3_latitude = uniform 3000 18000;
  int ship3_longitude = uniform 115000 130000;
  int ship3_maxspeed = uniform 5 50;
  int ship4_latitude = uniform 3000 18000;
  int ship4_longitude = uniform 115000 130000;
  int ship4_maxspeed = uniform 5 50;
  int ship5_latitude = uniform 3000 18000;
  int ship5_longitude = uniform 115000 130000;
  int ship5_maxspeed = uniform 5 50;
  int ship6_latitude = uniform 3000 18000;
  int ship6_longitude = uniform 115000 130000;
  int ship6_maxspeed = uniform 5 50;
  int ship7_latitude = uniform 3000 18000;
  int ship7_longitude = uniform 115000 130000;
  int ship7_maxspeed = uniform 5 50;
  int ship8_latitude = uniform 3000 18000;
  int ship8_longitude = uniform 115000 130000;
  int ship8_maxspeed = uniform 5 50;
  int ship9_latitude = uniform 3000 18000;
  int ship9_longitude = uniform 115000 130000;
  int ship9_maxspeed = uniform 5 50;
  int ship10_latitude = uniform 3000 18000;
  int ship10_longitude = uniform 115000 130000;
  int ship10_maxspeed = uniform 5 50;

  int port1_harbordepth = uniform 5 50;
  int port2_harbordepth = uniform 5 50;
  int port3_harbordepth = uniform 5 50;
  int port4_harbordepth = uniform 5 50;
  int port5_harbordepth = uniform 5 50;
  int port6_harbordepth = uniform 5 50;
  int port7_harbordepth = uniform 5 50;
  int port8_harbordepth = uniform 5 50;
  int port9_harbordepth = uniform 5 50;
  int port10_harbordepth = uniform 5 50;

querydef mpc_aid ship_id port_id ship_draft ship_cargo port_available port_longitude port_latitude port_offloadcapacity deadline -> result :
  int ship_latitude = 0;
  int ship_longitude = 0;
  int ship_maxspeed = 0;

  int port_harbordepth = 0;

  if ship_id == 1 then
    ship_latitude = ship1_latitude;
    ship_longitude = ship1_longitude;
    ship_maxspeed = ship1_maxspeed;
  endif;
  if ship_id == 2 then
    ship_latitude = ship2_latitude;
    ship_longitude = ship2_longitude;
    ship_maxspeed = ship2_maxspeed;
  endif;
  if ship_id == 3 then
    ship_latitude = ship3_latitude;
    ship_longitude = ship3_longitude;
    ship_maxspeed = ship3_maxspeed;
  endif;
  if ship_id == 4 then
    ship_latitude = ship4_latitude;
    ship_longitude = ship4_longitude;
    ship_maxspeed = ship4_maxspeed;
  endif;
  if ship_id == 5 then
    ship_latitude = ship5_latitude;
    ship_longitude = ship5_longitude;
    ship_maxspeed = ship5_maxspeed;
  endif;
  if ship_id == 6 then
    ship_latitude = ship6_latitude;
    ship_longitude = ship6_longitude;
    ship_maxspeed = ship6_maxspeed;
  endif;
  if ship_id == 7 then
    ship_latitude = ship7_latitude;
    ship_longitude = ship7_longitude;
    ship_maxspeed = ship7_maxspeed;
  endif;
  if ship_id == 8 then
    ship_latitude = ship8_latitude;
    ship_longitude = ship8_longitude;
    ship_maxspeed = ship8_maxspeed;
  endif;
  if ship_id == 9 then
    ship_latitude = ship9_latitude;
    ship_longitude = ship9_longitude;
    ship_maxspeed = ship9_maxspeed;
  endif;
  if ship_id == 10 then
    ship_latitude = ship0_latitude;
    ship_longitude = ship0_longitude;
    ship_maxspeed = ship0_maxspeed;
  endif;

  if port_id == 1 then
    port_harbordepth = port1_harbordepth;
  endif;
  if port_id == 2 then
    port_harbordepth = port2_harbordepth;
  endif;
  if port_id == 3 then
    port_harbordepth = port3_harbordepth;
  endif;
  if port_id == 4 then
    port_harbordepth = port4_harbordepth;
  endif;
  if port_id == 5 then
    port_harbordepth = port5_harbordepth;
  endif;
  if port_id == 6 then
    port_harbordepth = port6_harbordepth;
  endif;
  if port_id == 7 then
    port_harbordepth = port7_harbordepth;
  endif;
  if port_id == 8 then
    port_harbordepth = port8_harbordepth;
  endif;
  if port_id == 9 then
    port_harbordepth = port9_harbordepth;
  endif;
  if port_id == 10 then
    port_harbordepth = port10_harbordepth;
  endif;

  int reachable = 0;

  if (ship_latitude - port_latitude) <= deadline * ship_maxspeed and
     (ship_longitude - port_longitude) <= deadline * ship_maxspeed and
     (port_longitude - ship_longitude) <= deadline * ship_maxspeed and
     (port_latitude - ship_latitude) <= deadline * ship_maxspeed then
    reachable = 1;
  endif;

  int feasible = 0;

  if (port_available == 1) and (ship_draft <= port_harbordepth) and (ship_cargo <= port_offloadcapacity) then
    feasible = 1;
  endif;

  int result = 0;

  if (reachable == 1) and (feasible == 1) then
    result = 1;
  endif;

querydef mpc_one_cond ship_id port_id ship_draft ship_cargo port_available port_longitude port_latitude port_offloadcapacity deadline -> result :
  int ship_latitude = 0;
  int ship_longitude = 0;
  int ship_maxspeed = 0;

  int port_harbordepth = 0;

  if ship_id == 1 then
    ship_latitude = ship1_latitude;
    ship_longitude = ship1_longitude;
    ship_maxspeed = ship1_maxspeed;
  endif;
  if ship_id == 2 then
    ship_latitude = ship2_latitude;
    ship_longitude = ship2_longitude;
    ship_maxspeed = ship2_maxspeed;
  endif;
  if ship_id == 3 then
    ship_latitude = ship3_latitude;
    ship_longitude = ship3_longitude;
    ship_maxspeed = ship3_maxspeed;
  endif;
  if ship_id == 4 then
    ship_latitude = ship4_latitude;
    ship_longitude = ship4_longitude;
    ship_maxspeed = ship4_maxspeed;
  endif;
  if ship_id == 5 then
    ship_latitude = ship5_latitude;
    ship_longitude = ship5_longitude;
    ship_maxspeed = ship5_maxspeed;
  endif;
  if ship_id == 6 then
    ship_latitude = ship6_latitude;
    ship_longitude = ship6_longitude;
    ship_maxspeed = ship6_maxspeed;
  endif;
  if ship_id == 7 then
    ship_latitude = ship7_latitude;
    ship_longitude = ship7_longitude;
    ship_maxspeed = ship7_maxspeed;
  endif;
  if ship_id == 8 then
    ship_latitude = ship8_latitude;
    ship_longitude = ship8_longitude;
    ship_maxspeed = ship8_maxspeed;
  endif;
  if ship_id == 9 then
    ship_latitude = ship9_latitude;
    ship_longitude = ship9_longitude;
    ship_maxspeed = ship9_maxspeed;
  endif;
  if ship_id == 10 then
    ship_latitude = ship0_latitude;
    ship_longitude = ship0_longitude;
    ship_maxspeed = ship0_maxspeed;
  endif;

  if port_id == 1 then
    port_harbordepth = port1_harbordepth;
  endif;
  if port_id == 2 then
    port_harbordepth = port2_harbordepth;
  endif;
  if port_id == 3 then
    port_harbordepth = port3_harbordepth;
  endif;
  if port_id == 4 then
    port_harbordepth = port4_harbordepth;
  endif;
  if port_id == 5 then
    port_harbordepth = port5_harbordepth;
  endif;
  if port_id == 6 then
    port_harbordepth = port6_harbordepth;
  endif;
  if port_id == 7 then
    port_harbordepth = port7_harbordepth;
  endif;
  if port_id == 8 then
    port_harbordepth = port8_harbordepth;
  endif;
  if port_id == 9 then
    port_harbordepth = port9_harbordepth;
  endif;
  if port_id == 10 then
    port_harbordepth = port10_harbordepth;
  endif;

  int result = 0;

  if (ship_latitude - port_latitude) <= deadline * ship_maxspeed and
     (ship_longitude - port_longitude) <= deadline * ship_maxspeed and
     (port_longitude - ship_longitude) <= deadline * ship_maxspeed and
     (port_latitude - ship_latitude) <= deadline * ship_maxspeed and
     (port_available == 1) and (ship_draft <= port_harbordepth) and (ship_cargo <= port_offloadcapacity) then
    result = 1;
  endif;

querydef mpc_nested_cond ship_id port_id ship_draft ship_cargo port_available port_longitude port_latitude port_offloadcapacity deadline -> result :
  int ship_latitude = 0;
  int ship_longitude = 0;
  int ship_maxspeed = 0;

  int port_harbordepth = 0;

  if ship_id == 1 then
    ship_latitude = ship1_latitude;
    ship_longitude = ship1_longitude;
    ship_maxspeed = ship1_maxspeed;
  endif;
  if ship_id == 2 then
    ship_latitude = ship2_latitude;
    ship_longitude = ship2_longitude;
    ship_maxspeed = ship2_maxspeed;
  endif;
  if ship_id == 3 then
    ship_latitude = ship3_latitude;
    ship_longitude = ship3_longitude;
    ship_maxspeed = ship3_maxspeed;
  endif;
  if ship_id == 4 then
    ship_latitude = ship4_latitude;
    ship_longitude = ship4_longitude;
    ship_maxspeed = ship4_maxspeed;
  endif;
  if ship_id == 5 then
    ship_latitude = ship5_latitude;
    ship_longitude = ship5_longitude;
    ship_maxspeed = ship5_maxspeed;
  endif;
  if ship_id == 6 then
    ship_latitude = ship6_latitude;
    ship_longitude = ship6_longitude;
    ship_maxspeed = ship6_maxspeed;
  endif;
  if ship_id == 7 then
    ship_latitude = ship7_latitude;
    ship_longitude = ship7_longitude;
    ship_maxspeed = ship7_maxspeed;
  endif;
  if ship_id == 8 then
    ship_latitude = ship8_latitude;
    ship_longitude = ship8_longitude;
    ship_maxspeed = ship8_maxspeed;
  endif;
  if ship_id == 9 then
    ship_latitude = ship9_latitude;
    ship_longitude = ship9_longitude;
    ship_maxspeed = ship9_maxspeed;
  endif;
  if ship_id == 10 then
    ship_latitude = ship0_latitude;
    ship_longitude = ship0_longitude;
    ship_maxspeed = ship0_maxspeed;
  endif;

  if port_id == 1 then
    port_harbordepth = port1_harbordepth;
  endif;
  if port_id == 2 then
    port_harbordepth = port2_harbordepth;
  endif;
  if port_id == 3 then
    port_harbordepth = port3_harbordepth;
  endif;
  if port_id == 4 then
    port_harbordepth = port4_harbordepth;
  endif;
  if port_id == 5 then
    port_harbordepth = port5_harbordepth;
  endif;
  if port_id == 6 then
    port_harbordepth = port6_harbordepth;
  endif;
  if port_id == 7 then
    port_harbordepth = port7_harbordepth;
  endif;
  if port_id == 8 then
    port_harbordepth = port8_harbordepth;
  endif;
  if port_id == 9 then
    port_harbordepth = port9_harbordepth;
  endif;
  if port_id == 10 then
    port_harbordepth = port10_harbordepth;
  endif;

  int result = 0;

  if (ship_latitude - port_latitude) <= deadline * ship_maxspeed and
     (ship_longitude - port_longitude) <= deadline * ship_maxspeed and
     (port_longitude - ship_longitude) <= deadline * ship_maxspeed and
     (port_latitude - ship_latitude) <= deadline * ship_maxspeed then
     if (ship_draft <= port_harbordepth) then
       result = 1;
     endif;
       result = 1;
  endif;

querydef mpc_simple deadline -> result :
  int reachable = 0;

  if (ship1_latitude - 10316) <= deadline * ship1_maxspeed and
     (ship1_longitude - 123886) <= deadline * ship1_maxspeed and
     (123886 - ship1_longitude) <= deadline * ship1_maxspeed and
     (10316 - ship1_latitude) <= deadline * ship1_maxspeed then
    reachable = 1;
  endif;

  int feasible = 0;

  if (40 <= port1_harbordepth) then
    feasible = 1;
  endif;

  int result = 0;

  if (reachable == 1) and (feasible == 1) then
    result = 1;
  endif;

querydef mpc_more_simple deadline -> result :
  int result = 0;

  if (ship1_latitude - 10316) <= deadline * ship1_maxspeed and
     (ship1_longitude - 123886) <= deadline * ship1_maxspeed and
     (123886 - ship1_longitude) <= deadline * ship1_maxspeed and
     (10316 - ship1_latitude) <= deadline * ship1_maxspeed and
     (40 <= port1_harbordepth) then
    result = 1;
  endif;

query mpc_nested_cond:
  int port_id=1;
  int ship_id=1;
  int ship_cargo=1000;
  int ship_draft=40;
  int port_latitude=10316;
  int port_longitude=123886;
  int port_offloadcapacity=2500;
  int port_available=1;
  int deadline=100;

query mpc_nested_cond:
  int port_id=8;
  int ship_id=1;
  int ship_cargo=1000;
  int ship_draft=40;
  int ship_maxspeed=10;
  int port_latitude=9200;
  int port_longitude=123650;
  int port_offloadcapacity=1100;
  int port_available=1;
  int deadline=100;

query mpc_nested_cond:
  int port_id=1;
  int ship_id=2;
  int ship_cargo=2000;
  int ship_draft=50;
  int port_latitude=10316;
  int port_longitude=123886;
  int port_offloadcapacity=2500;
  int port_available=1;
  int deadline=100;

query mpc_nested_cond:
  int port_id=8;
  int ship_id=2;
  int ship_cargo=2000;
  int ship_draft=50;
  int port_latitude=9200;
  int port_longitude=123650;
  int port_offloadcapacity=1100;
  int port_available=1;
  int deadline=100;

(*
query mpc_nested_cond:
  int port_id=1;
  int ship_id=1;
  int ship_cargo=1000;
  int ship_draft=40;
  int port_latitude=10316;
  int port_longitude=123886;
  int port_offloadcapacity=2500;
  int port_available=1;
  int deadline=100;
(*  int result=0  *)
query mpc_nested_cond:
  int port_id=2;
  int ship_id=1;
  int ship_cargo=1000;
  int ship_draft=40;
  int ship_maxspeed=10;
  int port_latitude=10268;
  int port_longitude=123994;
  int port_offloadcapacity=2000;
  int port_available=1;
  int deadline=100;
(*  int result=1 *)
query mpc_nested_cond:
  int port_id=3;
  int ship_id=1;
  int ship_cargo=1000;
  int ship_draft=40;
  int ship_maxspeed=10;
  int port_latitude=9683;
  int port_longitude=123500;
  int port_offloadcapacity=1500;
  int port_available=1;
  int deadline=100;
(*  int result=0 *)
query mpc_nested_cond:
  int port_id=4;
  int ship_id=1;
  int ship_cargo=1000;
  int ship_draft=40;
  int ship_maxspeed=10;
  int port_latitude=9650;
  int port_longitude=124366;
  int port_offloadcapacity=2000;
  int port_available=1;
  int deadline=100;
(*  int result=0 *)
query mpc_nested_cond:
  int port_id=5;
  int ship_id=1;
  int ship_cargo=1000;
  int ship_draft=40;
  int ship_maxspeed=10;
  int port_latitude=9673;
  int port_longitude=123873;
  int port_offloadcapacity=1800;
  int port_available=1;
  int deadline=100;
(*  int result=0 *)
query mpc_nested_cond:
  int port_id=6;
  int ship_id=1;
  int ship_cargo=1000;
  int ship_draft=40;
  int ship_maxspeed=10;
  int port_latitude=9213;
  int port_longitude=123516;
  int port_offloadcapacity=800;
  int port_available=1;
  int deadline=100;
(*  int result=0 *)
query mpc_nested_cond:
  int port_id=7;
  int ship_id=1;
  int ship_cargo=1000;
  int ship_draft=40;
  int ship_maxspeed=10;
  int port_latitude=9167;
  int port_longitude=123500;
  int port_offloadcapacity=1000;
  int port_available=1;
  int deadline=100;
(*  int result=0 *)
query mpc_nested_cond:
  int port_id=8;
  int ship_id=1;
  int ship_cargo=1000;
  int ship_draft=40;
  int ship_maxspeed=10;
  int port_latitude=9200;
  int port_longitude=123650;
  int port_offloadcapacity=1100;
  int port_available=1;
  int deadline=100;
(*  int result=0 *)
query mpc_nested_cond:
  int port_id=9;
  int ship_id=1;
  int ship_cargo=1000;
  int ship_draft=40;
  int ship_maxspeed=10;
  int port_latitude=9250;
  int port_longitude=123600;
  int port_offloadcapacity=600;
  int port_available=1;
  int deadline=100;
(*  int result=0 *)
query mpc_nested_cond:
  int port_id=10;
  int ship_id=1;
  int ship_cargo=1000;
  int ship_draft=40;
  int ship_maxspeed=10;
  int port_latitude=9272;
  int port_longitude=123638;
  int port_offloadcapacity=1500;
  int port_available=1;
  int deadline=100;
(*  int result=1 *)
*)