(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    329476,       6133]
NotebookOptionsPosition[    328392,       6093]
NotebookOutlinePosition[    328751,       6109]
CellTagsIndexPosition[    328708,       6106]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FF", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], " ", ":=", " ", 
   RowBox[{"FactorialPower", "[", 
    RowBox[{"i", ",", "j"}], "]"}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "falling", " ", "factorial", " ", "with", " ", "some", " ", "edge", " ", 
    "case", " ", "checking"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"orZ", "[", 
    RowBox[{"n_", ",", " ", "d_"}], "]"}], " ", ":=", " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"d", " ", ">=", " ", "1"}], ",", " ", 
     RowBox[{"n", "/", "d"}], ",", " ", "0"}], "]"}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "division", " ", "that", " ", "returns", " ", "0", " ", "instead", " ", 
    "of", " ", "undefined", " ", "for", " ", "division", " ", "by", " ", 
    "0"}], " ", "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"locs", " ", ":=", " ", "100"}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "total", " ", "number", " ", "of", " ", "locations", " ", "in", " ", 
      "the", " ", "sea"}], " ", "*)"}], "\n", 
    RowBox[{"n", " ", ":=", " ", "50"}], ";", "       ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "a", " ", "query", " ", "splits", " ", "the", " ", "sea", " ", "into", 
       " ", "two", " ", "pieces"}], ",", " ", 
      RowBox[{"of", " ", "size", " ", "n", " ", "and", " ", 
       RowBox[{"(", 
        RowBox[{"locs", "-", "n"}], ")"}]}]}], " ", "*)"}], "\n", 
    RowBox[{"m", " ", ":=", " ", "10"}], ";"}], "       ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "the", " ", "prior", " ", "distribution", " ", "of", " ", "a", " ", 
     "ship", " ", "is", " ", "uniform", " ", "over", " ", "m", " ", 
     "locations"}], " ", "*)"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"probtrue", "[", 
    RowBox[{"locs_", ",", " ", "n_", ",", " ", "m_", ",", " ", "inter_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"inter", "/", "m"}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "probability", " ", "that", " ", "the", " ", "query", " ", "will", " ", 
    "return", " ", "true", " ", "on", " ", "the", " ", "various", " ", 
    "parameters"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"probfalse", "[", 
    RowBox[{"locs_", ",", " ", "n_", ",", " ", "m_", ",", " ", "inter_"}], 
    "]"}], " ", ":=", " ", 
   RowBox[{"1", "-", 
    RowBox[{"probtrue", "[", 
     RowBox[{"locs", ",", "n", ",", "m", ",", "inter"}], "]"}]}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "...", " ", "that", " ", "it", " ", "will", " ", "return", " ", "false"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vulPrior", "[", 
    RowBox[{"locs_", ",", "n_", ",", "m_", ",", "inter_"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"1", " ", "/", " ", "m"}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"prior", " ", "vulnerability"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vulPost", "[", 
    RowBox[{"locs_", ",", "n_", ",", "m_", ",", "inter_"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{
    RowBox[{
     RowBox[{"probtrue", "[", 
      RowBox[{"locs", ",", "n", ",", "m", ",", "inter"}], "]"}], " ", "*", 
     " ", 
     RowBox[{"orZ", "[", 
      RowBox[{"1", ",", "inter"}], "]"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"probfalse", "[", 
      RowBox[{"locs", ",", "n", ",", "m", ",", "inter"}], "]"}], " ", "*", 
     " ", 
     RowBox[{"orZ", "[", 
      RowBox[{"1", ",", " ", 
       RowBox[{"m", "-", "inter"}]}], "]"}]}]}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"posteriour", " ", "vulnerability"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"WCvulPost", "[", 
    RowBox[{"locs_", ",", "n_", ",", "m_", ",", "inter_"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"inter", ">", 
      RowBox[{"Min", "[", 
       RowBox[{"n", ",", "m"}], "]"}]}], ",", 
     RowBox[{"1", "/", "0"}], ",", 
     RowBox[{"Max", "[", 
      RowBox[{
       RowBox[{"orZ", "[", 
        RowBox[{"1", ",", "inter"}], "]"}], ",", 
       RowBox[{"orZ", "[", 
        RowBox[{"1", ",", 
         RowBox[{"m", "-", "inter"}]}], "]"}]}], "]"}]}], "]"}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"worst", " ", "case", " ", "posterior", " ", "vulnerability"}], 
    ";", " ", 
    RowBox[{
    "with", " ", "maximization", " ", "over", " ", "outcomes", " ", "instead",
      " ", "of", " ", "expectation"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MEDvulPost", "[", 
    RowBox[{"locs_", ",", "n_", ",", "m_", ",", "inter_"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"inter", ">", 
      RowBox[{"Min", "[", 
       RowBox[{"n", ",", "m"}], "]"}]}], ",", 
     RowBox[{"1", "/", "0"}], ",", 
     RowBox[{"1", "/", 
      RowBox[{"Max", "[", 
       RowBox[{"inter", ",", 
        RowBox[{"m", "-", "inter"}]}], "]"}]}]}], "]"}]}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "median", " ", "vulnerability", " ", "with", " ", "median", " ", "over", 
    " ", "outcomes", " ", "instead", " ", "of", " ", "expectation"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"probInter", "[", 
   RowBox[{"locs_", ",", "n_", ",", "m_", ",", "inter_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"inter", ">", "n"}], " ", "||", " ", 
     RowBox[{"inter", ">", "m"}], " ", "||", " ", 
     RowBox[{
      RowBox[{"m", "-", "inter"}], " ", ">", " ", 
      RowBox[{"locs", " ", "-", " ", "n"}]}]}], ",", "0", ",", 
    RowBox[{
     RowBox[{"Binomial", "[", 
      RowBox[{"m", ",", "inter"}], "]"}], "*", 
     RowBox[{"FF", "[", 
      RowBox[{"n", ",", "inter"}], "]"}], "*", 
     RowBox[{
      RowBox[{"FF", "[", 
       RowBox[{
        RowBox[{"locs", "-", "n"}], ",", 
        RowBox[{"m", "-", "inter"}]}], "]"}], "/", 
      RowBox[{"FF", "[", 
       RowBox[{"locs", ",", "m"}], "]"}]}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "probabiliy", " ", "that", " ", "the", " ", "size", " ", "of", " ", "an", 
     " ", "intersection", " ", "is", " ", "inter"}], ";", " ", 
    RowBox[{
    "the", " ", "intersection", " ", "is", " ", "between", " ", "the", " ", 
     "locations", " ", "where", " ", "the", " ", "query", " ", "returns", " ",
      "true", " ", "and", " ", "the", " ", "locations", " ", "over", " ", 
     "which", " ", "a", " ", 
     RowBox[{"ship", "'"}], "s", " ", "prior", " ", "is", " ", "defined"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.665096759064396*^9, 3.665096760691238*^9}, {
   3.665097001446147*^9, 3.665097121832629*^9}, 3.665097346859522*^9, {
   3.665097462144106*^9, 3.6650974624158697`*^9}, {3.665174457391487*^9, 
   3.665174482276349*^9}, {3.6651748918954973`*^9, 3.665174925056032*^9}, 
   3.665175004432433*^9, {3.665175067308075*^9, 3.665175085295109*^9}, {
   3.665175282881896*^9, 3.6651752903843317`*^9}, {3.6658488796255007`*^9, 
   3.665848880291306*^9}, {3.6658489695449667`*^9, 3.665849010484023*^9}, {
   3.665849292829821*^9, 3.6658493485141172`*^9}, {3.665849891187022*^9, 
   3.6658499494547863`*^9}, {3.665850128702146*^9, 3.665850194381981*^9}, {
   3.665850578381349*^9, 3.665850799663006*^9}, {3.665852830128777*^9, 
   3.665852850484475*^9}, {3.665852938830759*^9, 3.665852985385166*^9}, {
   3.665853410461488*^9, 3.665853416835423*^9}, {3.6658534971235313`*^9, 
   3.665853500040852*^9}, {3.665853577550069*^9, 3.665853582078826*^9}, {
   3.665853760088739*^9, 3.6658537735875673`*^9}, {3.6658553584672318`*^9, 
   3.665855386379562*^9}, {3.6658554330828133`*^9, 3.665855453634877*^9}},
 FormatType->"InputForm"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"probInter", "[", 
     RowBox[{"100", ",", "50", ",", "10", ",", "i"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "15"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.01"}], ",", "0.4"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"probInter", "[", 
    RowBox[{"100", ",", "50", ",", "10", ",", "i"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "100"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.665174128241014*^9, 3.665174128648539*^9}, {
   3.665174259519312*^9, 3.665174273124618*^9}, {3.665174304596159*^9, 
   3.66517430475038*^9}, {3.665174394585081*^9, 3.665174437138954*^9}, {
   3.665847296283853*^9, 3.665847298146133*^9}, {3.665849747683443*^9, 
   3.665849780383266*^9}, {3.6658498145160027`*^9, 3.665849842583576*^9}, {
   3.665849877766811*^9, 3.665849883959347*^9}, {3.6658499574051456`*^9, 
   3.665850095586565*^9}, {3.665850200732129*^9, 3.6658502042999277`*^9}, {
   3.665850261933243*^9, 3.6658502625635967`*^9}, {3.665850324484055*^9, 
   3.6658503308139553`*^9}, {3.665850368233391*^9, 3.665850380071068*^9}, {
   3.665852612714979*^9, 3.6658526137008963`*^9}, 3.6658527572069817`*^9, {
   3.665852864779523*^9, 3.665852880527021*^9}, {3.665853126044948*^9, 
   3.6658531397688828`*^9}, {3.665853171205866*^9, 3.665853276644298*^9}, {
   3.665853311295126*^9, 3.665853337319591*^9}, {3.665853426521759*^9, 
   3.665853426633307*^9}, {3.6658535137478523`*^9, 3.66585351397139*^9}, {
   3.66585363293573*^9, 3.665853633397936*^9}, {3.665855464417448*^9, 
   3.6658554688044863`*^9}, {3.665856153591756*^9, 3.665856162186369*^9}, {
   3.665856203762272*^9, 3.665856206274095*^9}},
 NumberMarks->False],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
upM+mEvbrNKdebJyfm2N7v8DeS0Bhw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0., 14.999999693877552`}, {-0.01, 0.4}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.665852757606532*^9, {3.6658528560928593`*^9, 3.665852880913803*^9}, {
   3.6658531072019*^9, 3.665853140227703*^9}, {3.665853182283546*^9, 
   3.665853214875592*^9}, {3.6658532534266443`*^9, 3.665853276937168*^9}, {
   3.66585331245216*^9, 3.6658533377620773`*^9}, {3.665853421432953*^9, 
   3.665853427036145*^9}, {3.6658535101662617`*^9, 3.6658535145565157`*^9}, 
   3.6658536338147573`*^9, 3.665853769702447*^9, {3.665855444057995*^9, 
   3.665855469081894*^9}, {3.665856155302106*^9, 3.665856162828375*^9}, 
   3.665856206707857*^9}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.665852757606532*^9, {3.6658528560928593`*^9, 3.665852880913803*^9}, {
   3.6658531072019*^9, 3.665853140227703*^9}, {3.665853182283546*^9, 
   3.665853214875592*^9}, {3.6658532534266443`*^9, 3.665853276937168*^9}, {
   3.66585331245216*^9, 3.6658533377620773`*^9}, {3.665853421432953*^9, 
   3.665853427036145*^9}, {3.6658535101662617`*^9, 3.6658535145565157`*^9}, 
   3.6658536338147573`*^9, 3.665853769702447*^9, {3.665855444057995*^9, 
   3.665855469081894*^9}, {3.665856155302106*^9, 3.665856162828375*^9}, 
   3.665856206719656*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"probInter", "[", 
     RowBox[{"100", ",", "50", ",", "m", ",", "10"}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "0", ",", "30"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.665850392052889*^9, 3.665850412701858*^9}, {
   3.665850445246566*^9, 3.665850495065683*^9}, {3.665850528686121*^9, 
   3.665850533303474*^9}, {3.665852624462933*^9, 3.665852625488847*^9}, 
   3.665852746045122*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJxF1nk4lN/7B3CVhGgRESrLWCbEzDMkZty3KFmSSCFUQqhshZJKEqVSiBAl
JEtU8pGyJGFmSFkqEkKEPmUp67T9ns91/b56/nmu1x/nuZ5zn/d9zpF38bF2
m8vHx7d9Dh/ff+/JLm415UKmAd//PzNGtIOGbWHwP7s9GbCVaoud9fWJqrp5
bemz1onTOjvTWjhrfpf9LuOtVbM+wJ3bNNbaPOtVJ6zOjbb2zprNY1xrSv8+
69yMp80u6r9mrVi6NnWB0Tz8n+0DU3ItbQVn3a9iendsieis79rWPZ+7Yums
W3qOhMSlLpu10pCBZvOkxKwP2LdZcsOkZt1hHOPh/VF61qU8yy3SuitnHb2i
48bJp6tnXWtvHMARlZ817Apr0rBVmPXIsw1xCQmKsw6daxC78fpfixmtjxm/
+deMas3L1jl/fbRW9sKisr/mq58Mi+j565iF305rf/prBYuvoX2f/9q44ePJ
DeN//Ub0w4mx6b92t2wPSfv119PRb45vnUvB6ZS5Ju+zjOD8q8bg3wIUlLs8
Vma5zBikl7w4lr+QglFuqUKHThvDXSv2UcclFJwYPu6rN2YML5vKA5+soGDK
GdHC7282gtjrXP9AdQr63/m40L7IBDLEs/yUaBQUiT++xFNrMzBsb/m+1qZg
s2nnqFnBZtjx9po3HSj4Jl7qR/w9U0huC/ca3kZBIT13xVqOOSh2Oru4B1Gw
e52kYJW6FRStdNgrEULBpD+bf7gHW8EmZ9s91aEUnDOgzlzBtQKPD+bOClEU
vNbcwX/Pcxvc7dF16EqhIE3hZm7PI2tgfBKz3lFFQdVx3S9Ho2zhWs3AMy82
BVWeNnYQ32yBl1lGO/WCgsf6gzrtdu2Ayn3uS7PfUtAvn//yV9pOsOh53Djz
mfz/gmV3kkbtwLVjz9bUZUpYr9uTX1XsCOxS7acPpJQw7U7ioyQdJ1hzXViz
dqUSKtxJvS9a4gSj9kWLRlSUkK/spuu7p84Q0rrgJTKVkGdo7JnvtweuNhdY
9Lkqod2mb4J+FS4w9eBM2bSnEp5WhPIFIvvAIcZOXdRHCbUTW2UjHfaBnNVc
EZ1jSuhLrzmxibcP7jbY1kdeUsKy6Rf6k8ZuUM35aapWrIQVzgbu0YIe8L3C
zMR/gTK6jxEB27Z7g0XnsmVaIsoYxfhxvuOJN2T96Oj6ukQZnTdFPNqj4AN2
uj6BntLK6Alb2fbjPlDxIO72Hg1lHNQ7aibd7AvnMjvmbbVRxtNZum5Oyf7Q
W3X7lYidMlbx9WaVvfEH/R7v63WOyshl/l6XsfQwDK+cQ2xyV0ahfZ7fBC8c
BptrSi6sY8pIO1TmbBp+BFZFeVeq3VRGaQFmFy0mEIKy110cylDGGIHSg7Zv
AqGxls/uTrYyyr7gNgpLB8GZeXEjCoXKyPfl5D2N20EwGPJolXSNMrYNNNa5
VR2Fhz58JwT/JccbJq1bu+I4bLaNXd+vo4KKU5aZBqtC4bCYdqAgUwWbGGrX
ireEwo1XrYVqhipoE/Kk4fKJUJgwXanub66C2hrCp/d3hUK6QfaqP7tVcF7J
c+PizNPwU6Vi3orzKrjim0ervPEZuM8barB4r4Kbr6rqXm+MgPePLgr7dqug
wIro30MikSAQoGkS109+zyj4c6ZpJDiNHKl8N6KCldsUPPdUR4Jw359Cd35V
lDnYYD9ZcQ5cGyQSQzVU0TTJP6uLEwWSaYYuRadUscUseW4Y7TK0uQfffRqu
irEh7OAzwZchUePhZN15VXQ099888fwySJVSLvTEqeKWu0scJNSvgNTbBUWL
slVRwvkkdayKtMjL+Z6NqjhYdFtn548YkD7qkLNSnooely+0+1y7Cu0Gcd9V
lanY4OIgJ//8KiTPf8FiqFHx6C1bCdGRqyAdx2o206biev7ADfEm8SBTIPcj
yJSKn4ashDx+xINs3yeLZj8qZpQv6ZPzvgYrrQ6PRlRRUdf3w2eJ0GR4bZuW
oM+mov4OVa+n95IhalcDc7SeilIDzCcpH5Jh0l3lvP0bKt7LmKj7Bteh8cR7
efVBKkakX4oWmZcC4XlGNk2ia/CC9KXg8dhU+CwgXixjvwY/fnyt+/hgGpSU
Fx2/P7IG5w2ucfL7kwHoUhpbN74Go7XXMNbKZQJHoCqnb2YNaobLNC4wzIR3
W1+1SvGr4fCdSZmlZzKB1zNEnJZSQ6HiXvtgwdvAElj9ZZuhGj6ryrJNksqC
Ksvzjt9j1bAg/dzAhS3Z0PDBiaWjo45lXZLtsfPzIejp8p9i+zVwtfIcLf29
D8GO31rue8xaFF65bVfNpRJ4+Gs8WPOtJsoE/VBUt6oA63Ybz71hWnjK/yVL
sOoZUBf7bh4L10I5Aatvn148Az7jiyqnI7WwyfDQhmetz6Agv7o/7aIW1tlm
nvP4+gyETmu7dCdoYVBZ1JFQqSqoVJHctTtPC0tCv8q8OFQFGgHtFk6vtZBB
18qKEH8Ogkv2atkr07DeQnfjBqtqyDHdvLxTlYaSLwzlztlXg9kZzZ971GgY
qLFiE9ulGi5N/mJ7aNGwPCZvKy2gGsQ6k3cf1aPhFK3e62FSNcjmvo6+ZknD
f8oVXT16qkHLePPXN4E0fPlnYaTjgRpoOqHZYn+Mhv1XDpeVHq4B/0fLH3ce
p6HhNg/9ZSE18M+a/vD+UBquHo6Yzr1YA3pLw2QnomgYPdSSEZJfA8Zdpebi
N2ko4m0cnv61BuyPauZas2lYQqvu4uyvhcCmJQZ5XBo6rZvjcdu7FmLXfGua
94KGZnamp4MDaqGuo2imqJGG2yk3rBadqQWmoZ6pZDsNb6pUdLxPrQU54Y2D
77/Q8HX93OvCzbUwcN1B2U2MjoPpN+YnMtjAP6H/pFycjvbJBq0n9NggZ7nS
crkkHV+189/bhWyw4+sOYMvQUWac4vLHnA11rm41VCU63mm/5vvJhQ0FGr6u
w+voKNkUJKN1mQ0BT8+mBznR8efHd+PJPWzgDbQMz91Dx2f9FKG+T2wIXaKg
H+1Cx3yPC8aKX9gQtbeiJXM/HVvTrymGT7Ihbd4Uf7MfHb0TRqivhDnwwsRj
v3oEHbekRZZG0jhg7Vv88NE5OiYI5LXQdDjQmsjPZ3SBjnatLn1NehzoHUpL
tL9Cxw7I6/9uxIGpC++4Ecl09BRXVnpqywGFRjP1ngI6Hko+k+8bxIHs6cSj
Bx/QcVuvMx47zgEN+YHqqYd01FOczgk6xQFd/zNOix7TcdH0HZ5tJAe2iJdF
6z+no+WtGLfEBA4ctdMYi2+lY8NhJRXiIQd+hx5nybfTMftAWkBiMQfO5HDP
3+2gow/r0tnvjzkQzXNTeN5Dx2Se9KeoSg5kpNywGf2XjuwbFnEGDRx42b24
2IyPQN2eLUse95FWtbufO5dArSLnaPMBDrzyTcsVnk9gfpiN5JshDjTy0W7W
CRFoMOBh2jDMgWY563NmywgsOFWhbj1N2iM5LFeCwMS2NXypPA603O8NEZYi
0DHKvavrJwde42G/OlkCbwp9LTWZw4XWPVcdzJQJXNwcO6dAiAtt2R3bc1UJ
XO5+jfZgIelRylZhNQI/x8Z754lyoT30H6M6TQIvRzCXnl3KhY60t+pm6wk8
+d16QYMU6cFVKrn6BKYa8+efk+ZCp9Z+eWEDAuVhsau+LBe6Kqck6jYQOCwt
KBSxmgvd3VJ/TC0I9LlgZHxfibTq3pkcSwLXqhlFUVS40OOb811oG4Gj6aqD
l1W50MunN8i1JTBPNHrEXI305rBeqh2BHU8kr6eoc+HjlbqO8w4EMjOTXfo0
uNAnt6vJdDeBjwp/mtprkfbIqM/ZS6DgCurBCBoX+u//WyPkSmDZ+qGCXDoX
PmHIE64HgVs3ylxvY3BhaE9qhqk/gZnz3tLrdLnwObs/NecIgQ+VJk7cX096
VCNRKIjAB7EHxy/pceFLaMVF7nECczpcPNcySXMEIqknCdS0n/AaI/11ydbT
50MJLLdecCOPxYXhtA8BpmcJPPaLenM+kB5U8c2JJFD/W7TvbdIjWr5eQlEE
/m6VCWYiF0aPlrh6XiTrWx9dXvefK/l2c6MJdPicz7QyJC1oak+NIeerYzLz
gvSYVYzN+TgC76RoTeAGLnxLfLdlKJ5c/wkT+t3/3C2/2TSRQMMh/8JFRlwo
19A2TU0mcGTqGsed9LngzWZjKQSGna8MKSZtw95lvvEmgW9/1jf+Ir1K3Mci
6RaB7QNptUzj/+oVtuVrBoEzf9T3HCZdlB9vaZhF4P0VbjdvkT7Fy94an03g
GrmNEWzSZiZlVkO5BNZKNC7vJy1x9dU2Vj6B0b8W2/CM/8tHr3XMPQJv8SRY
CzZyIU9j0qb/AYE7l/PeLiQdGCxku76IwCV73ysIkjZky+64VEygbN8HhZ/k
eBFxrZ09JQSKXGS8GzD+L+9GdtqlZJ7Wim6uJ52ev8P+fDm5PtGZflmkD/E8
HTqfEnidxbQ7RlrX5MQuWhWBx/NlfxuRnnf1iuPZagKbl8W7CZB+2Z3h9K6W
wMITP65UkvVI0njkrMEl8M+9u2H+pF2D63afrifQnyrCkiWtye7c86aB7De1
8Kpysv68ZWN7qY0EuiWeldhJumYP/74TzQQ+FzynO0iu35V8Sdem1wS+zBda
60da2cTA/dg7sr6HM5O9yPUfi9u2v+E9gTcm25e/J/NS1u3qId9FYL1jvY8R
aevgC17cXgJ37HSs+kHmbSX7xoGV/QQOOFg+Myc9uKzwoN8A2c/iqXfiyHye
zG/zXvGF7FctPe2F+lww5f3rc2iYwCIU7dUj8y1u8sf32SiBE/abTruQ+c/t
VjrsOUGg2Yn16UnruBCgsf5I+RSBesm51BwdLmCwRcBSHoEtAyMF97W58HbZ
4aDHvwmcfzan4g7BhbkmlceFBBmYkiG2SUeTCw1xLSFOwgzUsSAWC6zlQmL3
pxMPRBjoI6M+3ED299pg0VD7pQwUmJbmbVzDBYd8h/AcaQaK/vRKb6Vw4cGy
iYumGgwcXT20MJzcj/o0AzY1ajIwwSn91YPlXJCymPizg84g7+P1p96KcyE0
fMLfdR0DD5xZ+4if3M+sJibsThky8OfPDXwTgmQ/vZ2k/GPLwIpSI37qFAco
3wO79O0YeCnv4EP2OAfsFk9dq3JgoIjY4SSnbxyoNJkSbtzNQEXevZU+Xzlw
pWRq9LMnAy1i42KoHzmgmTxdJneSgVsvR8bykfu/S/HRwDuhDHxt4iEkUceB
hOZpzbVnGFgmd1VQnk2eL8Iz6frnyPnfFvln9TPyfDg+c25HLAMbdJIcS4o4
4O3E234xi4F3qM25u5I5kC/388vUSwbWj8wkxezmgKNj4HabJgZu++l1tX8X
B0QSR0sLWhioNbSigW7HAa/F/VFubQzsNy4SeWzFAeXfDaotPWQ9tPUtAww5
cOP9TdeCcQZGB+nSHsiT80kw6nCV1saaqq0d9p1sgOZyo0pZbYyU5LP50MaG
YVHdPJnV2ti23TvX+TUbLM6qBzcraqNrxc0l5vVsEDoiIYUa2qjhnWP5voQN
YdsGbGRQG9Om7ZhdsWw4InKhvslNG5ULKwvjNrDhoqT/v7s9tPHxkxy/ESYb
MhXsFw57aWNniVi98To2vNZVMRf21cbv5oWeHWpsYLg9r9sQrI3F41zZSnE2
TJT/4D6M1sarVzMSdveT9yufg5z4R9p43zdNjhZWC0ebt9TYC+lg4kpjr3/y
asAkKJElmq6DN/hvsBK/PIcHlpkeVevW4Xye3sNDi6rI+1FfgVL7Ogx8oCpX
8Okp1F3JO1zkp4tEalJv/UwpHPuRZTMmsR4ffzcMEf/wCJ4n7vuk+Wg9/hC7
GLRfugjaxLOnkrboYfgg/66ij/dhzQE5SuGoHsYtmqc4eSkPTNLkXk2c08ff
gmK/So5lwZ8Fver6q5gYsLfOy08jHQQ6a3hVckws2uxczJJNh0WFORwzRSZO
31ygvHxhOqxy9HN1UGWi+W4h138Hb4HBfb6UY3Qmpi46xVO+fQtC7FYvLNnE
xMKSy8c/rL4FvGzHIYYPE0tVvWf0V6XBuGnr7bWVTIyXPfAi4ngKBBn8I3+h
iolefIqxnXtSgEePSx2oZqLWlm+lJptSgE92a3wal4l0Nv+qHUtTQGS4Nlys
hYlLi0TMHLKvAyW2eN9kPxMtRYhbM++SYXt7vHzFQhbaJumbOJsnQZHX9tQt
O1koUPZKa45bAlTOLXYftWdhxWB3+z6LBKhPltSKc2ShzV2qVgeRAL117VVt
e1nYcCwgX3ReAixV2zu47yALJS3u5vinx4P3v4eI4NMs3LvygbVe/1WgHozk
ZuWxcN3bGvFDwXHA4B+KNS1gIWd+jrq3axxgipnjl/sshAWe/mcs48DuhegI
rZiFYjO0nZ8V4iBC/ap4eSUL6bcPEtkvYqHvS9ruljcsHJ/zOfWdYiyMhs+l
BraxcEW754Dk4lj4Iev6Teo9adUvKZ68GBDbonLWuZuF9jK7ZEyaYsAwPz93
6DML3dx8lg6digGLjYuPXPzKwipKgvuzAzFg1+nL0hxlYXL8kdq7O2PAV5TR
eGSChSYtOQFlmjEQcjs+SXKahQ6R2Xe7ZWIgkjXl8oRH1uttQbmkYAzEvrFT
d/rFQjX9Kyl7x6/AjUNPJv78YaG4sByrovsK/B/DoTsS
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{419.5703125, Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 30}, {0., 0.19741962429923163`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.665850395513628*^9, 3.6658504133145523`*^9}, {
   3.665850446362187*^9, 3.6658504954062366`*^9}, {3.6658505295833473`*^9, 
   3.665850533609783*^9}, 3.6658526259536457`*^9, 3.665852746418008*^9, 
   3.665852858393105*^9, 3.665855473718645*^9, 3.6658562176473503`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"vulPrior", "[", 
      RowBox[{"100", ",", "50", ",", "20", ",", 
       RowBox[{"Round", "[", "i", "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"vulPost", "[", 
      RowBox[{"100", ",", "50", ",", "20", ",", 
       RowBox[{"Round", "[", "i", "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"WCvulPost", "[", 
      RowBox[{"100", ",", "50", ",", "20", ",", 
       RowBox[{"Round", "[", "i", "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"MEDvulPost", "[", 
      RowBox[{"100", ",", "50", ",", "20", ",", 
       RowBox[{"Round", "[", "i", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<prior\>\"", ",", "\"\<post-vul\>\"", ",", " ", "\"\<post-wc\>\"", 
      ",", " ", "\"\<post-med\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.665849471880912*^9, 3.665849563649939*^9}, {
  3.665852457662676*^9, 3.665852475686647*^9}, {3.665852630262846*^9, 
  3.6658526313010683`*^9}, {3.6658527173436317`*^9, 3.665852740795125*^9}, {
  3.665855486943819*^9, 3.6658554983799973`*^9}, {3.665855574318489*^9, 
  3.665855585467924*^9}, {3.665855619920012*^9, 3.665855621630789*^9}, {
  3.665855658875594*^9, 3.665855771882238*^9}, {3.665856056827177*^9, 
  3.665856135098621*^9}, {3.665856366640675*^9, 3.665856400251082*^9}, {
  3.665858073406166*^9, 3.6658581050818567`*^9}, {3.665858250103608*^9, 
  3.665858288988522*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGDwAGIQPbcuic0wZbbdrJkgsNL+YeI6sbfyJ+1h/OrA7ITX
8jfhfAYweADnc/6cfTJH7xWcX3iovudN0Wc09T/gfL0lky9uWfcTzn/qlyFz
34LBAcafLtUmuzCB2QFVP4vDbCjfsmjHeuYzbHD5w9dnB+Src6Gp54HzDXv+
2Ul48sL57s+s7huEC8D5z3W3uX55I4imXwjOr/7TabynShjOZxd8kRmiJYqm
XgzOZz3L6s69F8H/fW5tzqRCCTifEaxeCs5/Gr5OUk4OwXfsyMs9sVYazp/6
bwenc7wsmn1ycH60zGGfO58RfJ4D2m+UQhXQ1CvC+ammi75G6iD45XUVQQpf
EfzWV5MvnzunhKZfGc730eJfwTMLwe9da3bAJ1EFzX+qcP6p4MV/SiwR/ANn
83t0mNXg/E1ZjQ5n7qqh2acOj285b3uLvC3qcHnn/zHN82s00NRrwvkp1/Z/
2hGK4Ns1Nm1NVNCC8yflf9zN81wLTb+2w0wo/1HD0mfz92nD5V+n7kw51K6D
pl4Xzv+QK8R+NhHBX+d5+k+arh6c/yzDwIz5qx5a+OjD+VKrb01uP4vgNycU
LTrrbYBqXwOC//2PZK/3TgRfY/f0madUDNHUI/imyUf9BTsR/ANzRCXOfEXw
NQ6IdvlFG6HpR/B9Wd/IXtqH4H+4/eTwSS1jNPXGDnOg/Pw5vcKd/Qh5MY+o
tiPHEfx9n9V+/v+P4AMAGXoHkw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[{{4.0816326530612243`*^-7, 0.05}, {0.19628680808524648`, 
        0.05}, {0.39257320800722767`, 0.05}, {0.44577244554565076`, 0.05}, {
        0.4989716830840738, 0.05}, {0.4989716830840738, 0.05}}], 
       LineBox[{{0.5056215877763767, 0.1}, {0.5122714924686795, 0.1}, {
        0.5189213971609825, 0.1}, {0.5255713018532854, 0.1}, {
        0.5388711112378912, 0.1}, {0.552170920622497, 0.1}, {
        0.5787705393917084, 0.1}, {0.60537015816092, 0.1}, {
        0.7117686332377662, 0.1}, {0.8181671083146124, 0.1}, {
        1.016862365051536, 0.1}, {1.2155576217884596`, 0.1}, {
        1.4963977253785175`, 0.1}}], 
       LineBox[{{1.6051529108610896`, 0.1}, {2.0277693003971415`, 0.1}, {
        2.4221823030996563`, 0.1}, {2.496995096542851, 0.1}}], 
       LineBox[{{2.8496164062655933`, 0.1}, {3.269255285030313, 0.1}, {
        3.4961664040042297`, 0.1}}], 
       LineBox[{{3.6606907769614954`, 0.1}, {4.0851473693561, 0.1}, {
        4.481400574917166, 0.1}, {4.496908837352733, 0.1}}], 
       LineBox[{{4.869858556077015, 0.1}, {5.291337637700287, 0.1}, {
        5.497613632313503, 0.1}}], 
       LineBox[{{5.684613332490021, 0.1}, {6.110910127743177, 0.1}, {
        6.4967069173160334`, 0.1}}], 
       LineBox[{{6.5294116985951165`, 0.1}, {6.919709882613518, 0.1}, {
        7.3430291670953425`, 0.1}, {7.497397335691973, 0.1}}], 
       LineBox[{{7.738145064743629, 0.1}, {8.166282062855338, 0.1}, {
        8.49646905581726, 0.1}}], 
       LineBox[{{8.58662383656583, 0.1}, {8.978762223442784, 0.1}, {
        9.40392171078316, 0.1}, {9.497304536377365, 0.1}}], 
       LineBox[{{9.80087781129, 0.1}, {10.190038687395623`, 0.1}, {
        10.496354691625394`, 0.1}}], 
       LineBox[{{10.612220663964667`, 0.1}, {11.006199253700174`, 0.1}, {
        11.433198943899104`, 0.1}, {11.497096076216168`, 0.1}}], 
       LineBox[{{11.852403409696816`, 0.1}, {12.24340448866099, 0.1}, {
        12.496284105355954`, 0.1}}], 
       LineBox[{{12.667426668088588`, 0.1}, {13.063245460682648`, 0.1}, {
        13.45126902887549, 0.1}, {13.497011113361896`, 0.1}}], 
       LineBox[{{13.872313697531755`, 0.1}, {14.265154979354483`, 0.1}, {
        14.496177577624438`, 0.1}}], 
       LineBox[{{14.691017361640633`, 0.1}, {15.088676357093245`, 0.1}, {
        15.47854012814464, 0.1}, {15.496890209045546`, 0.1}}], 
       LineBox[{{15.901424999659458`, 0.1}, {16.296106484340736`, 0.1}, {
        16.497485482694415`, 0.1}}], 
       LineBox[{{16.723809069485437`, 0.1}, {17.14371643022892, 0.1}, {
        17.49665364388261, 0.1}}], 
       LineBox[{{17.535420404138865`, 0.1}, {17.96014547851223, 0.1}, {
        18.356667166052063`, 0.1}, {18.496096898078356`, 0.1}}], 
       LineBox[{{18.745393629190676`, 0.1}, {19.167141192792712`, 0.1}, {
        19.265527236984838`, 0.1}, {19.363913281176963`, 0.1}, {
        19.413106303273025`, 0.1}, {19.462299325369088`, 0.1}, {
        19.474597580893104`, 0.1}, {19.48689583641712, 0.1}, {
        19.493044964179127`, 0.1}, {19.499194091941135`, 0.1}, {
        19.499194091941135`, 0.1}}], 
       LineBox[{{19.505343219703143`, 0.05}, {19.51149234746515, 0.05}, {
        19.53608885851318, 0.05}, {19.56068536956121, 0.05}, {
        19.78034248069897, 0.05}, {19.999999591836733`, 0.05}}]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxN2AkwVX0fB/DL1S37RZTtRrZC1kiUe0u2h4RSeLIkSpSlTClCihDxpqJI
2vdbWXqQZIsUSrweobQg2cWVtfs+T+/0//ad/8yZz8w585szc+ac7/8oegU6
+vBSKBQlHgrl3+OFCC+arneG6flz/+YW8+M2ttTAohrmL4c5+Hv2LXpLfLKr
UjX+eDtx9kHGgOpQB7FY85ijsNYH5pL7l4pjv91mOga6ah/3hk/PKxXkyYD/
e0ml51AD7Nw0nB1g+pG4lVbs4nUHfu/v+NI65hPx59c9q3Q9PhOPe6+lvqrq
JuafzKjZrdVLHNZxPVTMfJg4uDwysX/vKPGHosoL73k4xPa5/Pdfp4wT7x5x
1U8ag+O07/5l7fyd+Gx906RaAnx1z6wJrRjWeCLmxmmCc4RUIzoHYKOtxhcb
aRNMuergf9Zd5tM7dqXli+BxtZHnJl9graupDXnsSeIZBb2YlfRZ4i47X7kO
Iwrrl9NkYuUveVKJxVm3LLakwYk+tYHC9XCvluRUURtsPeF2zPcrfLPsuojU
d5h2Yii9go+PxfgZNrNC/sg9hgIc9UC8/KAJHDLtPL/7JuxrcXGHo9QcYvt2
DUGNEXjl3oL71Foa8Q9l9ajCg/Mw7+8M+0A1AeL3x5Ynvh2Cp3Trqs0KBImz
LFmiDg3wGrfcze69sHjP7qnOcbhzr2qWP1WIRfmZB8xHsx1rvonCcXHnukLl
4Fe5kSGpdrBUhw+VHQVfNdBT/NwJ6yb+MF1oLUzsqVn0o3hahNiy27hDZwud
+MuyR+Zj/WLEiw/v8dEYhbfWKsd4TcJnZduvnuPCr/1SK1/PEWeJ/cxDpjk/
Lx9THC66EWR2jwFf6VxfHr8CTlTUWLPDHnbP6DJdFA3rSmavasmFm+dJGv2x
QII4bCZev/gQXEYrtItznE88V6xn1yZ1SWJalLYib/JvHtrfcn8UHvfpy52a
hLvbPZLNKVKsU8rW/6wcZvPGJr8UGlz1wsqiTQi+XqA7GyQNx16XyaOpwhbR
/Yp6TJjmXpLs5vzb+ZJe/nkJ8Jy6OZaCT2BK/du3dmkLiKfr7+0+FbyQ2HBk
YEt+OxwkoWXWYilNnKRcX7DrMHzbIEBrOgdeaWr6taIOfm4hcjWxB+63Kn9j
OgSL2uznGeHAeuvVda7MwJs3vHd3osqw5ps8lDB5mMvM2mhRXEiHu7awpRkM
WCLopNloF7wmLmDP83uyxGd+FPCbecgT262V0Wv+D0yLDXPdVQl/Urs7mPMO
flrTHj0zDht+6/liNwuzZTi2l6gMltPP5DNVzHhyRvnhTH/hBRZ0OKFY5WOv
HBwqbHoneSnce5oyk38S/lOuwrZ9FDa2SxIXe7WIWKhUo3+xkwKxl1s8ezgB
LpjqDiophbfXSDpea4NF0tfpJ47DncF+ol8n4UKblD7zWfikyqPqyxRFlsUC
t5AG87+Y3ty2K1wqLJqrtrVQAC7asW/+PjGYXi8Q082AfQwuc1w04UEXYeUn
KfCBiFBHBQ4c05vaWF+/mDg6q+1BdBsc4ah00rAHDtesDk8ZhA/R/P17x+CD
o8VeCybg0A8iruum4QN1ng7BP+D9RTlWWTxKrP/3j0Jm4OK1VJos7JvQ8GTP
ctjVdVhv9U7YVl30ptB5uL9vcd7dWTjpnmGp7TZlYrm/HV5tToPvUva896yD
6S/1vT63wiFnprp8euDrU+/U1IbgFo+yXT0cOFg8V8B6EhZ4dvXOrRn48oGz
tgIUFXL/JupxA35UmPepJCeQAb/YeGUmZCX8LCW+0j4LLq0LTNSkqhLn+B1h
1b6DC61mPQz74FLVg5HZE/BahvPc6Wm4QnJFshMXXicsteABrxp5Xqv4OFkC
NPjFaA77qRBc9ymoJEQCbs3ynbXSgntcPVfJW8PUxg1FzyJghg3TKCAP1lGp
fxe7cAmxGXfr0YvhsFC+QUdXDtzkJ2Ki+RVOOhJP4wzBFul8b56Mw5eVylcs
noK57MgLsbPwVuPV1D7KUvJ+Kng25buBD1YfHeZ+EIMzFb6c3bsIjgprrDxj
DHs3P/1W4AQ3aChuEn4Mmx6Jzt+moE58KnDksdAXWI5u6VQzAN94kDkYMwb3
R1madH6H9Ry+HV87DR9QvNCU/QMuHrFU5PJokO9Fg97oxlBRuHtfVuyIHEwf
H+v7vAI2DrVxaHaET4ZPyD6Ogz9FXeu+WALv2HdfRVdJk7jPp9C7/Djcf2OD
sHkJPPi1K796DBaxC/ygPQFr5UwIpE/DdlLRBhQuHHBI0NOXdxnpE+y1jHwj
fnhQQFeAnw4HZGzOuyUPD2mEu/+hAQ/bVuecsPjNe8Tn1m2DX7UN8pyv/m2e
9cuZHcu00Gd8dQypHHhI7IalzwQ8USTvUj0NU7xP+y3lwvzCguEneLVJ/5Px
mMjawA9rPuwqk6DD9k6lczPl4X2T59cra8BFa+zfLreAKQlzfMy3wUkyQeE7
0n6bd6c19XgdPK9N+5GVtA7xUc+9l+tsYPFN1R6HXeBsSzn5ZTvhnWVV03wB
sJZJcGt7yG/Xh1bVWIXC43myhXlhsO/Gqgd+h+HWkaCbCpGwbYpsdnOUDun/
T7Sq0hKj4VbJIPH+C/D3Gekkm0KY3u4sITgEL3mcdu6Fsi6xhoqSZftqWCuZ
PTawGdZZF/Jy/3ZYb3LlZW4gnNuYKbxuP7yczQ2NC4ebvFtSpSPgENmH7NuR
8Pw38TUmR3TJ/i0vzquzNhoe40jIDMXABtufbRCLh6ciB3IDnsKlmZILaznw
klLJBLs/9Yhr41JmSnbCwQ6Cgdoh8Hnq7RM2B+DKfKubOw/BLSLpjzhh8MDO
L5VHD8O8ZYaNYpGwlEzsx4tReqxf+2vfiAqZlli46BNlEz0J5gsZNxq5Bq+f
0y//pgTOCuoZrhuDh9s6K2rU9YnpQq/SJs1gnVWF/kvdYNYmtlPZLth+9xWm
y354U46CceRB2HniwvJr4bBrRruuUQS81VRW+2Uk7P7RRdP9iD7r1/8Yz2Pp
S0eiYV96KmN1PByYmSQRnwxLWbnGVlbDJaOqk1wu/D+RPzMY
        
        "]]}, {}}, {{}, {}, {}, {}, {}, {}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0., 19.999999591836733`}, {0, 1}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"prior\"", "\"post-vul\"", "\"post-wc\"", "\"post-med\""},
       "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6658495407421427`*^9, 3.665849572368285*^9}, {
   3.6658524714993067`*^9, 3.665852476592485*^9}, {3.6658527204236193`*^9, 
   3.665852741346651*^9}, 3.6658528856445913`*^9, {3.66585547678763*^9, 
   3.665855498954513*^9}, {3.6658555769207067`*^9, 3.665855585939986*^9}, 
   3.66585562235098*^9, {3.665855661616095*^9, 3.665855759425413*^9}, {
   3.665856058305735*^9, 3.665856105102096*^9}, 3.665856143005558*^9, 
   3.665856222182929*^9, {3.665856369022781*^9, 3.665856400689761*^9}, 
   3.6658581056328983`*^9, {3.665858260741053*^9, 3.665858289890106*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eVulPrior", "[", 
   RowBox[{"locs_", ",", "n_", ",", "m_"}], "]"}], "     ", ":=", " ", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"probInter", "[", 
      RowBox[{"locs", ",", "n", ",", "m", ",", "i"}], "]"}], "*", 
     RowBox[{"vulPrior", "[", 
      RowBox[{"locs", ",", "n", ",", "m", ",", "i"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", 
      RowBox[{"Min", "[", 
       RowBox[{"n", ",", "m"}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eVulPost", "[", 
   RowBox[{"locs_", ",", "n_", ",", "m_"}], "]"}], "        ", ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"probInter", "[", 
      RowBox[{"locs", ",", "n", ",", "m", ",", "i"}], "]"}], " ", "*", " ", 
     RowBox[{"vulPost", "[", 
      RowBox[{"locs", ",", "n", ",", "m", ",", "i"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", 
      RowBox[{"Min", "[", 
       RowBox[{"n", ",", "m"}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eWCVulPost", "[", 
   RowBox[{"locs_", ",", "n_", ",", "m_"}], "]"}], "   ", ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"probInter", "[", 
      RowBox[{"locs", ",", "n", ",", "m", ",", "i"}], "]"}], " ", "*", " ", 
     RowBox[{"WCvulPost", "[", 
      RowBox[{"locs", ",", "n", ",", "m", ",", "i"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", 
      RowBox[{"Min", "[", 
       RowBox[{"n", ",", "m"}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eMEDVulPost", "[", 
   RowBox[{"locs_", ",", "n_", ",", "m_"}], "]"}], " ", ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"probInter", "[", 
      RowBox[{"locs", ",", "n", ",", "m", ",", "i"}], "]"}], " ", "*", " ", 
     RowBox[{"MEDvulPost", "[", 
      RowBox[{"locs", ",", "n", ",", "m", ",", "i"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", 
      RowBox[{"Min", "[", 
       RowBox[{"n", ",", "m"}], "]"}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.665174755241143*^9, 3.665174801879972*^9}, {
  3.665849057552579*^9, 3.6658490584786453`*^9}, {3.6658492652795153`*^9, 
  3.665849272332588*^9}, {3.66584944471832*^9, 3.6658494588320932`*^9}, {
  3.6658520543348293`*^9, 3.665852168047941*^9}, {3.665857992870357*^9, 
  3.6658580401287394`*^9}, {3.665858121720558*^9, 3.66585812746985*^9}},
 NumberMarks->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"eVulPrior", "[", 
      RowBox[{"100", ",", "50", ",", 
       RowBox[{"Round", "[", "m", "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"eVulPost", "[", 
      RowBox[{"100", ",", " ", "50", ",", " ", 
       RowBox[{"Round", "[", "m", "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"eWCVulPost", "[", 
      RowBox[{"100", ",", " ", "50", ",", " ", 
       RowBox[{"Round", "[", "m", "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"eMEDVulPost", "[", 
      RowBox[{"100", ",", " ", "50", ",", " ", 
       RowBox[{"Round", "[", "m", "]"}]}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"m", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<prior\>\"", ",", "\"\<post-vul\>\"", ",", " ", "\"\<post-wc\>\"", 
      ",", " ", "\"\<post-med\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.665852173651382*^9, 3.665852217895938*^9}, {
   3.6658522497519827`*^9, 3.665852288347497*^9}, 3.6658524845772877`*^9, {
   3.665856425503748*^9, 3.665856506698454*^9}, {3.665857817087061*^9, 
   3.66585787014142*^9}, {3.665857917555111*^9, 3.665857967392692*^9}, 
   3.6658580455949383`*^9, {3.665858133094289*^9, 3.665858148049849*^9}, {
   3.665858204708712*^9, 3.6658582151322947`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxN0X1Qy3EcB/Df1sM2m62mJHc6Mp1V3PUsycaSLFGUHDO1NNRdZa7QHVnk
nHRJkpL0MA6RjijMRKEyh6bicpXD2jLXE79lD83D8f3sffe5z73ufff55zNP
lL4hmYhhmPj3/NldLVpnDBvlYH8zyqEJ2jYqq8Dh+sqicyvGkKW+bKfllePI
LlvUmvZPE8g9c5vwUfcfyAKdgOpxEEdeG9Gx/LabHjlUFiDhtoDJhx207j3g
rq1ft9vpwG3MGvPBMXBTx+bzOA6+dpgRnG4CVwQ96xkiTP7zIEd6yY/5ngYW
z6iO6nQBGzs3hRTywKdyaezYdPD9sX22/c/AnxM+Dex0+4mspIf58TvBd+Sy
Y95ZBuSPtmU5PXeNyKoYUU4B04w8N1/4hh0/hVyalCZIKrEgp1Sx9bH7MO5/
B+UFaFNmEZB36uqEpOdg7/nXMyQSIrLb66de0Uwb5PYhUiRxN3ivZU1K4yMw
qzF09YgK/HaXD8tTA/bm1Z1ePQ4+OmcBIdkEnn2mVaCbAjdMEzXvJdhy4/6m
mxMuxZyMNuAP+sr0XHsw+UufRxEV7N81q/+iA7gkBDvnHAzGZUMx+YlgbXMq
aek9q/vKEbnGwQ45vk3a5vQQbPFZlHl7mz0y1Z139R2VhBx2XHIsox7MVHhh
vVFkZF7WenOrAVwjO1k7v4KCvCPO/yUlchryg+7kYgUO5igbiOqzVOT9nsKc
mCfgW8epJvk38AH/6lTPCTB3MLCvdBLMuksoXmcEk08q+XZTYF1iKVGO0f79
5zXnVZDovsQGLCwsKIuig3Xq5v0LXcGUs4yg/sVgj1XiH8Vh4AZ5FE9WAg7x
DyhqVIO/jBd01OZNRx73i8lz9aUje39dNExQgTtZmV0ZUgYyf3jYh810QDaw
ByMIInDftRPVFc1glfrxuj0UR2RzUn0oJRE81j6QTW4Cf49ef3HmCzD+TtHK
GgBPVuDdXlrwz4TFGt8JsGElf0/gpJVZYkOwGZw958aH7Cmr3vm74oHFqqeH
VJswJre87E86OEb73COhRLBJz4h4ZGtlzQXaChK4vCweV/iCl/AdB5cJwfli
R7LkJvhKyqZDdAtYfzM6MC1uBvK2ht6VpMtgp6r6ShsVWFmYZ7BYwL8ADDI2
QA==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxNzA1Qy3EYB/D/1su2NqtmebvTkems4q53STaWyhLlLceMlsLcKSPRHVnU
OdUlSSIpxnmtjijMQqEyh43J1a28rS1zeuG/7KV5ufN79tx973uf+94900UZ
K9KIGIZt/ZO/rXpo8MKwQQ727wY5NEHbSmUNOMZUXXpq4RCyNIjNXFA9jDxx
nU7f/mkEWTOtCR/0+YksMAqovvtx5KVxHQtueZuQo2ShEu5DMPmgh8FHA1at
/7rRxQhuY5y37R8CN3WsPYPj4KsH3SMyrOCq8KeafsIop2VFjaaeqedILwYz
3tPA6eNrEzongi2dayJLeOBjeTT2qgzwvaFsZ+1T8OdNn3q3eP9CVtKjg/md
4NtyWUHAHjPyB+fKXM0dC7I6SZRbzLAhTysUvmYnjyFXpO4QpJbbkcU1bNOq
bIz73+H5oQbxJALyFuM1IekZOGDG9UyJhIjs/eqJfyLDCbm9nxRP3AbeZV8i
bmwBsxqjYr+rwW+2BrL89OAA3rXjscPgw1NnEtKs4CknWgXGMXCDm6h5F8GZ
K7bxpetaPnJipBjT4gTuMVVn5LmCyV+6fUup4BDVJO05D3B5JHbKKwKMy/qT
ClPAhubtpHl3Hf4rv8v1Hi7IyW3SNuYDsD1wdtatDa7IVB/elS4qCTn6iKQg
sw7MUPhj7xLIyLw9y22tZvB5WdGFGVUU5M2rQ15Q4t2Q779NK1PgYFsiNV4V
Q0XmKBuIupPgvX7C3KTH4JtHqFb5N/C+kNrtfiNgbl9Yd8UomHWHULbMAiYX
KfkuY2BjSgVRjtG4bgW7X2q9tZyX4aJ7EiewsKS4MoEONuqa986aDKacdA/X
zgH7Lk7/WRYNbpAn8GTl4MiQ0NJGHfjLcHHHhfxxyMPBSfmTg+jIAV9nDxDU
4E5WlipT6o7MHxgIZDM8kM3svjiCCNx99WhtVTNYrXu0bCfFE9mWWhdFSQFn
T4jtIReBh9p7c8hN4B+Jy89NeA7GuxStrF7waBX+1t8A/rVpjj5oBGxexN8Z
NupgVro5wgbOmXqjJ2fMYff6obhvd9jpkbVWjMEVBWcp/D50cSyueYeiiGCr
yT2uxdnB+rO0hSTw6cpkXBEEnsv37JsvBBeme5Il9eDL4jUH6HawqT4xbMfq
8cgbGt4tIl0CM2vqqp3UYGVJvtluB/8GHhT69w==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxNzAlMk3cYBvCv5WhLu1JqwSOROOyIBTThHiK2WgQsQ4sXi9ZOygBXE8Ea
gZE4LBvGDAhjCMhWELQaT2gUhWEtKsxB7bKtheoCARa1tFDD/RV70B3J/m/f
5MmTX57k/VBSsC+XiGHY8X/yb+ufWAIxbJaL/XezXJqof7+uFZxia6m9tGMO
WR7FYW1vmUdefdhkHni9gGzc0IXPhiwhi6wiauhZHPmTtMHt94NtyEnKWBnv
CZh8jmEJMYL1R6Y/87GC+5lXXGfnwF2Dn/6I4+Bb5/wTCpxgRfxz4yRhmdu7
r9XYwTJz5deimX/SwHmr2jK0q8EO7aHEGj74u3Ia50ABuGeu2HvsOfjNsdfj
+cHvkXX05GiBFvxArTwfUWRH/su7qcz40IFsyJSUVTNdyBsqxX9wslaQG3NO
inLq3cjSVo7tQDHG+9/xFbEW6RoCcr71tpj0Czhi451CmYyIHPz7z+FCphfy
wCQpnfgF+LR7t7SzF8zuTEqdMYCHjkeyw8zgCP7t71Pnwd+s/4iQ6wSvu9gn
sq6AVX6S7tMEbx5HOJ3lNzTFTZFjLIcXeNTWUlDuCya/HQmtpYJj9GvGLjPA
9YnYpcAEMK6czKzMBlu6T5C2/uTxXzejNjN8kLP65f2sx2B35OYz94/6IlND
+DdfUUnIyRdk5wvbwUxNOPYyg4zML9rr6rODryirrm5UUJA/PxjzKyXdD/nR
cG6dBge7hNR0fQoVmatTEU0N4JIwcVnmM/C9C1Sn+h34y5i2E2ELYN5E3Ejj
Mpj9kFC3xwEmV+kEPitga3YjUY3ReCqptvkFfZL7W7ykR+YFFtdUN2XQwVZT
d8mmtWBKg3/82BZw6K68pbpksEqdwVfWgxNjYms7TeC389WDVys+QJ6PzqxY
G0VHjpjePEUwgLXsM/pCuT+yYGoqksNkINs5E2kECXjk1rdtim6wwfR0zylK
ALIrpz2Jkg0uDkodJVeB5wbGS8ld4EXh3stBL8D4K00fexy8rMCHwy3g98e2
mKMWwPadglNxyx5m59kTXODS9XdHS1c89sBFzSO3x05PbHNiTF5qQ89i8+E3
XIdv+ddJRLDT5p/W6+1hczNtBwn8Q1MWrokCfywImNgmBlfmBZBlHeAb0kNf
0d1gW4cw7uTBVchHVS93kq6DWa3tLV4GsK6mwu52g/8GN5QCIg==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxNzA1Qy3EYB/D/1ss2m7VmebvTkems4q53STaWyijlLceMloq5U+aI7sgi
51SXJIn0wjhEdUTRrChU5tCYXKkc1pY5vei/7KV5ufN79tx973uf+949c8Sp
a5OIGIal/Mnf7mzWu2HYEBf7d0NcmrB1naoCHGEsKzi/bBhZ5sdhLS0bQZ62
Watr+zyKrJldjw95jCELDUKq52EceXVU+9K77kbkMHmglNcMJh9l6D004M4t
37Y5GcCtzMvWw8Pg+vZNF3EcfPOoS0iqBVwa/EwzQBjnNq2t0NSwdFzZVX/m
Bxo4eUpldMc0sLljY2g+H3w6i8ZZnwp+OJzu2PsM/GX7574U91/IKnq4v6AD
fE8hP+FzwIT8ybEkU3PfjKyOE2fmMa3Is3NEbzjxE8jFiXuEiUU2ZEkFx7g+
HeP9d3B2oF4ynYCcYqgSkZ6DfebeSpNKicjur596xzIdkNsGSKuIu8D7bCsl
dU1gdl1Y5A81+O1OX7aXDuzDrzoTOQI+PmseIckCnnm2RWiYANdOEjfsIzjy
3K6PeTtJPnIjZBjL7ADuMZalZjmDyV+7PQuo4IDO6b3lDHBRKHbeLQSMywfi
chLA+obdpMUP7P6rfih0DCfk+FZZK+sR2Oa7YP/drc7IVA/+jS4qCTn8pPRE
WjWYqfTG3keTkfkH1lhbTODL8twrc0spyDs2BLykrJqE3PguqVCJg7mqWqL2
HBX5oJcoM+4J+M5JqkXxHXwooHK31yiY1x/UXTwOZt8nFMaYweRclcBpAmxI
KCYqMBrve/OuKry9i/sqWPxQ6gAW5eeVRNPBBm3DwfkzwJRzLsG9C8GeK5LH
CsPBtYpovrwIHBoQWFCnBX8dyWu/kj0ZecQ/LnuGHx3Z59uCQYIa3MHe35km
c0EWDA76cpgMZBOnP4ogBnffPFVZ2gBWax/H7KW4IlsTq8MoCeD0qZE95Fzw
cFtfBrke/DN2TfnUF2C8S9nC7gOPl+LvvPXgX9sX6vxGwablgr1B43ZmJ5tC
rOCMWbd7Mibsdrefykab3U4PrbRgTN6pp4GMxkVqrtk561gYEWwxukQ1OdpZ
d4m2jAS+UBKPK/3AiwSu/UtE4JxkV7K0BnxdsvEI3QY21sQG7dkwBXlr7fvl
pGtgVkV1mYMarMrPNtls4N82cQNs
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {1., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{1.000000081632653, 4.999999918367347}, {0, 1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"prior\"", "\"post-vul\"", "\"post-wc\"", "\"post-med\""},
       "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.665852192884285*^9, 3.665852219017213*^9}, 
   3.6658522578350897`*^9, 3.6658522905141153`*^9, 3.6658524893546457`*^9, 
   3.665852891828519*^9, 3.665856228076453*^9, {3.66585642899955*^9, 
   3.665856507894803*^9}, {3.665857818944399*^9, 3.6658578229851627`*^9}, {
   3.665857853598749*^9, 3.6658578714917917`*^9}, {3.665857934162449*^9, 
   3.665857968706696*^9}, 3.6658580471674757`*^9, 3.665858150073167*^9, 
   3.665858216422866*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"eVulPrior", "[", 
      RowBox[{"100", ",", 
       RowBox[{"Round", "[", "n", "]"}], ",", "10"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"eVulPost", "[", 
      RowBox[{"100", ",", " ", 
       RowBox[{"Round", "[", "n", "]"}], ",", " ", "10"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"eWCVulPost", "[", 
      RowBox[{"100", ",", " ", 
       RowBox[{"Round", "[", "n", "]"}], ",", " ", "10"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"eMEDVulPost", "[", 
      RowBox[{"100", ",", " ", 
       RowBox[{"Round", "[", "n", "]"}], ",", " ", "10"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "100"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<prior\>\"", ",", "\"\<post-vul\>\"", ",", " ", "\"\<post-wc\>\"", 
      ",", " ", "\"\<post-med\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.665175506556279*^9, 3.665175509836368*^9}, {
   3.66584925875561*^9, 3.665849263620953*^9}, {3.665852320775127*^9, 
   3.665852339359255*^9}, 3.6658524863276043`*^9, {3.665852998985382*^9, 
   3.665853005804085*^9}, {3.665856244968588*^9, 3.6658562764373913`*^9}, {
   3.665858158714777*^9, 3.665858188119739*^9}, {3.665858379886496*^9, 
   3.6658584886977663`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQrdT/d/E8uYN2s2aCwE77qF+RMS/S39vD+LdU2yye
pf+H85dWM/5jjhVwgPF5N89fv9xfAs6f4/aHyZBXAc6fl9T0WMxdBc63Xfg8
5aSFBpx/om/ZbJZ6HTj/VlripKURBnD+fPF49fW+Rgj5+Zzif3NM4Pzkncrh
hhlmcP7c6hyH7EgLON9XNKnlZYkVnO/tcFzCL8cGzt/vdJP9e68dnP/pG8+F
S0EOcL6OaKrLXB9HOF9xvvCzzmgnOH/vx5/rMyOc4XyRDWbLs7Nc4PzDh7iK
C8pd4XypeWLpGUVuCPOfVnQ0NbnD+U+/CF3qb/CA879FuHyYX+kJ5x/SOGN9
qd0Lzjc92L3+e7M3IjyOLgywn+oD57+S9T/WudAXzpewN0k5PtsPzmc8k6+v
vtofER8TCgVtQwLg/D1Py76mX0Dw+wrUPyiHB8L5m+9/rrt5BcHf1pKtohAb
hEgffP9jE+4g+BMc7zEqRQbD+R9WZewpeYDgL/nBx30wLgThv5qEgnnPEfzP
K//a/80NhfNZ9mxbHPoawf/MLC1nXxyG0G8wW0fpE4K/mC19aVteOJz/Xuie
Sc1XBL+fuTAiuzgCzpe79WH51p0I/roNBd///0fwAbbtpyk=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
+XHx03Wwqj6vxn2qHlGyHFcYdPXveHXdwPRTM9w+9o/L5naYZ2feUdMuWCfU
rX7LB9j/0TbWqWmYqpmWd4VjD2neOm5CXhl227DH0k0NLnYO8UzWgn8W3zrR
TuwhOGON1rFda6PsXu2JXdWD32YqlnuZwoeJ+L6uA3DKWVPxLE+4kcp0NPA4
LKcdG9R1/T+ff8QaKFcBr514Z8ZXDR/lLZZfWwd/MDizcaZhDxHv5vraLaGN
su/4vu/vmmDJ3qnih8/hNSpXD8e9hqtmur5pfYIPl7IFfJ2D+6QT/PZy6ZPW
u8PpW7gDLuv9aHR9J7x17YPtkZpwrErU+sMUeMndasJutz6hNngr7di/f+cD
jXP5invhEuEk7/WWsPuH15+rXGG+DB4v72B4eUz3rl8i/F7+yPfDFfBS1ZxN
STXMoxtW/70OVmpflVRo1CeURZwOmiS2Ucyszl8LbIGjPeNdf3TB9aFpO4Lf
wko3778+OgHfamg5fmwJvsA09zhUwIC0t+U2mlPacNTgbe8aXQOC3yOg9ttf
Z3lIv1jWh2umStV37YX7jqvmnDaDOS7pHP1jAxunm+iFu8CP613HIoJgmU+h
0ZGRsOQFDie3BFhEokhRL+c//Vn8maZcCAu27lkrVgY7KfhrbqmA01MSArmr
4QGaR7dZ62A+n6F+BqoB4fMg/o9TUhuF/S5HVMswzPhtj2wMrSFp+itDtL7s
8KrciV5jIfjUahOhuR1e6uK4K60Iq6upfxBRgUOzDnILqMOVjBeMuXbBC4FF
4Sw6hsSQLbNE1l9PlQ1JdrrAn+Y4eq5GwN5Cfa/vZ8JfTDP7XtbBYZy8fFVU
Q+Ji0jPair9m6ou3T2+GUzPWp0U8g6XdIwfcO2GT70cdZXth/zCPd/Pv4Hvx
hkMXvsFTedLDm1bgwJc/RtUFjEjPrFaOO2jCkU0K2wkKzHG5wEd0txHZ/xxz
4UJGA3gHT9qXr8awVXas30MLOETmzNfT9vBD3UNTG3zhBVu96cwT8LTFQ3XP
NHjCRPycTC0s6W9l4tFgRD4f78uR3BlN8J3C0ve9bfBY2/s7Gzthd0ZNjbO9
8Ih+csfMe3io0ezH6+/wIMHI84jGmHRfbb1GOjvcq3HiYLgwbHXi9Y9pKbin
UjHKdQfM/uagadpO2HwhjueVJhzPXTPEQhiTv48u5S/5e/TgVjmHGWZPmCrZ
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
jncLmIIHH0bcU12Ei0sDF1dX4f8D/l9+KQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
PQZhrgLl+54eOuTjbKW9cl/bCY/dhSRLBFz1WKo79xFsefgaDXcJPLkwJn6h
ElbW5VUrrNEhbx/VorWNayeC4/SMP9fBjaN/OW5phHn2ZJ02boG1Ao5XbRuA
vZ4Kss7MwrU1TKd9zuwnj4tFenfqtROymhG+LXFwwlNWH9kSmGH8k8nWcvg0
b54cQyU8oHdx0/fq/WT1pDtd/vp24uCZg18/vYIlu2bynryF1yvdPBnZCZd9
b5nW+AyfLGDznpqHP0pFex7g0qWsc5/TI0cBLuoaNojbA29neLwjRB2OUArd
eJKAl50txm326ZJ8yedU5t+0ER218w/kD8D5wrHuG81h54HOL2VO8NYUHjd3
P3hlVPuhZwzcJ3fq68kSeLls3iq/HObRDqz6WgnvblyT3FWrSwobLu7NS2wj
TCyu3PKph6+6Rjl9a4GrApIU/D7Au+8Udp4eh+9W15/5cxkOY5p/FsCvR9nd
XJDmvCYc2nvPvUJbj3T9llk6/GcbkeYi9W5FF66YKVDdewD+eEY544IJzHFN
6/RvK9gw2UgnyBF+VuU0GuwLS38OuBoSAkuGcdgfj4ZFJHLldTL+cz1LP5IU
c2CB1/sZxIpg+11e6ttK4OSEaB/ucriH5uk91kp464n+bvoaPdLGoUvrtm0b
wf6QI7R+EGac3i8TTqtPme5GP60HO7wme7bLUAg+v/aKVN8BL7dwPJSSh1VV
VAdElOCAtKPc/KpwKWOYIddeeNEnN4hFS5+8Pl3W++5AGzFT1C/Z7Ah/nudo
uxkMuwt97CxMhSeMUz+2V8KBnLxby2r0yZVu7z03ddsIpo9RR5Lr4MSUjUnB
DbCUc0iPczNs9PW0nUwX7BXo8mnhE/woSr8/bBqeyZIa3LwK+7R/G1HlN6D8
fa10zFYdDnm1awdJwBzXs0+I7jOgrj/DVDiHUQ9W4EmamDKELdIjPJ+Ywf7S
F6cuHIGfaB+b+cMDXrTWmU09C8+aPVF1TYLHjcQvSz+HJb0sjFyqDaj74349
hDvlFXw/p6Cv6w08+qbv/qZm2JlRXe1SFzykG9/0vQ/urzX51vkV7iUZeZ7S
GFL++LxKLZkd7lI7ezRIGLY42/ltdifcViof6qQAs78/apy0BzZdjOTpUIej
uCv6WUhD6v/RojjxYL8O/FrW9juzK1wj2aTe9jdsIMz4T0w83MqnM2F5H47h
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
Bu59EvxIeQnOK/BZWluD/w/yko6h
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
WluD/wfVMFNP
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0.08}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 100}, {0.1, 0.57796559242473}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"prior\"", "\"post-vul\"", "\"post-wc\"", "\"post-med\""},
       "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.665858423525181*^9, 3.6658584905231733`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"eVulPrior", "[", 
      RowBox[{"100", ",", 
       RowBox[{"Round", "[", "n", "]"}], ",", 
       RowBox[{"Round", "[", "m", "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"eVulPost", "[", 
      RowBox[{"100", ",", " ", 
       RowBox[{"Round", "[", "n", "]"}], ",", " ", 
       RowBox[{"Round", "[", "m", "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"eWCVulPost", "[", 
      RowBox[{"100", ",", " ", 
       RowBox[{"Round", "[", "n", "]"}], ",", " ", 
       RowBox[{"Round", "[", "m", "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"eMEDVulPost", "[", 
      RowBox[{"100", ",", " ", 
       RowBox[{"Round", "[", "n", "]"}], ",", " ", 
       RowBox[{"Round", "[", "m", "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "10", ",", "90"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", "10", ",", "90"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<prior\>\"", ",", "\"\<post-vul\>\"", ",", " ", "\"\<post-wc\>\"", 
      ",", " ", "\"\<post-med\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<n\>\"", ",", "\"\<m\>\""}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"MeshFunctions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"#3", "&"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotPoints", "\[Rule]", "20"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Opacity", "[", "0.5", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.665175515861261*^9, 3.665175521202937*^9}, {
  3.6658492572937202`*^9, 3.665849268184363*^9}, {3.66585534074113*^9, 
  3.665855348365979*^9}, {3.665858548412137*^9, 3.665858581522893*^9}, {
  3.665858634175231*^9, 3.665858638663138*^9}, {3.665858720877413*^9, 
  3.6658587569992237`*^9}, {3.665858841603262*^9, 3.665858873814356*^9}, {
  3.665858936044045*^9, 3.665859035319353*^9}, {3.665859069941676*^9, 
  3.665859101142955*^9}, {3.665859145044325*^9, 3.6658591474074078`*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[
    GraphicsComplex3DBox[CompressedData["
1:eJzsnXVUFV37v+0O7ABsETEQkK59SOkOFSxswcZ8RLFQFBMUVBQbRQlRFAlF
UbFb7ELs4LEV4ws+fPacc2/PH+/6/ft717vWWed6tvfM3NfMnNkzn3NoP2Sc
57AqlSpVqtOoUqWqZa8OnftEVarUieF1XVz5/zIt987uH3dmTHeB1wo56Hlm
jK7ATVrn+adsNhB48KkzA6ILTQS+cfK1odPrWwr8uco4/ZTNMoGHP5t0aHO2
tcBb504zjS60FXh69Kzche/tBe48Zq5sen1HgRfLIvLHaDoLPKzlUvsB1q4C
Xzq1zzBNbXeB33x8ZsdmMw+Bd3J1ed7a0VPg4zMvdo328xJ4difPMfWHeYv9
X3Ftz8KJPgL3K/V9+3u2r8DxHj5XdXIo+/8+7pdy+KUcfimHX8rhl3L4pRx+
KYdfyuGXcvilHH4ph1/K4Zdy+KUcfimHX8rhV+h/hV/K4Zdy+IU3tVMTyv6/
h/ulHO8ph1/K4Zdy+KUcfimHX8rhl3L4pRx+KYdfyuGXcvilHH4ph1/K4Zdy
+BX6X+GXcvilHH7hZ2j7un0LrHZwv5Tj31OO95TDL+XwSzn8Ug6/lMMv5fBL
OfxSDr+Uwy/l8Es5/FIOv5TDL+XwK/S/wi/l8Es5/MLDSO3NOfM/b+F+KYdf
ylGXcrynHH4ph1/K4Zdy+KUcfimHX8rhl3L4pRx+KYdfyuGXcvilHH6F/lf4
pRx+KYdf9Hu+ilWt9vMTuF/K4Zdy+KUcy6Mc7ymHX8rhl3L4pRx+KYdfyuGX
cvilHH4ph1/K4Zdy+KUcfoX+V/ilHH4ph1/0Vf2arOz/8dwv5fBLOfxSDr+U
Yz0ox3vK4Zdy+KUcfimHX8rhl3L4pRx+KYdfyuGXcvilHH6F/lf4pRx+KYdf
9K/1NlnZ/9dxv5TDL+XwSzn8Ug6/lGP9KMd7yuGXcvilHH4ph1/K4Zdy+KUc
fimHX8rhl3L4Ffpf4Zdy+KUcftEnuxaBky/bruV+KYdfyuGXcvilHH4ph1/K
+XoTjveUwy/l8Es5/FIOv5TDL+XwSzn8Ug6/lMOv0P8Kv5TDL+Xwi374/Plf
DPdLOfxSDr+Uwy/l8Es5/FIOv5RjeyjHe8rhl3L4pRx+KYdfyuGXcvilHH4p
h1+h/xV+KYdfyuEX293UNK2Jadpq7pdy+KUcfimHX8rhl3L4pRx+KYdfyrGd
lOM95fBLOfxSDr+Uwy/l8Es5/FIOv0L/K/xSDr+Uwy+277/7Hqu4X8rhl3L4
pRx+KYdfyuGXcvilHH4ph1/Ksf2U4z3l8Es5/FIOv5TDL+XwSzn8Cv2v8Es5
/FIOv9gO09vZbhNOr+B+KYdfyuGXcvilHH4ph1/K4Zdy+KUcfimHX8rRF8rx
nnL4pRx+KYdfyuGXcvgV+l/hl3L4pRx+sb7tvoa3/Rq+nPulHH4ph1/K4Zdy
+KUcfimHX8rhl3L4pRx+KYdfytEvyvGecvilHH4ph1/K4Vfof4VfyuGXcvjF
et0Jz5wyKDmK+6UcfimHX8rhl3L4pRx+KYdfyuGXcvilHH4ph1/K4Zdy9JFy
vKccfimHX8rhV+h/hV/K4Zdy+MXyHx4Nr1qzwVLul3L4pRx+KYdfyuGXcvil
HH4ph1/K4Zdy+KUcfimHX8rhl3L0l3K8pxx+KYdfof8VfimHX8rhF8vJDRo9
6F1sJPdLOfxSDr+Uwy/l8Es5/FIOv5TDL+XwSzn8Ug6/lMMv5fBLOfxSjr5T
jveUw6/Q/wq/lMMv5fCLet9bblie920R90s5/FIOv5TDL+XwSzn8Ug6/lMMv
5fBLOfxSDr+Uwy/l8Es5/FIOv5TDB+V4L/S/wi/l8Es5f/5b8e8+Vp8lG3gp
Qnr+Szh//ks4f/5LOH/+Szh//ks4f/5LOH/+Szh//ks4f/5LOH/+Szh//ks4
f/5LOH/+Szh//ks4f/5LOH/+Szh//kv7j+e/hPPnv4TDL/57i+C85sF5C7lf
yuGXcvilHH4ph1/K4Zdy+KUcfimHX8rhl3L4pRx+KYdfyuGXcvilHH4ph1+h
/xX+KMd7ymde8VhdrK/J8Prffa0D3DvlqSdiXKy/+QgcdSnHe/y7/+6LSvsV
5XivjCtbf5o7wnjKMV5Zf+hyH5c6q3xorcHw+h8/aDl/0Of4zWa+Asd7/Pfx
4XUDHlaJ4OMpx/opq0/XH+OUrT+tj/HK8lp0uRinbP3pciv9+V8nhtd973Y1
3DfghGX2wvety88P4E5Ne+l4lJ6s4Lqct9k0MXlrtQLLMqhZfn4AP3Qydcw1
ywLLafWL9cvPD5TfcB9gXX5+oPy/OjKBny7HZeeHv9e3FXiXstHl54e/L9dR
4AvKN6vs/EB57+hC9/LzA+V/hpedHyj/s/pl5wfKt5Q3ruz8QPmM8vUvOz9Q
7lm+mmXnB9pnrfLtKjs/UC9/3s7xFTziPXwOnnZnxYDRR7lfvL4Y9nbOEf88
7hf88qy91ZOv5XG/4NuLHvfYoXaM+wV3dih4sUz/GPcL7tpkvtpHdoz7BZ/d
t+XUF7bHuF9w2x6RzT/YH+N+wf3nRThf63OM+wXfZKRWt4bDMe6XcvildeCX
Lhd+6XrCL90u+KV9gF/aN/ilfYZf6gV+qUdFv7os8+dO9ysph4lfXbbaIOj1
huws4leXleoa1XHpnk386rIZLXNrBw7IJn512eSdYessx2QTv2W81tO+WeOy
id+yed75AQe0J2QTv7psR8Ano00Tsonfsnl/mmXC0TKu6FeX7V62YO2JCdnE
r8QV/Up1FP1Ky1X0K62nol9puxT9Sn1Q9Cv1TdGv1GdFv5IXRb+SR/iFHz/7
Q1f0lx3gfsG7LlpeEF8vg/sFH9s1I3ONXgb3i9fwUyOTfllmcL/g7/a+W9He
KoP7BW8aWqXhdqsM7pevT9qxlLwyDr/gGs3aWp6yyuB+wa9+MpcVlHH4Be+m
19W3gC/XUeDwS+vAL10u/NL1hF+6XfBL+wC/tG/wS/sMv9QL/FKP8AsPSzVN
hg7btI/7BQ//x3Go/uN93C/4U9Xfw7Xe7+N+wYM6PNj9+dM+7hev37RUVgR/
3sf9gk9cuV09/PM+7hf8RekM2/llHH55/ZyI1HIOv+DDPKvllHP45du1cs0f
Dr+Uwy+tA790ufBL1xN+6XbBL+0D/NK+wS/tM/xSL/BLPcIv+n3cYneddf1S
uV/wOtohoVn/pHK/4E23P3xRMjeV+wV/OnXNrRrzU7lfcOvLVR+ql3G8x+s+
vU4H2s1P5X7BM6y7Vm5fxuEX/HP8iZrteX1bzgc2s6xVzuEXfOcn2R8Ov5TD
L60Dv3S58EvXE37pdsEv7QP80r7BL+0z/FIv8Es9Kp6fZcy58oNTrVT3kvOz
jO1tNf5sotlecn6WMQ/9y0OMZHvJ+VnGjunWDDhbxhXPzzI21eNx0NUyrnh+
ljGb2Skq13gdGecRPWPUyrni+VnGWhWaqF/j9W059z0q+8MVz88ydubqf1zx
/CxxxfOzVEfx/CwtV/H8LK2n4vlZ2i7F87PUB8Xzs9Q3xfOz1GfF87PkRfH8
LHmEX/TvtfXceh167eZ+wTdMLjr6xnI39wuuG3+wz2zZbu4XPOVQ1vktZRx+
wQ+ObFNrWxmHX/Du52e22sbryDhfPcC0dTnHe7zunCP7w+EX/P3W/zj88v1i
238cfimHX1oHfuly4ZeuJ/zS7YJf2gf4pX2DX9pn+KVe4Jd6VPz8tWUjvc+d
TbXcST5/bdm8ajXsQmx3ks9fWxa+YHX3c2Vc8fPXlr2vNLv/5TKu+Plryyxj
N0wq54qfv7aspMh/8mVeR8b54pqBf7ji568t69jiP674+Yvc2k7y+Stxxc9f
iSt+/kpc8fNXWq7i56+0noqfv9J2KX7+Sn1Q/PyV+qb4+Sv1WfHzV/Ki+Pkr
eYRf9GP84F5Tb3hu537B2yyu0dfYZzv3C15T3SXAu4zDL3jLXmc9fco4/IKb
vXbwKefwCz5Ez+cPh1/wVj7/cfgF96ng2B7K8Z5y+KUcfimHX8rhl64n/NLt
gl/aB/ilfYNf2mf4pV7gl3pUvL5yZBE2qlb2qVvJ9ZUj8563rFbvtK3k+sqR
7e7v/tqkjCteXzmyldH/NDEt44rXV46sWU7qH654feXIhpik/eGK11eOrInp
f1zx+kriitdXyK1tJddXEle8vpK44vWVxBWvr6TlKl5fSVzx+kraLsXrK6kP
itdXUt8Ur6+kPiteX0leFK+vJI/wi+1LzOqccqHPFu4XfMA246odHbZwv7wf
RzpEdSrj8Av+9LPtqnIOv+Df2jn84fALvqLTfxx+wVdXcPgFX1XB4Zdy+KUc
20853lMOv5TDL11P+KXbBb+0D/BL+wa/tM/wS73AL/UIv9gO1Y7fVQNPJ3C/
4K/td7edwLku59cjJ7mVc/gFNzuX/YfDL7jB7f84/IKbVnD4pRx+KYdfyuGX
cvilHH2hHO8ph1/K4Zdy+KV9gF/aN/ilfYZf6gV+qUf4xfqOuj6r+5vwTdwv
eMKMzY2+cq7L+fePU9uWc/gFX/Il/A+HX/C2X//j8AveroLDLx3Pr2vJeH5d
Qjj8Ug6/lMMv5egX5XhP1xN+6Xj4pePhl/YNfmmf4Zd6gV/qEX6xXmMXFHwN
TI7nfsHrlJqEDuJcl/PWTctzYvHcL/jt8P84/FIOv+B3wuXryAQOv5TDL+Xw
Szn8Ug6/lMMv5egj5XhPOfzSPsAv5fBL+wy/1Av8Uo/wi+U3f35xRY0GG7hf
8HUjhletybku5wtyw/9w+AV/dPQ/Dr/gDys4/FIOv5TDL+XwSzn8/n25jgKH
X8rhl3L4pRz9pRzvKYdf2jf4pX2GX+oFfqlH+MVyfEckebyLXcf9gnv6jBok
cV3OM//kxNZxv+A5FRx+wXMrOPxSDr+Uwy/l8Es5/P59uY4Ch1/K4Zdy+KUc
filH3ynHe9o3+KV9hl/qBX6pR/hFPav5TZfnfYvlfsFr/MmDxXK/4N8rOPxS
Dr+Uw+/f68gEDr9/r28rcPj9+3IdBQ6/lMMv5fBLOfxSDr+Uc0+E4z3l8Eu9
wC/1CL/4d8UqM2QDL63lfsH/y4Ot5X4ph1/K4Zdy+P17HZnA4ffv9W0FDr9/
X66jwOGXcvilHH4ph1/K4Zdy+KUcnijHe8rhl3qEX/z3AWPKcztrFPM5c5Dn
WcP9Ug6/lCvkc+S4Qj5HqCMTuEI+R6hvK3CFfI6wXEeBK+Rz5LhCPkeOwy/l
8Eu5Qj5Hjivkc+S4Qj5Hjivkc+Q43lOP5WXK82x43WveyHSS5XHuHXy5TDXF
LeqYZUz55n7z+fv48rpkPN7j31lXfK8Z9cHDngb84XhPx+M93S7UR72qrQ6P
6W59UnG8HFcY/5f+0PX5s5u01mB4bRKuvXifbX6FR1+B4z3+e98/+be1fDzl
WD/8u6FrXo3NvX2cj8d/T3Uz2Fut8ASvr2z98e+GT/+vvsJ4uToYT5eLcbSO
wvrQ5crl95AfUzg/CFxX4Arnh/+f3xP4/2t+D5zm98Dh9a9cLr9H/f6d6woc
fimn+T3q9+91ZAKn+T3ql3Ka35vwYVH3rVUkv5TT/B71Szn8Ug6/lNP8HvVL
Oc3vUb+Uw+9fuVx+7+9+KdcVuKJfXSV+dZX4pXWk/F6iz6Dui26dFPJ7A47N
erAsKF/I7w0a3b3O1VCaz9RlnyPUt/kdyRPye+A0v4c6NL+H5Sr6ldZT0a+u
Er+6SvzqKvGrq8SvrhK/uoJf+KF+/851BY73lNP8nveUwxsctE8J+b3sus3m
qmQeF/J7M2a8PBtvmCfk927tmHR16cVcIb/X0Sf+edTTLCG/9yIxc/KC84eF
/B44ze+hDs3vYbnwS9eT388i20Xze+gDze9Rv5TT/B71+1cul9+jfv/OdQWO
uuCDso9/79jzlJDfuzHpRcE24+NCfs9iXlH1tuOPCvk9+5vhGWNOZwv5vdAz
jS5fyM8U8nvBv7SnfetzUMjvLRthNN3fO4PkByRO83uoQ/N7WC780vWEX7pd
NL+HPtD8HvpG83vUL+Xw+1cul9+jfv/OdQUOv+C1CwPreacfF/J7cwfOv9p2
7FEhv7d2QXLmL/1s8nzZkn3VuNnTNO+QkN9z0Kl5MVczgzxftmSu/U1nuH9L
F/J7dfx/OhxVTxfye+A0v4c6NL+H5cIvXU/4pdtF83voA83voW80v0f9Ug6/
f+Vy+b2/n58pl/J76QEPVgQnnhTyeyHjXaM2dsgT8nv/HLN7fu1ANjk/y1h9
/5QjKw4dEvJ753bfs3iWeUDI761dsuF9nYnpQn5vwrCS4Tdmpgn5vTnhMq11
+1LJ+VniNL+HOjS/h+Uqnp+l9VQ8P0vbRfN76APN76FvNL+HPtP83t/PzzLB
L/pH/f6dS/m9h3Eb3IPfHOd+wTe9+qeTpl8u9wvudaLj/gtzMoX83l3VSQ0v
Vpby83y5fkVWAYHpQn6vadjTX+HeaUJ+b35ivtG85ilCfm/Cx5K17zZJ+UzK
aX4PdWh+D8uFX7qe8Eu3i+b30Aea30PfaH4Pfab5Per3r1wuv/f3z19b9nat
54wqct9f4891t7VX3+GVRz5/bdmEKisvhkcdFvJ7z+tNO1gtKIN8/tqyS/26
zZX1Txfyeyv7jTm1tH6akN9zaWF8a9T8ZCG/d/mRw40DdklCfs/i1ojo2Ke7
hPweOM3voQ7N72G5ip+/0noqfv5K20Xze+gDze+hbzS/hz7T/B68KH7+2gp+
0Q/qF7zKhHDjzPR8Ib+XHPd2X87QI0J+jwW5zdbQOCTk9zbdVx0YPWy/kN8b
cOddqVNimpDf09Jds9SjY4qQ38s/szol+V6SkN9Lq3Z3atKdRCG/189m2k6P
pVI+k3Ka30Mdmt/DcuGXrif80u2i+T30geb30Dea30OfaX4PXuCXelS8vnJU
cn3lyFLHT4r9fuOYkN9zHpEb7rI/m1xfOTLf4ZMXPOmcQa6vHNmQnmmXT2bt
I9dXjmz23bjm50zp9yMcWf9ZL/vt275HyO99Mdz+OXzbLiG/l7v7X8/C6zuE
/N7Cb5WvqkRvJ9dXEqf5PdSh+T0sV/H6SlpPxesrabtofg99oPk99I3m99Bn
mt+DF8XrK0fBL7aP+gXvFZymF+8off8UfLNOh0DNiYeF/F66+t2rsZP3C/m9
4GUPrad5pgn5vdUfzx08WDdZyO8lzxz78tLC3UJ+b2dMq5geR6V8NXhg/QVV
/2mzXcjvHbYac7zgmZTPpJzm91CH5vewXPil6wm/dLtofg99oPk99I3m99Bn
mt+DF/ilHuEX2/F8boO7CStPcr/gUwLevWsz6IiQ3xtyv+U0z2aHuF/wtomF
F6fskb6/Bn5+3cXWqrtThPxe6JjGlVv+kyTk9xp8KdV9Yp8o5Pd+FhgFLjwi
5avBx896ZPnafauQ3ysKedohUlPKZ1JO83uoQ/N7WC780vWEX7pdNL+HPtD8
HvpG83voM83vwQv8Uo/wi/X9dOXU+Q7P87lf8JWdj+p5GOYI+b2sM61WHZsh
ff8U3P7IDBWn0DTuF3y9fu/bcxKk7zeBp3XWz2iWtUvI713JiLVLz9kh5PcW
DPj049nAbUJ+b1pC22e/m2wR8ntXE4fnrX4v5TMpp/k91KH5PSwX7+l6wi/d
LprfQx9ofg99o/k99Jnm9+AFfqlH+MV6GUSqfd8247iQ38toPXDrHV/p++Pg
mckt5t9tckDI7/U5FBfgOlT6fiJ4Qt1FMe1vJAn5PYNNW4fU6ZUo5PfcJm2v
tWbIdiG/t/xBcBdTLSk/D144vo3ej58JQn7PPmB/UVi+lM+knOb3UIfm97Bc
9JGuJ97T7aL5PfSB5vfQN5rfQ59pfg9e4Jd6hF8sf8XEueou5se4X/DYPmOv
d0vLFPJ7R5P3Nx9UmM79gtd+u3HcgeJk7hc8akFKx7ZM+v4a+IBmepvzL+8Q
8nvZJWFO0T23Cfm9FYEmFv1aSPl58H3mR6Ya1EoQ8nsbz3UpMXws5TMpp/k9
1KH5PSwXful6or90u2h+D32g+T30jeb30Gea34MX+KUe4RfLubL++snfGnnc
L/jsB7/iS0wPCfk9nZ1Vp3XJlb4/Dh5m3c9orqH0/VPwRUlGT79cTxTye9vq
9TxQP076fhPfr4NabhytulXI792du0Ejuf1mIb+3ttS/9Ha/jUJ+b+mXxn7m
vaV8JuU0v4c6NL+H5cIvXU/4pdtF83voA83voW80v4c+0/wevMAv9Qi/qLet
3+b5Ld8d4X7BVauFFS7cLP3+A/iymcEnT0akcb/gi9x6ui7qn8T9grv9rmZ0
xkb6fiJ45p12Xf0stgn5vZlGNfI7vtws5PeyR9nX/6kifT8C/OE79x63pmwQ
8ntxg97M3+4p5TMpp/k91KH5PSwXful6wi/dLprfQx9ofg99o/k99Jnm9+AF
fqlH+MW/69u54/jn1rlCfm/I+84X4sMOcL/geoEam5okSb8PAN5u3yv/vrWk
7xeD5715NTlOY4eQ36vireJ8yU76/hp4YMttRxqpbBbyexMNWr402LBRyO/t
baZ/oF+b9UJ+b+ikZ3s8KsUJ+T1wmt9DHZrfw3Lhl64n/NLtovk99IHm99A3
mt9Dn2l+D17gl3qEX/58uO+pqGvHs4X8Xu7vNRMypu4X8nv7xuzM7nMyRcjv
rf3oP3XFtUQhv2fwTePf5A7S90/BV8x6a/RwmPT9NfDVNz87XXRIEPJ771d0
Ucs2lr4fAT5LS73EvThOyO8tVBvTxuaClM+knOb3UIfm97Bc+KXrCb90u2h+
D32g+T30jeb30Gea34MXvKceaX6Pzospp/k9en+bcprfW3ll0q70uYeE/N6h
LjuXPg/LEfJ7GE/ze1Xf3Dmy8uVBIb9H15Nymt9DHbyn60Pze4o5HF+B0/ze
BdMGOwrHHxbye+BYP2X16frT/N46G/0vv9QPC/k93/X203q0yxHye9QXXS7G
0ToK60OXK5ffsxlzY8kOen4o46zRsxEJslzF80MZ37Tun7lxj48onh/K75fX
7f3mTu08xfNDGd/Z9N72m//mKZ4fynijy02mNL9+TPH8UMbfXNs+KGTHcSG/
9yqjTYuHfvmK54cyPmrr3p7Gn/KF/J7m87s/FuidEPJ74DS/hzo0v4flKpwf
5NZT4fwgt100v4c+0Pwe+kbze+gzze/BC7xSj3gPn3dS+/w4wM/zUn6v+c0T
P+fLfb6Dj8tsUzsoQbp/Al7D9stWC13p+QX4so0u+7otk54/ggfHzlqu+/Ew
9wt+ILm232NX+vts3dk1DeOU3nNzxN/fy5+YOjA+V8jvhbyfdt1Z5YiQ3wMX
fn+vog7N72G58EvXE37pdtH8HvpA83voG83voc80vwcv8Es9KvrVZVaT1P58
jij61WVV9cfeaJyUSvzqso5Hqqftlbs+Bx+fNWPhhOx9xK8um8s80/wupBO/
uqx9y3g/7ff7hfxerxnvnlxrmSHk9/Y5v7jWoetBIb/3T95J/ys9Dgn5vW3x
XR8FrDsk5PfAaX4PdWh+D8tV9Cutp6Jfabtofg99oPk99I3m99Bnmt+DF0W/
kkf4hR9cP8AvuF1Ammf5dSP+Pfj0D3dqLOifxP3ideesXoWfDejvOxmw/dVm
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
xS+cJF5z5iwdu+CyedGHA1/6NpLbTxw71pse7MXeP/s3TWOn+LuLvUe9NzC1
ln6nblaPgmo7xkh5P7r/0PFzrhiW9o12FMZjf+5XEq5ZN1WH88tPV9xyOsWE
30/Dfh40pnrDNpq9hP3c6eaeX6369hD2W8qx39I62G/p+qxdatik3wZ3YX1w
/LYLjNuX2VD6HbD6nZ+eOfvGWPh9MBzXc1WdtRyy9YTjgnIcF7R+zhS7+lHz
PYX6eO/s2eZwjbLlgxdtytE83UDKI9Hji46vFXvpgMs/XsL48Re6tZqZrif8
btKwegeM2zcRf38J/crT++f6rzTGeWhUycbiZTrC7/Pgc5yO33bXOtZug7cw
vl6bKTmpo7SF34FhZh7PTzcWfzcG+1+vTRqFlmrS74rEXar50nBCN+H3RnD9
QMe/rX6kyq2VPsL4Kz5B1874dRV+18I+ZtL2Gtd9BK6y/7jVYc0uwu8kzF68
8+Dz1uLvJ1xp4RTx7rH4+wk14ps33BKk/Pv4LZrN7/b5JuHlvxtL+N1wfy3f
F/Zs5eXzl2vaS8fpZIcBkT5VxeN6y7Z0g8vDZOyc6VzDBh+l40UWeHj4qM9W
LGlU88i+D6TjS3/2jks/5tiwsddeJhjM0ubc+cRL+3r17Vi94bWDdsuk47Rq
pLfj0X+cWcaTm6pqORJ3+XjMPTjXjS2v6l6/cndpua6NbD4NjzBhJefPPAv3
kI6Lr+32h8UPMGdm6/KCrr7vzfnRkQ7P1lRibFjNLjvCBkrH3U1trVbt3nqw
D2u+HTuuoy/1ofYy1/Zlda841wyoESEdF+un6w55PtmI4RU8qmar0RklvZnD
sroL5gSYc979uN/gWwe8mOWTlKJEdzPOizt8bD2xSIf1jA3WnBco7eed1dQO
qPvpMcunEffOfZWOr3bp7Rt8SunFSisf1Tx434rzf8fmtft1yZv5vRoxdcV0
ibNQltr3eDfWarGR6rS90n7bOuVL5PrVPdmjA13rrrGz4TzV41S4iaYWe/LI
98aWwdJ+6zR/1/yVCT4s6+DHE7v07KTz3qv4eatnarKXXRfHj2nkIPXZu7BR
798+zOd7vRGP6kp896n3j2oll11vVbkzs/SQtJ9PqHb9RHSALxtemu8T88iJ
84Rpm353yO7E9l6qEjnZT9pv/9frLmXXCcqux5RdPyi7TlN2XaHs+k3Z9Yay
6zpl1yHKrveUXZ8ouw5Udt2i7PpQ2fWMsutGZdc5yq4nlV3/KLvOVHZdpOz6
U9n1krLrUmXXUf/r9aqy6y5l521l+7+yzwVlx5eyzx1lx6+yzzVl5wdln6fK
zj/KPpeVnZeUfe4rOx8qu95Qdr5Vdt2i7Dys7LpI2flf2fWYss8XZdd1yj53
lF1/Kvt8VHYdq+xzU9l1rLLPU2XX88quH5TNC5RdVyibFyi73lA2X1B2HaJs
vqPseknZvEnZddT/Om9SNq9Rdr2kbL6j7Drqf50HKZu/KLuO+l/nNf/rPEXZ
9ZWyecr/Ou9Qen2lZN7xv84jlF1fKZtHKLu+UjaPUHZ9pWxeoGx+sXd2/7g/
5+3TA95XS9Vip5vE9157Jp3zrQemf1g8rgu7/sT8SmJ8BufNtkR/bKDdqey8
fn/c4fGZlg6d+0T9+byr++2StZ9Up1bIQc8/3wcj9cFpfXBa36R1nn/5/kTr
gNM64LRO8KkzA8r3M1oHnNYBp3U2Tr42tHz/o3XAaR1wWue5yjj98v2S1gGn
dcBpnfBnkw6V76+0DjitA07rtM6dZlq+H9M64LQOOK2THj0rt3z/pnXAaR1w
Wsd5zFxZ+X5P64DTOuC0TrEsIv/P79+ROuC0DjitE9ZyqX35eZjWAad1wGmd
pVP7DCs/P9M64LQOOK1z8/GZHeXnbVoHnNYBp3U6ubo8Lz+f0zrgtA44rTM+
82LX8vM8rQNO64DTOtmdPMeUn89pHXBaB5zWqbXi2p4/5216/qngwvmngtM6
fqW+b3/P9mUnhrjEfOskcZwPY6POjJ7aRZvlWP1Ys+BLKj8fUo7zG+U4X1GO
8w/lOJ9QjvMD5TjeKcfxSzmOR8pxfFGO44Vy7P+UY3+mHPsn5djfKMf+Qzn2
B6H/FX4ph1/K4ffsAN9wr0EGzEkWejB/yw7O00PqvtgYocuGFGW8f9ZnD/dO
x4PT8dgf6HhwOh77CR0PTsdj/6Hjwel47Fd0PDgdj/2Njgen47Ef0vHgdDz2
TzoenI7HfkvHg9Px2J/peHA6Hvs5HQ9Ox2P/p+PB6XgcF3Q8OB2P44WOB6fj
cRzR8eB0PI4vOh6cjsdxR8eDC/t/xfEo7P8VnI7HcUrHg9PxOE5D+33UVbew
YL036f2z+UcCPx4px3FHOY4vynEcUY7jhXIcF5Rj/6cc+znl2J8px35LOfZP
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
YX0Lfh8bfkuvtfpp8dJcyllV+B3Y+u7yQmtpPPx+Wex5M8ZO4vBbEsri7shx
/nvl7yNaPLWjdWTM6Ynf3GdyHH6Pt1y+95lQ35bl/9tznzyH32N+gxU4/FIO
v7QO/NLlwi9dT/il2wW/tA/wS/sGv7TP8PtXX2V+/+6rO3OpcXLcNBcrfl8U
fquu8EjxM5Y4/H6v1Sm5krvE4VdbbVG4qxyHX8fk6rGechx+9y159cZTqCNj
92ZlfZDn8HtiYt2PnkJ9W3Yzr4EC57+vflaR899XJxx+aR34pcuFX7qe8Eu3
C35pH+CX9g1+aZ/h96++yv9e1199lf8dHe0rlovs+P1w+J3YPHFMj3kSh99O
Sz4nL5MbD79xr8wurJLj8Ls18MBDeQ6/txOtHq0S6shYv0xbBQ6/F/MVOfw+
Jxx+KYdfyuGXcvily+XflyHrCb90u+CX9gF+ad/gl/YZfv/qq8zv3311Z1UN
V66bWurC74fD76ZZyaPc5Dj8RlsvbTNNjsPv5Ud32spz+E2IvKvA+e+PLVHk
8OtFOPxSDr+Uwy/l8Es5/FLOfy+VcPilnP/+GOHwS/sAv7Rv8Ev7DL9/9VXm
l/qKlnn/aKapxfCK+2zdO1fSal+qw9Yfr288LVK6v3d2vsPOuKu92K25CXqj
TKX7e9cKOjt08tdmLaz0evZ7Ld1/a7TokHWz2j2YT+WTmk7x0n22SaHBb7Mn
GrCQex92FNfvzuuf+BZlXGmCPmv01MA8uI4Wr98iLGW+ddn164G306++r6HJ
64+qcvniwhA91vdL9qjpVTV4/UYGTQ4OyjFh7wpd1YMMpfoJHZb/qnbDmDVI
s9uTNFKq36thXbtdb41Y90gL049xUv0jpQujXGoaMacggzNmZ6X6s9WuzR9Z
asEatLkfn2gv1Xe+s/zugDYWLHG9j0tMlFS/1Tqn3j4ycyZrdf5H+FWp/lP/
mkudhpqxO2ts9oxt1UW6/1l3qvqAdTL2I7LtuwWuUv3T/SOnnu0pY9PPB/uZ
Jkj1R+6Jv2x0nLHPDQ8fKflXql/rZ2q3HX6MTfKsqbnDWqq/Mnzv4BoZ1uzO
vRrFAR5SfRfbuJbqztbs7OsDRw/ukurXrr3got5jK5ZVOnRD4ypdef0T58Yv
dJxmxXbXaTotpJ9UP1t3dn6fy7bsjGp/nw2eUv36pw60tB9py1RC9HfEJEv1
B/Z/HWz724b55Tb8sqyOVD/1XYc86zU2bGPDl/aLhkv1LbQutfF8bc9aTdqz
9YtcfQ/T7Bn35tmzYQcDmnROk+oPdU68MVLVnu0rrTfPs6FUf2pgtO7HfXbs
l2XO+9khUv0aJ+J62Nd0ZLP8Hh6v7CXV7zi7pPPPjQ6sxNJ0+y25+szYvk26
gQML0lyzME1Fqh/4Ib55eb7rhsq/I8rzOag/sk/Ygm4dnJnD/dm1Tsutf+uu
a22eZDqxRoOLqu2Rq3+udmrVeA8ndqvIrvJyufphLwuO+bxwZJuH7/45Qa7+
iaEPDO+YubJfBY0O5sj5Hd6h9ZfQay5s7pEf6ZqpUv2aD70zVIJdWPWMZ6mr
G0j1E+OXhyZVdWGL91zZ+ytYqr81ymbv2m7uzErtpIaNm1Rfx6zVI7+3bqxk
Uw3Z0ySpvlrgrhFzFrixjR3t+y+qJdWvGWb8NlHNjTnvjAjVGibVr73lZLGH
kQdLN3py0clBqp9Wd+uGFVU92McFpxbKtkr1+4bO9rp4wZ3pX91tbvhT2v8r
P+hfp8E6dzal3bKP3f2k+g7L7y9qZOPJPqmmnQ8zlerH/94z+ngDTxa7sdPd
+iul+v+Om+kcesuDmbWPfbnhqVTf7qFDzy7bPNiDrXW/dTOT6gek1pl60MWL
nY5v2+mJmlS/amH7GataeLGqV2+aZY+R6u/+aTQr5JEnM6+1yif6sFTfo5P7
nD5JnmyqudPY4NpS/c/5g+7quXuzB1n39H7mS+fnytGeFnNbeTOT3sHW4xtK
9esF2SRceuzFYvZ89yzqK9VvqWtQpe0eL/Zvp8VDfLdJ57evi5M/Gzv4sO6B
fV8FtZfqNzjiVdhTxYc9rD6vpE5f6fzf+ePXgx0Lyz6Pkvd8SlshPd8x7box
tuVGb+bgd+O7f4H0fOdSyb4zFsN9mUn9yPFH46XnWX1twrxVOvqyubue5DrP
78qXu1CzyV7Ppd3Y5sIqQxv8kO6j5t8daFL/kQabE+TpU+isze+jvjVpfz8+
QJfhFeObnx2/NnVxL4ZXjP8nY87mhSE9GF6xPq1q1A5d0VCfZR1bPiLpljT+
9bwV1qpj9ZhaeM/g4PHS/eSwH3dbnB5uzI6Fvvzx67s0vnDthMUHHhoy/Q6/
7t54IY1/cFBN32SnOTvxJrXekurSffKj3os1LnQ1Yy7NTH+Yq0j3yfudapJ8
poQx03Arjcp1pPEhToZd6/dmLL9xE+N67aXxgePm9dhVz5oVRyW2uCV3n1/X
pWR+Qdl1f5vV1aK05e7zx6ovffitiy37sYONj5F7jnBr4cl5k4NtWOn70SHN
5J4jFOpkODextmdqS1VNi+TGRxkOb5URYcdUtL8kesg9p/jQfKFhgwEOwnOQ
Hx07fc/c0kd4DqIzWvXh72lOrOmUD3bv5ca7btFrtifHkcWfsx8SIzd+0LHB
3Z+sdmFNi2pcuS433uXXnZDIm87s7oHPu2zkxn/ptr5HfLIbK5pY6dQQufHb
RkQUdfrgymZeSxv2REsaP+9mbvuZT9zZJmPnYm25fs49ELAvYaE7M+wf4ba0
izT+sle3Sx3/9WDTiuavfFNTGl+3UnOfOqs92BHNgY4N20rjR/x+bz3nhycb
56rlNeO3tP+YOz/5+T7eky2v+iA0so40/kVa7Wqlg71Zq+t17eYMlPbz8SUB
G8ZX9WYGF/13+hZLdb70TO39dJsX27HKqVG/G9J+aHzp0oeVg8rm9XVSvnzu
KNXZ4/z8/MJKPuzEj3qDzmyV6rQ9/XvnzISy+cW96ytM7aU6ie30FhQ5+rK+
tY9o+6+VjlO9lGOjr77yYQusf55ooSrVOWLu6X58qQ8LKp1yKNlcOu4+jF+8
cdTQbszA0vDlL3XpvuIl7x4dQqw1WCed2nvmREn3CXuPjd3dWlWXrUprdOi3
uzT+aZPCf7VeajOP80MXfteS7kMmek+50WqgAcMrv1/6Mrhmy8DeDK8Y3zxy
4+/wWBN2yK7z+w1DpPHBIWmXLXcYsQZaRvn9xkvj89zzt/5MN2BB9Z3WtJS7
vzq6dMd2y4sWLHny/shQufu9S1QfBD59aMYuRr+2UguV6uwxbdE86r0JK9nf
qfSY3P3eplNet983V8YadAhRPSBXJzE7NLT3UsYMUmYfy5S7/zytxq+VId0s
2QCzVaNy5e4/OzZ2zN4bb83UWqRYnZKrs8o3TnfUTiuWtMlF20Lufvitdc8T
O6XJmKnma1X5++Fjj7XN33LIltXo/cjmnFydgOaPxow7ZsMe3wmKlr8/7zh6
SxOzc9Ysd97TIvn785EqWV9jrtqzh0s3Jsg/L1ieZHRxxD079uJYnIv884LV
dhnbjZ/ZsvdfoxWeF9zMco9d9NZBeH7hPWpu7/5f+wjPLy4133+pR5U+wvOL
GgW+LWfWdmaqoUX58nVc7U4fdGnixJImFFSVr7Mm39SvnbojMx2710q+Tq9B
Q/VCOrmyxkMWvJHvj46Fvb5lz7LzVRunf8fL1dFV0zJsZOTMmt9W+SS/XaNy
mmxPbuvOPnmtql8g/5zo6cQvWg5uzLpb15FBcnXaeuZu++rpylZVOXpMvs8D
p1c17tDDg42rdNMtTa5OV1+N+Cr73NmaSUEPdeWfg+g6VC4ycGfZT9+O3y9X
5/akS4fmmniybztWyVzl6lxIOhHgfsSDnVs44vJ8uf3weNHhSm1sPNim4WaD
s+T2w5R2W7Ni7b3Ym+ZDLfPknl+M2+k/x/CcJyvRMfE0k3sO0qtnA9sb7p7s
vbPKsINyx4Wv+tvd7z29mebJ5u+s+0p1cl9Nvh1R6MXO/tbZGztGqqNxuLS2
eoAXCzF2GfNmllTHVOV6j9i+PizQ1fjNR3Opjn/1lXdc7nmzqx26bjvrLNUx
r7Sn1UkPX9bgrOryU8+l5xqdDqVnbr3hw7bvNmlo8UM6X60ZMk9vyPKubNjM
HlaDRkn3w50DtpR2ttNhtYqim5ekSbyJw/ORIVH6bMLSwVM8j0t8+wuZ2/VT
xgyv4J0PxWqF/TJnpya3VY+Tv8+/18i4T2sZW3wtzO+kHE/rGxlpqW/NHF4k
vpZ/XlCnVViprrstW9+pRZ7884ULS58kdR5jz04UjG4q/zzC/FmpfsuFDsLz
ixUJE7PrbHZiy0dFt5bnwxfdNf6Z5cLufnpbU54PGld76Lsbbmz8nIuu8svd
u1L72Luv7qza9spzz8nxnwWulwbX8GRPLKrvTZHjTm61++1v4sVym0452VSO
f2406Verdt6s1t2tjifl+ln5+fW65zV92PWSAxP3pkpc7ckltRadfNnzeM1d
JSMkvvhom9ErIrRYTsjH0QGq0v3wmudP1b+7QYe1X6tnsMRC4k1t7r2KvqXP
Lp25WGOgrcTvdYtvf1nFhJmOa66dIXcfXrV9n9UPyt7jFfxB5N1TwyxkbPAV
y7ny9/mbNHG46t/Xmo3ZtGmJ/HMBj3TPMU6TbdniDcbJ8nx0tXofzZfbs4BS
XYXnDs7XHszotdtBeE6hPWFd5Y4nnJiWa6ACP73lZUSzhy6s0tj5afL8eXat
WrVK3dj9Afbb5LnjB6NOP+t4sMKxCS3kuSytWdfQlp7MveM69cfyzzs63M54
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
RdguHBe0/+C0/2n3ug6LquQu9BP5H7qfgNP9pK5uxL4nJ90Fj8gL0f0fnO7/
4HT/77us3/rzYz2E/fDLS71Dfl88hP3wmalBaqXxnsLxUu+B1gjjS57C8aIz
t22bib28hOMFx3NzrQWHR3+0IJ+/BuzqWOu1Hy3MyeevAVuRXnly2GJTXmeE
e+I3v2gD/vvMqLNs/pwPY5P0OUedjEP+bxYc6805PZ9szD52x9fKgnzembCl
e+qu39/ejPdhTfimbl+7mvA6/HmlW+Oas/2NOFe87rJkHdo+7lGtsqXwfZbm
q4s+DJ1sxv0+7h8141slS14H4wfP1UnqOtGMc3oemHhw8tbevhbC91aOeI6I
bhNkyuu0zBxev8BAxuvQ76fsfFA5teUCC+H7LG2evri+09iUjx/iucroQqA1
r0O/t/Ljhdqt4DRT4TxQmn/i0U8tC34f9VFexzwbRzteh+bh6Xgc77S+msVd
i6wDTkIdHO90u8DpduG4pv0Ep/1cvzfklM4WV6EPOK6pd3DqfdJW52/rh7oL
XnD80v0TnO6fNXcFbM6z9BD2n5Gb9GJCizyE/Qc5Q3o8gtPjEZwej+vbtvwU
HuopHBe9g00tHr7wFI4LHNf5bR31Jm5k0vWk2u3g26n6/HfUwfstDptrGN+b
c6yn+ecOsdGL9TjHerYLOrX331Bdzunx/nTep8ZZwYz34WagmergOsZ8PPgq
Wa7r1acGnNPP9+rzW1mv1ZVxX6NGmgxu5WTBx/PvAT28cPqdmynn9PtoiVcd
9wZWlfH9Z3J4ixWrK8v4eHo8Ppp4xvBngIzv5xZpm7oVj7bm4+n3UOqFTXGe
ESAdFzge3X1ce6QNk/H74SP3JfZ+b2zP69DvL9DxOB5p/RgXv7P1TzoKdXDc
0fXH8UX7cMR10LXWMa7CduE4ov23tfxoaDDbXegbjhfqvXhY2k7jEA/B13n7
pfWrdfcUfGH/p/tt5PNemSNyPIX9Z8M49+5Odl7C/lM07fTQ06u9hP18d+Cg
tvtuegn7+QSrL7fWqXsL+7lxl2XR84Z4C/s55tUfzt7atf+YlfC9/ibLbql/
TJLG547aOrtXgg7/ewQY/8bzmZFqTi/O6ef4wQGNB73zsRa+Px5sk2cde0Xa
XpttZk43nQ14HYx/kmrsdKeePuc8b5Nj4HT/nB7nPId5Rs/p0VJdzun1/7gV
3m6RryVfiS5rnuqMN+Lj6efv9U+vV2VZW0vPnXt+ZCc9LPh48CmLN+7496UJ
5/Rz9uKvfoWsvzXfPwsn9TVMdJTx8fR4PJzx9ZaDjhU/Ll5NHaBpqmXDx9Pj
i45vvGhzYf51F2E8jiO6Pjhe6PY2tfN6ktTPXVhPHC+0n0M/Hhu3bIyH0J+t
gf5rrG09hf7geKH7CTjdT9YE91v4ochT8IXcO92fwen+/O5Grzeng72E/e3U
ap0ep7O9hP0twV03pKCet7C/Tauvt/dUgLewv+E4Gn671rjlv22E39noufHn
7OLbcuPvHXZosF2H//0OjH+5uIPXxbW9OMd4neCmme2aaXOO7Y3KLzq75Xt3
zunxWFzlt//XIhveN52f1/If5Ojz8eDuWzIH1rXrzTn6M95+43eDC7qc0+th
g6S0459TbIXvcRu+fDs27JTkPeu0fpTbBhNeB+M/WkWbzs0z5Jx+X9v1xcXJ
GrNt+X5o93CW5qmJFnw8/d6l55UU/Q6qNnz/12g0bGNEloyPp9/XK1hmEfKt
jy1/brhLtbDFPW1bPp5+z6vJr39Vl4XZCN/zohzHKa3P/049WU/vJ5rPO1xy
FpYbPPV8L7MO7sL64/il/cFxSr2AUy9vIx7quwZ5CP3E8Uj3n5VR+9Re+3sK
Hq3ftZ6wqaGX4BHHIz0uwOlxsf/omQaLVngJ+2fI2kaas956Cftn57H+sonO
3sL+uarPypDsNd7C8RURaNit3m1v4fiaOfHe8/7qPsLxNT5i3o6kQT7C8YXv
Q0V53nlgEWYv/J5PPWPbeTq97Pj4o/3aDljzqxv/+zsY/yFw+5P7+Vqc08/r
pr/8m9z3sOPblfIpfdLoAB0+HjxZ5rnEoXsvzrG9/VUf2Xp87cE5nV/ffDhR
/fclO+6r34BRLaMe6fPx4KtmvK7rYt6bcz5/WTPud704Xc7hpVuTcZrq/Yw4
x37Sdudxz/MnTDmn36fWTyidfu2ztJ+PYo+vvTNifDz9Hm7jQ3kbhsTb8+Ol
G5sUsm2qNR9Pjzs6Hp+PdLlXjixd1X+Rq1Dn7INlzRYVuQvrY9TcLWlpA09h
u3Ac0T4bmD45MO2Fp9AfHBfU++jE4swNEV6Cl4BH1XL2lHgJXtxadzqa3ddb
8ILvhdH9FpzutzFVmgQVJ3oL+1vMuG7xbz56C/vbmrvWhZ+Yj7C/4bgo3r3z
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
mGdlfnnhvqwpOfgzKrzI4wHmv63fwHz2+7AKGHltdU3ixnwtYf2PBs4JmuAX
Pzs/UBbzu3InZaxvCBvAw/TuU/MNMB+sVlJQxavcAKa7DtR1h2I72CSIa/SG
OsKrw4bzbS9hO58wi4swvU8DrSGzRZod2F/6awN3as/Fx8rdLWU3YnA8tPkU
d500ZEDJzcXr2ewxT+ynU/yrI4FOgJ7IPuvHY8TvxIjDSEmyR/hHHJ8sn3iv
lYWIwrBf1KhrDrYn9zF4sPS9FGz+ts/sfC6O82wR3x/mSuLg/+dlz01+J0JP
dPDBRe/9xQH1O0f4mlweC9HFogRO3Mv8n16yfh0mDpdFHE6UeeobrW6UdHCi
zJMj523ymlsMit95fyo829uAeXQIX+24pe9arRiBI/32p76f957zN3n+YXGd
TrfdnajzNz/nMhkkQrGzXYqKnfhbkbm/u9XNfZdjXF3z7faY72JweybOir4B
j4vsSLZnWgD/ivfeThQ9b9sfcH9b50TRw2GeUfDMR4TCDwz8+NR26w5Ut4Lx
4L7s2KZiEQp+51fQgs/iThT7IN4vr05YVesGacKeCK/5MFU9kC1Bkfc6uv/2
nyFRCr9Xs+TxKcYzSULPj5D1r4XcFIg+/GTeb3LnLdNzHZIk/UoQdb/O55el
OKEf4fsuN0bZVGM9AkJb71z2UAI0L6Lvn2quvZ+DGjEucX/xf7x0tvuFEi6u
0pR6Mafs5gSBnxKkfoNqkHt4bPR9nBilTnnUnc85SxjrR3zjn5J+dUlqUpT+
FZ76jTs3DomT+odrwQu6pMD6LFFCj6/3pLPbIS1iXUQ/YZdj3pPvdIh1kfum
BrO2hXzzkqb0bfMMkbTeIy1J6vutD/b9h9b9GhWj9GnUoT8f33cL60c825yn
SUVOllKUfqrpvTPN3kISJDsbQPyk/9iecVFCj0666Ls9SQbEutA8Yx9/+lXH
akisi/g79/94/oWsMpUjWtKU/sybNh85qrRKktIfnr3ylV3IpBilP3zNMknB
W+1YP6p74gi/YmnIJUPp6/7N8UVz8Lgkyb8m0Cz+27Hwvfh/9D37X7zkr+Cb
jlpRzL9tXDqT02NGrIv8nQJ5kUdPh7bicRHO1rfn76CNFDEuwj9eWiM7qIK/
c0H02fFqdBsQwN9lIOpthUMSP83/j+9Q/F9dLXlchJPHRTh5XKLPCGlcom6X
NO5V1VEm9zWWFDugOjKy/RFOtj/CyfZHONn+qO6DHD8IJ8cPwsnxg3By/ASr
8y/WnbCjxC3imZP3C8LJ+wXh5P2C6p7I+5qohyLta4ST9zXCyfvaQ+VrcoO6
PWU/ChR25Rk8caCcM6jegXy+EfV7pPMN4eTzDdXRkM9hhJPPYYSTz2GEk8/h
T3n3Cwe3OFLOz8TRNunLfjTKewHVZZDfRwgnv48QTn4fmXhWNlYO0invO1Qv
QX7PIpz8nkU4+T07tS8vKW0bnfK+Q+/1jewFgwVzvxf++70pA+q5jUIrJZWI
35kIZz7MHR7iLf/fdSJz8z58cGnCv7oNJI/wVLa0ef/qNpA8ei9rR++wjkpQ
oODrvY81WO3G8+RXkx145yRPfMfkv/vPqMHNp9br92cqkvqeqcFX0+kVD9/L
Ufp7uC59rjfrqkDBM8sTfwylYb8/OS/t9PyxFjEuuU9UX5iAjDIokvrn64Oi
WN5o3wk5Sv/S9Ns8vXe5lEj1bgZwuvb7vFRxBYq8eFym/stQvL/Q+6g+p+Vi
+SCWR/hAvJiLPLccIb90/tpFqQWGxPzJ/cOVfrp+j8lQxN+x/T+cs2P+q+/h
8pTviTznzcvi7cbyCNe//ej820UKlO+GkOURTpZH5zB5Pggnzwedq2Q7IJxs
B+L8JNkf4WT7I5xs/x/T3b/9NthR7InOSXI8IJwcD+h8I8chwslxiM4rcpwT
9Z+kOLflC/781MaRErfo/CHvO4ST9x06T8jnAMLJ54DexlWXRHgZlH2Kzpn/
7/nwr576/3s+yADTiBzzv/o89PcvOk9cFxz4n3ovhKPxlBza2IfXqlFw/mef
p7zZlCnnxq99jn5XNVUI/EbXUOnkMRXieyjkekAmtQcpFRKqpH6nWnCynuHm
u4t6PpjXGE36c6pR+gUxu7y84heqTOnTaBG3c6tuoAqBT6hNTAYM4O8fkfs0
zqMNym0zV6X0a5Xq5tpj0Evd71MSO4Vd5uZD7pNcvyU8jqVKmfIdAc6DN7ZO
e2J5hMdOfLBayqFC+W4IWR7hZHm0r8nzQTh5Pmhfk9eLcPJ60f4l2xPtR7Jf
EE72y9G+BQss4u0p9kf7lBwPCCfHA9qn5HhD+44ctwgnxy39+MOUiC4aJT7R
fvz/7pe5/fX/3y8y8P6vjMe/elaUd0L7C9VNIrxCMczzJJsC8Z2R/66jVIOr
Gifzk6PVKfsl5MSDeqdpDUq9/ynhLRUFAVqU/idNuT/OXZRWJ9Z7VjdVr2Md
/s4OuY+Wq0MSi2SmBqX/cLjr7r+HpjUxP/P/4ra9y8167WktSr99Mo7ikKwH
xRt5XBRv5PkT/bhI61Xqqejm+mZPWReKH7LdUPyQ7Yz8TvZj6vUt4v/qisn+
QvFA9i86Jxf+3mDxr26e7N+yT+lxA9d1CTxseBM7TQ1/n4VcVztQkfslWVyH
4i9B/g1LRLp1CVzZti6yUdKE0EPuK0uWbyzTDVNts6bII/uTx0V2I89/nYmk
rt8eR8r80b4j2+HW6L1N/hnSRP9/lL9F+wXVDSMc2Z1N2T9+rTPWj8bT7zAb
enkNCDzpmlczXxT+DgW5v0pPxPTGiPt4vSier2l+ve3iDpS+2WSc6D9I0oPi
kzwfdYnmjDFde8p8UHyS14XiimwHVC9Nths6f1Dd/H/jSmCx/n/7MSDc9eSg
uw4H/q4Bwonfz74ZDtvK8TyRHM/TTQsaPxrifVGeEioobELoIffZI8tvt/E/
9rHDmiJP/G4kjYvihzx/qQ6TwX/9I8jzR/uXbAe07y67hKrt6DOixFW4SeF0
1ntjUt8zffD6HPfq7QsTAs+LkihTE9Un+mz/tx4TWGCTK75X3JjSb61/an4i
rc6YFLeWFBzFFVkPiivyfNq6Kmjlag6U+RD9aUnrQvuXbAfk9ydPhlMczM0I
vGvvyUObkwyJPsnk+n2yvFDc7qPZu+wo8voaa3R3OOA+yVpTHyP+FqcR+73M
y6KpU9KCwInvFngnVFj2mBN6Dp49T1s7bkzoIfcVIctH+ngUd7PZUOTR/iKP
O6nhWvWygkGZJ9pfbzSUst94kHEl+BkU7CV2z4rAF8iO7L3uhfvBIhz5ScyZ
13HDNJ7PONP8RxptZoQ8ub8TWZ51ZlrjkaQlRR7tF/J8avc+WM8jTqfMB+0X
8rrQfnHrXMye4W5D4Ocm7KZLjuO+nQhH/t5uaFxRqG5N2keWFBzFIVn/W6bi
I6/OOVL0o30qI+AoyvcC45+6rq+55KxH9M1DOIp/srzpIprGm+0OFHm03x3p
VQ5fN2Lc3OOEm6i1AdGXDOHo32R5lxat//k3WR7tr9JHLer/xkc4PHsg+lnO
iOhbhXA0P7L8HWXtd7xz6yHLo/2yYdUp9dZzGE9vj9D4etGY6FOEcGRfsvxW
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
km/xet9VNrsd4HUCdc+qY+403M/t/wEsty+3
     "], {{{
        RGBColor[0.880722, 0.611041, 0.142051], 
        Opacity[0.5], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 3], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1:eJxNmgfYl2Mbxp8/6XnahRZSCintoZSGtHeohPaUhqK9t7epNLX3ICWyV3aI
ZEtkb7JS8fGdP/f5HK/jeM//fd7jued1j+u63gt6Db16yGlRFB3Xz+kKb46j
qIjCOImiRxS+JhwQxgv9hQHCOKGf45OEgXwnTHY4SMgSbhNGCHOFUcJoYY4w
0vHZzic+VujreucLY5w2UbjJbbwrPCM8K1yeiaILhYuEOg4vFuo6LCvUFEoJ
Fwg1hJKOX+a00sJ7ru85oZbTygi1HdLGO8rb57YbKn6pUEG4XfFbPc6ZwjBh
uPCW8JTwtPCm8KTjh4QnHH9deFR4zHP8iOPM9cOOvyI8KDwkvOqQvJeFvc57
Q3jc9c5y+/TpoOsm7233hTFME4YIQ4UpXqvBwlSH5M0QbvF4prss8Tu89sjC
QocThAVeK/KuFuoJ9YUHhLXCOqGB5qu8566+UM7xesIljvcUWgtthB5CK8c7
C42Eq4Rezm8r9HbYTujjsL3QVWgutBC6OWwpdHdIvY2FykIVoYvjTYROwpVu
r4XlpqbbRCaQu6vdb8bRQbjCcfpay+VaWc6INxOqCdXdfk3nNXcabTQVqrrc
Na6bObvO46Z/17uPlL3R9Ta3vBcSzrS8FhAKWpbzCfm9Pwq6HGM+VzjP7ZUQ
zvc4yno9qjutpOeiolDJeyK/2yjrNs/yN4Rney0JC7vvlTzXTdw247zB42AM
7MW87mtfr2EHlzvP/UNuighFXdc5HgN1F3e8gvOLZYJsFfY31FfX47tfsrjG
crlBmOfz5mude9dz3ujcOyG+hTzxU+LbkHHxP8Q3c56J/yDenf0k/r14N/aQ
+DfiN3Auin8rfiPnovh34l3Zc+I5hD3iKxT+qPQe7DPx04X7xJcrPE3YLb5M
4T8qs1N8sfhJ8a30Wfwr8S7sQfG/xe8Rv1P8f+J3iy8S/0t8B/tVPCPsEl+q
MBLuVbBE4Z8qs539LX5GEuboLoVfKL0z+1r8J/GenA3iv4tvFJ8tniWeR/wi
8bniecUvEZ8pnlu8tPga8TPF64g/Kl5OvL34XvGy4m3FHxYvz/lB++IXibcW
f0D8YvE24pPjf7sdnaefY+K9OHfFp4nnEi8pvlK8EGe5+M/ivTkXxX+Nw3pn
iR8X3yQ+R/w38fXit4s/J15Z/EbxBeL5xC8VXy5eULyG+CLx/OKVxJeIFxCv
Kv6MeCXx68VfE68h3k/8oHhN8QHih8QvEx/o9V9tWdxoGVzgs5I7kjtzk9M4
d1n/5chMFNaN8K4oyMsq14W8rHR8l/OJL/VZzxmPjCxzXcucxp1wZxTu2kmu
i7sty3XNcpy6Zjq+xvmzvZdmu9+0OcPlFru+yW6Pdqa779Ndbonz6d/d7iv9
2uE84uxF7ptFwjuaw9oKh2gOPxG/RnyU+MdxuHtGir8lXkt8kPiX4teJjxd/
WbyaeC/xV8Wri/cRf0G8ing38ZfEq4r3EP9U/Frx0eKfi3cSHyv+mXhH8THi
R8U7iI9Iwh5a7H5vdX+Z181eQ8awzWmLnT/B8869zt3PPb9GdRVmjKr7Q6Gu
+G1Ke0/8cvFbxD8QryM+3GcU9zxnAndgHZ93bX1fEb/W9wnvl0Xu3xbLHfKX
noWE693HbS630GU3Wx43+Ztp/5GjGV77FR7rZpdDJtZZRpZ4XbdbPlb6m9st
c8ja8Ey4v7m3b8uEO5u3wK1OI36L7w/uwGEO+aZ/JtzN3J9ZltHV/5HRNf+R
v+WW41XuRz/fOXw/1WNC9ninzvU40ndY+i4j5C023HUxpr1O2+867rFc0w57
dXeUvYd3evy7HF/p/F1u+27P1xiv0zzLzXavzQTLEOvDGzTLcznCYyY+0n0n
PtbrR13jvE7E0/cc8Ulug/Wf4n6ke3SJ8yY6n7aH+l3Cegz2e4X31ACvA3I3
TRiSCWVnCyOEkcyzvyEvy+tN3u1eb+KzMkEmiE93Haz/DIes/0yHlJss3CwM
EkZlwnuRd+JYvy1Y5/GWFfo4JhPejuQtcLlxwnznEZ/rukYL8xySN8fjIG+J
MFCYKEwypx9T3JfBrref296YhLtvbRzq6+1+cMe2FtpE4YxpKFwZhXOogeN9
hHZC+yicf/WdN8J7pafb5i3b2fPbxetEvzo6b5DzWbNebrNtFN4UjYUmUXgT
ETaNwjl6lfN477QQWkbhHUTYKgrz0dPz3sNprb3fdno/8CZqJjSPwlupqeOd
PNZGUXh3NHJ7vd0vxtzV39E2e3uP9xV7+37H2esPOP51FHQwdLJTwhfCl8Kf
Dr8SPo3C2Yse9plD9LPPHaJLfRKFvX/A36F3HXJ9Bx3/y/XR5tEonA98w7v4
b4X/ROG9/L8oxHnbxkKSCW/ZnI7zlj3D8RLOz5UJb9vThNMz4V2bcZx3/Z9u
n/c9IW3w/o1cjvc47RP/OApnFP37QHheeEF4Pwp6MPHvoqD3onN/7xBd+Zhw
WPhQ+MFpfPeT6yLvR6cRR9/Okwnve3SJ3I6f7zER/0XljggfCb86pI8nvB6s
wx9ep8/c9ovCSy673+M57HG86HU45LUv5jnLIXxjWUAn/tYh4zzuNaaN371+
xH9zX4ifdF9Y88e1by9VeG0SdKFTlil0mBMui5wir6m8EyLvyG4357F32cO8
Xdh/7MP0DCDsEQU7C2c0ZzZ6OHct9xh7ore/aeWy7MV+Lst5n+5P2kv3M/u7
ntvk7YKeP9P1YjvgDuE+Y++x59O9SJjuUULOp8auj3KcQdd6PA2dT7ypx03b
fd0v7jRsSRM8Nmw8Ex1HppEt5Ih1I0S+2A8/R0FekG/2Gev5t0PW8x+HyC8y
h9ywHuwB5Jh62QPkE0cWWXvKIYu/WxaQzd8sC+y/Xy0LQz33qR2FkPcC9qlJ
HkNqT5kSBV0ZWUA+UhsZ5TjL+nj9Yu8B2kBGGesxz8UAz80g18f3T0v2KjLn
SbAZcUa95nEV9l5P5TuV92+i7LOQkP3xvueYOfnAc0z8PacxP+94Lr/1PHOW
cYalZyX7hXPkaBT2SXpe8M0B57OPXnb+R1H22cr3nJucp+wpbA7YM1J7CSE2
AnR87AjYIao6DVsCdoDGzqvitMY+74p4Lg55rLRx0O3Q9qvuF/1+UvNZQWGn
JMgP88c4n47CPKb2vLeibHseIXUjjzl9Xv/itcxpeUl8nh+3nOW2POb1GYhc
5vPZmJ7dBX2WcKbktwzm8h1w0vKUz3cI61DIZz/fFbD85vbZ+rFlNj1TCenj
M14n1vZZrzfxfU5jzE94fKl98Q3PX0WvAzYyzlnO4vTcPWw5OuJ2mJv9bvuI
849Zzp6z/NH28/4uvUdy+LzG5oO+gt6CrQn7Td1Mtr2prO+R6plsO1Y1ywjz
gl0Mu1dqz63l+SXtQq8NdzB3L2dOUcsN91QN10s/ijkvp8um9zNhca9NCdeF
LQvbXk3Hq1o2H/P8IfsTJG/6i4pL3lbZvlEzCetZ1v0ubrmv6LYrZLJtYITl
3Zcq3gel3GYN96uyvy/ssqlNrpznLpfnroTlsqTj+T1fpb3GvBN5L7LHeCfy
XmSf8ZbsYlno7HLMLzbQVu4Lts4WmWwb/eVuu57XsrHruM79qu+8Gv6uufve
IJNtD0WfSO2jhKktlhD9La/XoJTHUMvrkcdpjLOA159x5nO5CzLZ/oM6zqe/
td1X6m7veBuP8zKPtaXLtnVeXZdNdfF2zltre1ftJPtuQ+44IzkXOCf4Dl0k
tWcT9s5k26+7uS/9XI55560/0OswyPGOTrvJcfSiSe5vD9c10GkTPX/9XS/z
OsBx6pvi7xlzT3+f2t97uRw61Tinoc+kuhchOsFaYWkm6En9XHasxzfG3/R1
2hjLxGC338Z10fYmYZ2wKhN0TnRAdELkaIi/AVPd74Fuk3nYpHm/RHNcNwll
p7kcuiU65yzXNd15w52GfokumuVy9BFdcX4mWyec63GiE6LjpnopeuoIp2V5
bPP9zSh/NyeTrdPS9jLXzxxtVl8XKlyJbdNjmehwqcd1N3ZJ5jgJeuWdmTDG
rebrkjB3I92X8W6D+jd6bah7jdvC97cbu634vUkou9x9WuUy9Gud08nnvYAs
c/emdhnG1M3zy1zu0DcrFG5ReI/rp50N5jsVrtceOUt1rU9C+dVKvy8JY1zt
ecAGznmKfX6r+z8hE86Lrm5/pdOZp22WmTssN+vc5w2eH+apmb9Dpngfcb/+
5fcC9/FJvxfYo7/77XLC+/ao037z2+Kk81I985TfRMwNb7SvXDd5Td0m52n6
lqXt9C1LnLcU3xHflfxLo+1JGN9Gjx2+1TKBv2BflO0L4O2y0D4C3jSL7Avg
7l9iXwBvgsVel7PFN8Rh3plz2uruPcBa4lPgDYS/oIdlirzU39bV42Evsc/w
ZXDf43fA98FbAR8H/g7ufnwcw+Lgf84nfpt4Dt40lrFNXrt1Xktkbo/yFltm
ulq+kLmx+janvi2i9MHi+LZzM44kcNJGCWeIn5UEfwfvGHwx+EF49+DryZkE
/RI/yAr7I6olQX6WeQ/h00F3wr+zQ/w88auS4D/iXY6fCJ8Rvlx8DePEzxU/
W/zNOOhsNyHb4iXEG9s3gS0Y3wp+FmyO+CyGihdlqZLgy8D+iM9iotstytqJ
ny/eRPyNOOh+/cV/iYPvHT/Ig+JXRMHn8kQc9LRrxJ+Kg17XUfyhOOil7bBp
2ydyJXtFvIx4BfHH4qDvdRC/V7yUeDPx0eLniBdKgu8GGzV+nOfjoCveIL5T
vCSynwQfGTot/rIR4sXF84vvsZ2/pfjbcdCHb06CzR99GDs//i90LWz7L8ZB
v+2aBF8AOjA2+cNx0LWGiR+Jg83sVvFX4qCT90yCnwvdDNs+fkD0OnxqB+Kg
w/cWfz0Oentf9k0cdOMuSfAvoJvhI8NfgL6GP2Ke+AXiFyfBJ4jeiG9xitf6
HPE7xEuLlxOf7TksIz7d61hCfJbnqlQS/A7ogqk/Ap0TH8Re+wjwkQ0XLyae
Jwl+NPwFrZLgC8OWjb9sfxx08u6WmWqWva2e/4bm6JgNxJeKXyhe2fKADDcS
3+a1RjY2xcFncQV3UBz+h6Se+C7PQ3PxLe5bA3N0rvreO1VcJ7JUw7KBnFS3
PFNPTcvYfXHw77QQ3x0Hnxr1b7ZNpp73VFXvx23CXb7L8LdiK8dvi08TW/l0
11Pade7xeFu5zqLu577YdpAk+B+xreMPfTcOtpvBSfAF4w+Y4nko7zl5Pw72
mqFJ8B1jZ5nqsZSxnDOflTz//wde+0hn
            "]], 
           Polygon3DBox[CompressedData["
1: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
            "]], 
           
           Polygon3DBox[{{2222, 414, 2210, 2215, 2216}, {2214, 2213, 2203, 
            413, 2218}, {2208, 403, 2211, 1951, 1952}, {1900, 1899, 2055, 401,
             2204}}]}], Lighting -> {{"Ambient", 
            RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
           "Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
            ImageScaled[{2, 0, 2}]}}]}, {
        RGBColor[0.368417, 0.506779, 0.709798], 
        Opacity[0.5], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 3], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1:eJxNWXm8jVUXPvc9XO8+ho6pm9k1DyHjNWTKPBRJRWXImJnIUEmozIkiJCRD
KJK+FKKUS2TO2CXXlema5wzd73m+9by/+/2xzn72fve8117rWfvEdxnQpr8X
CoWu4SeMdH00FPolJhRa6EKheBRkgWSFFFGaDVIbkgNSAlIYkln1CkB8iIMU
VBqBFFLKehUh+VW3GOQhSBRSGpILkhtSUv3nhJRSym+V1I59F9Vc2H4W5j4W
8g6kPCQPJC+kBCQ7JAekOCSqfAV9zwd5FBIHeQRSTinbl4U8rG9lILmVr6L1
cN2lkc+lbyU1Tk5IKaX8VgH18kLyQR5TyvWXh+TRN6YZIBm1pn/Q7q5ne3ob
6R3OA9iDhCGPKM2g/eLBxUAeVupp/x6g3b+QWOCrnp0x9/oe0vue7WmaZ+25
jxyT3ziPK5614RiXPcvz/DkXzq+c5pFH68mks380bHPltzKaH+dVVim/FUP7
h3Qe3I9YtaeO3ETZLc/ynO91z/Yoo+pRp254Vo/6xLrcI47NuvxGfeG6ubai
kGwa7zGdeX7Ie5BBkFch45QOhoxXOgQyBtIP0l/6xXSA9IzpQMhkyDDIcMjH
asO6kyBD9W0mZLS+TVHdEZD3lb4O+QgyCvI2ZCLkNbVvDqkKqQZpB2kAaQh5
GvI4pDakNaSW8u31vRHkBaWNIS8qbQJ5SWlT6jOkEKQwZILWzbFbaMwEyFOQ
GpCakJYqqw6ZoflybR9C3tIapmpNb2itXSHdtBddlOfaXla+MqSg5lEJUkD5
ijor5vf7odAfsEtpSNdANgJPczbXzuprrcp3IK0YCYWSga8CxwDvBt7m235z
Lt01vx6Qnppvd+W5nr46e66vj/LTISO1zg/U/k3INKX8VgSS1TOd4170Vnvq
VwdIR9V7BdLLM11jWSf10VPfhqiss8brpb4qy/7RBlWVHYrXnb+I75cgKZBd
kN2QvyF7IHshf0ISIVshp/Sd35Ihv0N2Qk4qZfsTkB369hdku/JHIL9CtkCO
Q37TtyT1vQ1yTCm/NcHcWkHqQPYh/yNko8ZeD9kAOcszhvzhmX05pbnf0XqY
P+NZe9Y7rTUxfwiyGfIL5LBSzu+o5piouhs09n6Nv0njMf0JchDys/rq5exc
BkB3uju7R32Aezi7R32B+zvT38HA/Zzp4KvAA53p2GvAA5zp+xDgjsB1gLsB
v+TsvnYBHuZMR94EbunMBz0DPMiZTg4FbuHMF7UBfsqZ/3oWuLkzv/Q08KvO
9HcY8GvOdOZ14CHOdGoEcBfgJ6hjwJ2A6wJ3B+7qzLb0Au7pzD70A+7mzJ70
jpidPanz6Izyekh7oPwVZ7akP/BgZzo8HPhl4PrUaeC+znR5EHAfZ7o9ELiD
MxvWNWK2PFlj3NX585zv6+ypI99DPocsgqyFLFT+O8hnyvM8l0NW6FyZfqlz
/QqyUvr6H7Wjzn4DWQP5QX0vlu5+q3o7VHet9HqNvq1T3SXSZaZLpV/LNA/a
rv2wP7uQJohLkb/8g7WflI2qpnvMb9Qp2sqh0mXOdxVkNvboR9T/3jf/z7t+
WTr9hcZbIFu32Td9X6pv5AUXPLMRO7WPXGsrz+x6Ld0ZjvO17sxq7ct5yAHd
D7bnHaMNuKSU9yxV33kXLyhlPfpk2gjajxtKaVfu6WzPaA3sg/YpTeOxv5uq
S52gPz+nb+QFx9QvOUqS8lfUR5Lm/SlkntbzCWSuzo1l83WuC6Q336qM+S1q
s1oyV31xb+aor906+/U6n9n6Ri6Vqj34XfrCvd6l/WabZs44Y2ucVRvP9J92
oa1n95H3ineaHJTckzyJ/DXgTUzJawLOSg5Lf0k/Sv9JP1pF+QIqC3wpU/Kg
QF85n3wqIy8m9y2vfvOqjPnFqss1xGlMzi/gu+S/5AjkCk96ZtvIUQJuwjTQ
tVaqV111ySnIcch1mnnGO1oon0N9B1y+hPYit/aGHDxBfbBNLpVxTtS/izoL
3oMNWnNTnFFLSHXIfJxBLaRLkK6AbMDd2Yq7sxy4EcpnRMx30YcVhxzE2e0R
l1iitnMjVr8m8CeRdL5L/ttAbWuLC5dRrBMnrlxWXLmc8q3DNj/OraFwXchK
9LsM434RsbJ6Ki+mlPZkFb41RvpVxMpYh/ZmJvI1kC6KGDchR4n3bE70ydkV
L9QW/lpr51ifRWy9XHdLzaeh1sX6jAFbaI0sy6X1MW6jXreRHmSTznJs+jry
qoAfMQ04DlPyI/qo5yHPeemcNeCwTANuy5Scl76rndq8oj7Ip+qrj2c982Pt
VS/g+gH3Z8qYgDxvtOZH/jdGefp22uOAbzIlR6OfJ6ckz+2kMvZNP0x+SF7Z
QWMw3uio78wHsUQQW4zVeD01d7bvrj5GqD3n+K5nPo92Za3GnKD1cF4Tled8
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
TWdclG/05KWrosY9ZqLsvzCZcts=
            "]], 
           Polygon3DBox[CompressedData["
1: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
us7SX839Ru+R/qD07rnL7o1+GOv5wj7hoeS9pc19hd8evBnOxBsktsIn44uJ
saiDW8MxaXNmsm9sLJwk/Yxk+UDhROmnJ8sHCCdIP0X6fnAL4Tjpp0rfP3fZ
sdJnaayZwmeSFwijeFMV78Or8SaIXYhRZgTnmhq8lLfIXs8QPim856clj80Y
xxfua2TFe0qfyCMqPoNuMQbl7PXwAHs9pMp1ALlnlefGeWCr8WNDws+yt4PC
r12XzN3geFdEW9oMrvz/N92rfKb0tZfa7ynsIHnHwvFva3xn7ni4UTLHg9vt
zHkJH+mtz8v8rnlncyTPzryPvJO5WZTFu6ctZbyjH9hnyZ8JX0j/knucuc9P
pP8kfWHmNsukfy39k8xtPpW+nHsteb6wSPru0ncrzNv2TY5piW2JqTaLOJfY
eJOIs77Wb76KcVYJ3xbuizEWqPz7wnNjjMXSdy3MA9kD9uJn7ErmOdJPbZV9
yVzhjGX7gYmSJ2Q+Z/zyOMljM79Tzmp85jLOjHdLXbUwtGy/UCN5UmY7xT2h
L37DOyqzBsaGo4UdmMXeC9Ok/82bkbwEDiy9Krktc/xdep4816Vweum/qP3n
mdf0DedR9r5zTj8KfxTuazGcO+75h5nHxA5xJ7gbDeMecYe4S+RhGsS9gifD
8yhrF3y5FHygfcQDWfCTNsFH4aDwo7bBR/kN/Kd18GvawK86RLyQB59pEfEI
HP6wwvxqdfB5+BfxyIqIB4hPmkZ8AceHv7AG1lI/1tE8+Cl9wM+IT76TvDxz
vEL8sjziEeKbZhFf8Bv4IPzxt+Dj8FX465qID+CzRwdfZ03wV3I0xDXkdMjT
kEchbiHuIZdDToUyZHJZ5GjI1ZBzIfeCTJxE3ENZ3eiTvrYMv4qvJK4iz4OP
pQyZ3A85NPJm5HXI9cAn78VWB9+CfyHfH3zr27LvDe9ideEcEbki/DK+nBwR
eSFySOSS1ubkCsdhjEFb4rR64ffhOD3CTr4Vfpq3wJsaHX5zcuY3Ao/6tex3
x72uxV0p+11w79flrpR973mn6whvSW4svnKg8HwynhNGll23mrXEOyol+1Te
6NDwo/CVrlr7M7njZfz/U5KfDj6TC5lQqDwJP5X9DnlHf0ZdqfA7pg3xN309
KzxemC88mbtP+AR8ib67Bj/C5/PmeevThZfht8l+syb8Pm+UtwlXICYjzoFj
vx15S3zr2IibkYl9qyOuhzNh07Hl+EZ8Dr5nLQeOvogzRgdvR8bGjQreD49n
z4YFb4HTU4YMl4GTMEfm9l7ZPhffix+Fu8CvuuTeA/gSa3sxmROwRu4GNnZE
+FVysKyJtZALYI7cIe4OcydeWhnxO/EkfO9x9f1E8FPikc5wuYgXyOu8i23L
zIOXq8/vwk7+Wjje4O4/EPHESnyGsEby78LSsv0afmRlYR5NX1My8+glZfsV
/NiKwryauncy80Byce9lngN5JvrG7v5WeAzirhmqm56ZF3F272cu4wzJ3U3L
3Mf84E20pWxh8EzG4g3BQ+eX7Xfx68s4i7L9LH75K+5C2X4RP/xNYb73MHc9
+B18D/nR4HPEaw/lbgMfJB5gr7sEXyYeY+86R/wH334s95nAv+GH9PVY8G/y
ooVQV+UbJedIKUPeWPi8bB6AH/9OWFX2m+Ot/VU4HuRsH4r4cR2htrAe3AAb
IblK2EDyhkK5cBlyJbltLaFO8m+IJ36KfAX5a/Jd+BLuGPE48TW+qFbEz/T7
Lb41cz99pPeOO83dhs/uqLY75c73kP9B3jl3Pof8DvIuufM/L0hvKdvVTOif
zH93yN0HfJj8fyvGzv29gu8XyHA6vmcMlN5cv20rvCH5NaFpLcdwxHLkH9uq
bbvc+UHyhcjtg0/yvQRuSBvyk3yPaZl7TL439E2eG3N8PZmP1889R/g5fHw7
ydsH/yYftYfkBrnzS+QT8MXsMfEa+auGqtszd74LfstcOuTOT5KvRO6Y+3sK
+bTdc/dJfgs+Xi/3HIgHyJ/R116580/ko5D3jniG+IC51Qv+Tv6Nvd81d76O
/B3ybrnzeeT3kBmT/B3xVCPJ+wgXFI6X6LtRxFd8/2GunXJ/H2K/+mX+xsW3
rnfKPhvOiHgaG4Gt4I5z17nj3HXeJG+TmBqODbcmVuUNr+XoZcfevGHeMm+c
t46PxlfDXeHCvGneNm+et4+Nw9bh0/Ht2DBsGTYL2wXHhmvDieHG8Gr4D5yI
dwrHpqyId7pxvFveFG8LTgm3xEZiK+HgcPFlwT2fTvbNjeN+8+Z4e/hMfOf6
UYaMr8Wn49vhAHABOABcAG67pmwOABeAA8AF4FUrgr+tF3aFufNGsQNZst/H
hmBLUvhpeMXfZdfBDX4MO4ONwdZgp/EF2A3efK2wM6ydMarCrlTCztQOW0Tf
cAE4C2P8HnYen7M87BjcYUX4Gb4vcneOyf29kPwsb4c3Qn53nnCQ9q6J0D35
PkyMeGJ+9D89/MXKuA/vhX/4Ns5/WvgXxue8poY/4nzIgYyP+Ib7hv8dBTfL
zD/w9/0lD8jMN7ifE4K/cR+Z06vC3Jgr+8dc8GGr4j68G/7r6+AHYyNemhX8
oTriKfgC9oy1suZuyfxlXMRL5IKIQYhtiHGITbjPU8K/L437XxP+kPdEvphc
Jvki8q/kY5HJIZHvhcvy3YDvDHBa8sXkYsnJkm8mf4rtp4z8Mflo6uiT/DP5
Y/oiX0z+nHw6Mvlf8s/ko5HJCXcKnzY5+AHvH3vwTvCJJfG+JwUf5v2Szyfe
I0Ykf98k/A93nO8p5OPpm5z0MYW/X3wT95/vMXD+hREPEgvwnmZGvMf7IuYg
ViZmJhbhe8HX4d/4/kHMTSxPvE4sTsyBzG+IRYgBiO0ZY9uwD2tzCZl9O9/L
j8P25v57AL6vH5u7jO/nfC/n7lPG93b+foC2J+T+fkaOi1xXT6FX8n0lJ0Eu
gvvA+yMXwZjYI77HnYTvzf19lu9x9HVi7u+/fA9Gpg3f6/ieS9tThFvCHpHr
oE/ec53YT/akFPaJvSNm/iPsJ/E0MTq5C76vEYsTk/O9hhwDsTZtsK98z6GO
+J3vScRU5CfYQ2ItvjdRx5nz/YYYkLMhf0FsiP0iN8McsZfEeNTRB7HffwFF
ldHw
            "]], 
           Polygon3DBox[CompressedData["
1:eJwtkM9KAlEUxr9xMGdc9Qq5aqnLcKWgD9Aj+AD5LC7UJjTNP4WEGxWCIKEE
EYVKRgoXLnLtxk1gC+03XBc/zpnvO9+9585ZLn95FZJ0CmHYOtLaks5dKR6V
ElCgH6I94Xl830AXsrZUo97DA1xDGdqQwmtSv8l+wYTsB2fU0ebBeSdSLCI9
o73izWAKS7yX411B5pP+lypyFnj4j2h35BvQY/EV2gLNZ+49uAfGkLbNXlW4
hQPaHiL0/nF+AH3HvPGC+RJeBZK22fUNbwR/+DvX/J8fshvHvLMFRcgw36H+
A7omOAE=
            "]]}], Lighting -> {{"Ambient", 
            RGBColor[
            0.19699838300000003`, 0.252204821, 0.33320940200000004`]}, {
           "Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[
            0.15473514000000002`, 0.21284718000000002`, 0.29811516000000005`], 
            ImageScaled[{2, 0, 2}]}}]}, {
        RGBColor[0.560181, 0.691569, 0.194885], 
        Opacity[0.5], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 3], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1: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
G/WbqakFLcIu4lmHqbdUscau9ULsT0XwDXmHa+xa/4fr/FBFXDA+/Er/ivoW
xv4O3gi8qIg5cq52BH/bMvaGe2RmEbHGmDMpcxD3yIQ8a565cekz52HHpB/T
n81pGfvHfTS3Zeyfr9Mne+bVF1xj1/on+p/O/ML9pT/okuu6A3NyoXNH/1aN
+J3aSfvM3dQrPHuX066gbZb5eLcyzmW//E4fIOe7TL/GmEvFZcQL+y4v4/x7
jf60dqkDHFuGf5SzyF3UDdxr8qzlGpG/qIWo26jTqtdWjciP1EXUYdRs1W7V
ELyG2u1KjciVdgN3acQ9+5f/H6ucpyv5fFU99AQ1GjWYK7CbM757PXSYLRvh
99V8fCfzGr/7kvkcynx+2BzXOzvn3Xc1n+qZ76pepG/ejetcgu0tDwT3Al8K
PhB8vT7TONIIbnyd/r8RnOqaMvJ39/eAMnQwn9nPu9B/MfbiMvSf3q5BGbn/
NY4DL1UGx5PrqcGqm6m3GdseS98s3zC2y50Wcxe5zCNVcAa5g5xCbuF3anrq
fnKJl6rgSG8mF5W3yNmmJY96D7xCPa7/R3IfOZDXGp6a5E2MuTs1xkFFnFnH
yk3uqMKfDAQ/AP6xReiWD6aGqc55YxXPox75b/CW9eC9C5Prym+/SQ4s7zWX
MKdQ829qFWfWs+seNIeQ136Z+UVNPwNeox48c2ZyVznqB1XkGuYc8uEd6lEv
MH8wj7COMD9zliXBX2cuIA83v5GfL86BtIvzFa38W07u85hryBXN0dRjv8s8
pSX9i6rIX1ZIni/HllfLb+V4cr1JyXXlxZ5zz7u5f9vckxeCN8k92ctnbg4f
qC+UN/fL86t/uCrPjWekb57xcxafpzwfnpM+9fAhfXJPegaN78Z5/YU+Rf+x
ae7bPsnT7ZM3bJ17eEDyqKtz33umbs3f98jz1jfPdv88v2fmOO+j39f/m4vV
lg5OK7edkjnCgswd3KPyXnm8e91zYP4in38pc0z7/Cz3l8/L4cclb5fbP5M8
/Lkiznz/fI55zaFZfYb9lDYE/C52bPJ/Of+Y5PnmAo9Vwdvl76OS548Gv5D8
31xgUp5dz/P0zKE+ypzXXMkcSS19buYR1kqsj6i3D6xCH7CWdD34sxZRK3Hs
jBahv1gHUBtRczkqc9W2mXuak1pnuaYKjeIs8BVVxPHu4COq0PHMbX/N+pR1
qgFVaA7Wwi6uorZljeuiKmph1sSs44itERxdxJg+mRePBR+APaYKXWjjzJHV
dqyjqY2be5qzy2sfTR/XohE57NplcN5H8jtrZHJWa1vmBNay/GzO8HCOW6IR
WsEajDk/c3DrNWdVwXn2AB9fxTNY8+lWhb6kht2zCn7SEXxhFRqRNRHrdM6z
NQ7rIPMz/zq3Cu2oC/gfVWhQ1lPermLPmf9ulnxS7t0u+eTU5vCvrp+52p5V
1Lysc/Uqov4yHLtHFXUla2EdquByP4J3qoILfQfuWEUNy9rTXlXUy6yL/Qbe
hWdYOX2S58QzMTfPjLrBe1VoIGoh+kJzf/NJdRX1EHUR9Rz7zDXVBRyjhrBM
q+BL8iZrW9a52hVR87K21R57cBX8cI0i9Fw50pPJk+U5apZqqb2TS49JTq6u
qUYsn5wInpvnUS15XOrA6sFqsn2Se3+a8d2a2rz0hyX4p6zTWa/7ujl4Y0t9
SRH9OxVRH7SGuHURtTlrhVsUoRcPSv5/WBV1vXXoX76I2uJ2vm8ZcUH9ZlIZ
+Y51ZjVVcz1zPrVl8x3znmtpX9Wj9nF91jWGZF3Dmoi1kcGJ5cPq2+Y15jcv
5vXVXb2XeZP501lZp5hdhj5sHmi+e3wjNFu128ll5GjmaufQXgW/V4Ym6Vm6
KJ/nC31g6sDmreavvRtRo5lbxm/87YBG6If6HTVGtUr1THXLm9IfPlqE3qi/
0m+pVerH9GfqnNYt1R77pz5gDeiUzE08rycUcR49l+qlnkfPpRqsZ80zpy/y
vHhuLsn8RW1YTdWzrw9Qm/Wcel4HZP6i/1sn85Qzy9DG5Z/y0LeL8M9qXWpN
xlz5oLqoMbdTauPGTbnzX2jXgQfR934RMV39TC1LLionHVFELHvD9y7C56uT
PVNEvFAfGlVEvFA3cu6cQ7WsT4vQ2dTbPi6Cz6jJqakZNyaALylDx1DP2D55
qdqttQa1GjUbawq7pn+1NtEh/WXn5DfWLNo0QnNTe1svc41zzEHK0DrUPLZN
rquO2KoR9QvrGI+XwY3lyNZQzDHUG7pmXm9N5pjUAcYmZzZ/vx+8XyPqMtZn
GqlpWPdQ0zYGGYtuKCJ+GcdOqiJOqcG/XIUv+rGItXM+jcPma8b3Z3Le/qfL
VbFGzrPx+cXkhN/Rt2YRcdC6lnP+P60v10iuK+cdVwSnlds+mlx6qv6gCl46
A/xUERz4jlzTRcmdXfdGrteEIviwvLhz3tc4/ErWztQhisV+qYq8Rf+2kpyx
CF/k/xp8lr5xVfl1c8QL/x/B2pmxwP+hmJZ1NHWgP5rjfyf8H4p6+m1rcO8m
z2kNnt0ctbkVnMPmqM0tV4Wuob6xqIwanzHL/9fwfxr834YtPFNl8Hb5+3pl
8Hl5/ZplcGk59RbpY63vWNNRS7dOZF1GniBfsHaj9m6N5oDkEtaYVisiDhoP
uyUnkXesVUQcNB6uV8Q8GD/bFPGcxljrU86JcdI6lPNg7al9xixrPe1yTqwB
/bmIOGu8lTNY07G2Y71pVPIstRRjnLFOnm+eaz3wpyrqbtbf/lpGLDYmb1BG
vmPes2oZuYY5x/dV5M7WAFuXkcuY0/yWvkjOqKZhjmau1in3gHFpSBW+RR/z
QBE5oFr6+1XkGtavjFNyErmJOab5kXnSh1XoIdap3JPyZPXv1ukfrL24v93n
1mjc//Jn9W/3untezcTn9F1ey3VXh1yQ76jPsS7h+fScqsl73jx31nHcG/LA
uTk/aq3f5l5S17K281/ZN0Jw
            "]], 
           Polygon3DBox[CompressedData["
1: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
hT/imfQsykVnInfM9VNXGeMz1tcl9cVb6iTPBGUfAjNa4mx6Rp9viXiF62+M
Yx39P/e4ETEQYyH6066pa6nvfV4dXFROarzNeIZnZxewRhnxSPfaGMha5qm/
1NXeDbBZpin/oG6pYo/d2xXKOLOeXWOIxhL3LyK2ZIxp4yLisl+AzpT9I1it
jNiUMY6vU3cZq5iXPHZUEbEQ12gM8iu5XvoswzwjqS/1ee7j9xv8HuedQ34A
jCzCf1mM/NHI84rwK0aTNwb8M+N916U/qk+mb6YPqj+tjtXX0KdQ976YtlwO
JP9wTY19GLNwrQdR52rq3gn2oK0jy/B95LDr8vsAfv8TrI68BlgNrAr2I23/
MuRVwL5lpFn2GOqe04g6R5fhaw2Qc9XBAcfnHfAuGBMzjuU5vh1sUUec+zTq
ne5e1hHHPRH5JHBKGbFwY+KbkX5gGWN0bGvWEcfy7HqG/11FGeO4vbPulnX0
YdtnlMGvtMXa5NYidJT3W87VDvlwyhwG1qHOn409ldGnff0J7AZ2zTj9VWD3
TFO+uow77l03hr4g/RZ9gZeS11xbxh649nuCocjXMPa7wD51cHR56WvJQ7Xh
2nI5mFzsbNcDbEXZrevo80rn3oixuLZXpl5wjZ3LceT1a8Sc1Gnqto5pZ3qA
Q8Ba5K1dh/6Uu8gR1K/6tPq2xm1ezrLH0lbfRtQZwu/BYC/kvevYM+PXxtTd
S2POnn3vgPfhFvJvQL5I/4T8F6rgd9rrz4qY11/qWCPX6q85T/uwL2XLXFv+
nnYVdfs0oqzxf7nExIwHy9v1FcYlN5qfvE2ep/3UnzW28ag+LPID4P4y/GR9
Z9835EZyNt8rvO/e1Z8z/nmD48z72D3fB4xVTMr49IPZpm0dBbZF3gYsibyU
Z7gKXi2n/i75vtxOjiffkKfrK0xNni5nN01Z7i4Hl4sb8zb2vS1tbpPn6npw
QhlvI76RbET6hWWs/cngWO8+OA35UrCh8QPvXSPecHzLUaer2x9M22880dip
cUnjn2URvoccwfi/nF3uLq/XF7CMsVJjkMPTxmnr9CH1JWcXwSU9H+pK6+p7
zE4/4umsY9knwB7IbyY/PIvfdRV3xrui7zY4z413yzOp36NvNTljC8YU5P36
zO+l36xNnpRxhB3VaY3wGYwd6bPpu+lHfdoa9ktfxDPr2d2hDH/aGJKxJDn4
9PTp9LuM6Rjb0c7LDfR59H18F/y5Ctk4se9SpnUrI9btHnSuI89YsnF0yxjX
MdZizMU4iz6dc3RuH4JaHeI9Th4jH3SOzs1Yyd9JO5i6vT3TlDuO36ciHwJ2
lpuRtqg6OO2qceTLktfIczrUUWaTtLOeMc+aumvfOt44fVdbHHmJOs76vo3Q
GZ5583wH6FRHmcWqiNvolxur0OfQ9xibdlIbqa28L3nq7mW8jaljVqpjL+Vo
72YcpGsZd8y7tTTolef/MLBrGWfUd5uiiLPbU7tD3qFyjDJi5s75puR2cjq5
nW8Gxs+NjxrLntCIeJtjN840IeMsF5Tx9jkUdCP/vDJsoTbctzvLyunGZxzC
GJ17elrGzkanflkl+dmAMmyzOmYH8i/i98XIN6b+7G8+2A55e9APuW8ZeqBr
HbbEWMerGce4pAxdcCv4O/kr1/HOuKc6HNwKbibvEnBxGRxTXmmc5xnQpwwb
pB5W39q3tmVQI8YgX9QXWCz5UBfHhrw/aMgd+L19I+7MQnVwMrlZE3KbOmS5
+K9VpMnxdsv9a60jJmMcRh9/VMaJTBuVcRz9BX2Ho9E5C3UIHig3bJN+2w/J
E9umXyEnlZseDoo6OKZcswdYpA4OKBdsi9wMxpYRazXmarzTGJVjsG9jSZbt
St5+jajj2snNjZG5hiM8d43wZ41nyC93bITOaaH8TWlP3HNji75JGSMzNuZb
rTFhY8O+6fu27zr9UsU92zbX0TRl74IxQGOB3nnvvv67XF6OKlf1zv9293O+
fhPgtwG+ufv2rq001vFMxkl8c/Od6B3S3i1jLL5V+O7dK/Whe71d7q/61Fjj
Djm/p/n9SCPeKIwvq+8OaESMz1jf9mWsXdc8L74fvN6IN48r6uAm+m76cHIU
76x3d9c8H3eX8bbkG9Mh/O5eBm9VZ6m77ijjrck3p4Pq0CfuvWeg5PcuVfjq
+uy+jR5axzvVPZS7t4y3UX1VfVb9cjmR3MgyljUGYSxCv2N6FXquYx2c9cDU
i52Sx8ot9857p85Wd7uWvg36DYFr6hx8F7urjLmpw7wLu+V5te3F6uDh9uGb
rpxYLnxHFfxkUPI/9YdrIW9fNPW4e+hboG+C/VJ/yOXl9PJBObRcukvqCvmB
sbQD0j7po+irvJl+oPy/Z95vY83GR+Ri2uzdi+Acco+D0v4YH5mU7/fGXoy5
GUczRv5ExuH0ifWFTTP+YRnzjI373vlLS7wZ+77ie9ILjXiz8e3G97D3GvGm
4dvGGVXEqoxZ9S4iruPbvjFTY6cjythT9/KwOjiGXGNqxod88/Dtw29mfA97
toy3kVvA7cjLyDnq4N36EtcV4evq8+pf+57iW6tvrn5vc2YZfol+lb6Wfoa+
jTq2T+bpu+hzWcZ3ad/sjKEaSzV+9hPtL8j4mjEgY0F+d3JqFXZQuytvl+vb
tn7aWanHe+Z50kbKFY3HGAszJrZLEXfu8jre8LyLxufmk/ejMeci3qR8m3KO
Q4qIMRlr8hsjvzWSX6hL5ZjH55rIBeQErpXxGGNnxtDWLIIb+K1Ax7wnj5Th
q+qzyi8eL8NX0mfan9+3lbH2vkkdyO+by/CVz0v7ax25ycNltDW8DK6ujv0H
6U+W8dbrmfH98fIyvgnSh9SX1B5emvt7W95tY4/GFLzjj5Xhj2sTjsv+tf2+
IfuWrA3Vlsqx5Nf6+8Ze3DO/1zks9Ya6ZVgZb5LusXvrW+UNRay18Zx7+f1U
GbZfHaou9bsgvx3yG6KDilgfx+RYjq/Dp9G3uTnXx28u1LXaHL/XuKyMb6j0
ufXXXijjTV6do+65Pdf3suQLfnPlt1eHFPHdxllFvOUaU/X7HPmFZeVU+hvG
fz2b8zOe6zdMjtmxHlyEPpaLyEl2rsPnXid5hdzG+foWqc+o72jM3Ni535D4
/ZJr4tpoU18ugn+59/J3Y//6O3JdOZPcSZ2m3ypHUtfpP+u7GyMwVmCM33iz
8R6/d/J8+DYtfzMW4zdxfhvndyt+u2ZdYwHGMLbI8+pZ8x322DrO6H517Il7
I59TF+uTG28ZlnbFmMJvsYUi7p46Sl1lrNTYvT6SMVP5pG+N6tj1ki/4Ldi9
eZ7vy3NkW8YDPO/mGQP0Wwz9ImMP+rj6pXtlmvKDueb69t5R98JvsrTdcraV
yfsfx/yvwQ==
            "]], 
           Polygon3DBox[CompressedData["
1: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
/SvN8rV5gPgHYSf2TcQ9R9wa9Gz4H2QfOrQ=
            "]]}], 
         Lighting -> {{"Ambient", 
            RGBColor[0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
           "Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
            ImageScaled[{2, 0, 2}]}}]}, {
        RGBColor[0.922526, 0.385626, 0.209179], 
        Opacity[0.5], 
        EdgeForm[None], 
        Specularity[
         GrayLevel[1], 6], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1:eJxNmgn4lmMWxj/qfZXle14tKolS2sjevkja95JUKpEoWikRlYiEFEWptIls
WcsuDGOGsY0ZMxhmhhmMYbKNMRjM/bvO/V25rv+5znmf73mf9Sz3Oe+/0enT
hk7dvVQqHVilVNJfaUhWKp0pmiDaK5VK9cTrFKXSOvEHRQ+Ibja/X3R1ivar
xKuL6kqupf4bxLeLtokyte8nXqh9k/jDoodEe6i9jngNtVeRXFtyWXJJci3J
e0v+b7lU2ldyLnmt57xP9Ge1VxP/Wn1vF39S9ARc7buJ/1Htd4jv8G9r/N69
os2iR0WPiG4xZ03f690a4tU010avkT38qPaa4nuq/UbROXmp9LjG3+I5Hxf9
R30K8ar6/Vr99ozkpSnm/KXoOc8Nf1Z0j/kvvKfn3e9OjfND1VLpBb17hec4
X2NeJ/nXkpelOPtf+Z0rvf/Z6vOJ3t2L+5H8heR9JJckfya5LHm3Iu7q136f
Pb8k+o3oK/VJ4lXU5yPJe0r+QWNfrOeXJS+XfKf4Uz7T99Wnuvi3Kfb/muhV
n9eLohdEd4me9jsPeR5+e8x9XxHNKeJ5icZ5VmPuLvkdyQt0xpNFU0TVRF+p
/d/cgeSvOW/RRvX7l/ht6F4ev/Pb7nm070THJH+ZxftVJX8m/jk6mQf/At3K
g9PvJ9E/RZ+IbhBdIlogultr+1H3cp/4aj1fLroCvUdHxW/VGvbPY1zGq2/O
/Hvlsd5vON881sU6tmusErrI2OIfe+5b9Pw/zbVFfJ3oe8kb6ZvHuj4Vrfad
7vDeDxQ1EC3Xes4Wf0zt0yRfpj4zUvCpommiM/R8rvi56JTGqSL5PexY8k+a
61XJ4/XuRLWfKvlS8Sl+/z6fw0tq76J5Wohais5U/8n6/fQU+2Ffv5M8T3yS
6GzOLIXtzVTfN9Qnl/wvtQ0VPysLv/Oy2quKf6D230rOOBfJ54mPZT2cuWgW
diFazHh+vjKLfjxfIBrPXkWj9P5pjC/+lsbcg3uXPJv1ut+YFD5vkvgBvjf0
bmEKH3FeEfeODWO7i1Pox4Vq3yJ5tzz08DPrGfd8fQo/Mxe/kcLW50u+RfJf
0J8i7py7/0H0keh/ou9F69Xnd+IL1ecaybdJvqgIPUKf9sx36XFV2wRt6MI8
9fs9+ov/ER2ttiVF+MHXRb/9md7z/s0p2i9Tn7slH6S2q4uwmWo+C2yrus/k
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
q8TXFKH7izzu/wF1MZCj
            "]], 
           Polygon3DBox[CompressedData["
1:eJxNmWfYFtURhl+Q/RTB3bVXsFcsgB0biqKigNIUK6CIAoK9KxI7YEEFO4pd
DGKLImps2BV7SxDQ2EtiL1jvm5lcyY+5vnn27Lt79pwzzzwz36qDRvYa0bzR
aExr1mi04G+/utHYuWg0dsH2qhqNA8Aj8UdgB4H3AQ/FPww7ADwQfDL+SdhQ
8Fngb/G/wa4HLwfeCH9DrDV4EPiUIn4zDLx/Hc8+HBsIXhK8Af762CLgs8Hf
FfHMG8AD6njXic4BvBh4Pfx1sebgP7DV8FfFviobjcGMn44/yncwdhD41CLm
MBxcgNfCXxP7kftHg9/Dn4ddxfjC4LWLuGc+46PAb+G/iU3M+ffH3yfX5wes
LX4bbC7392e8D37fXK9/Yyvhr+gzGG/O+Br4q7tmZayv9/bDBnBvB/C2+Nu4
JuBDwKOL+KaR4L3BB/tubF/wiuD2Rax5DT4QfBz+sdgh4P3AexcxZ9f7XPB8
/J+xG8E7g7fA3xLrCm5Vx9qug/3B/PqCuxZxRvoy3hu8I/5OWB/wGeCP8T/C
rgHvCx5WxJkZkPf7bufQG1yB2xWxhy3AQ/N8uEcngA8DH6+PHQc+PL//L54h
8JHg8/DHuCbgI8DnFnFtFHhY7vdpnlHwenV8m9+4GngXcA/87vm9J4MfxJ+B
jQOfCp6F/yJ2MXi3OvbCPdkd3A28de7PbuBe4C5FrInf1xO8Pf4O2B7gHuDO
RVzrCe4O3q6Iaz3Au+d+e607eFfwVkW8oxt4HfDm+JthbcGb5vO8vz24HbhT
7t8a4I3z+T5zQ/Be4AH4B7oH4BF1rOUZrnmel4H4g7AhVfDBfp6t3G/jdwj+
oRk/feo4+/1z/43PwZ61IvhAftAfkvE+Qf5owscezvXyLOyF7Qk+OPllWMbr
4Dw/w/O8b5Tr73qsl+uzh2uJ7QLeMPfDNVsHPCT56wgtz7d7vbtnNvenX8an
+3Eo+Cj8ozVwV3A3/F2xLuAuyY/GwDbgnergSq91Bo8EX45/Wa7nR9gK+Mtj
s8o4z+PwxxqT+b5z8M/GjgI/htX4FXYt9x/P+K34t3gPY+/KqfjLYjMZP4rx
6/EnGxOMvV/Fu7znOcZPYPy2Ip5xLmMngqcUce28jJ9JxmrGi9+7aZ6vHTKe
HLvaGMrv3Rh/E88w+GjwDUXM4QzwmeBPiuCAa8HHgm/CvxE7C3xMHb6/OTPj
z7Pqmd0Z/DS2BP7izpn5v13Fty6DPVJGfPTG75XxNxx8ibGZ8b0DuAN+R898
xueeRZwR42fzjEdjpiN4uzq4y3jtBF67jm93DVZO/vDZ44vgI+Pfd++Z8d4j
+bpPxm/35PveGb8vY0vjL4Xdx/y3rIMLnMMmjL1exbd5zwzGF68j98mJTYy9
WMVvl8TuYnyVOr7Nb1wq49ezNrEIPlyzjr1xj5YHb5P8LCdtDh4DXozYa43d
Cv4S+8J58Ow3ysgnPXO99uN6pzrm7Fw3xbaoYw1du42x9evgHLlmTWxl/LbY
EuZyc10dOclctDi2bR1zci5bYJvVwWFyVwdskzo4S67aCGtfR8wb6+2wGeYE
5t4Xu4TrD8hp+F2w8eAVsOX9Rq6X2N+wHRlrj13I9RFV5AI5Rq7pWEeONbdu
gN2Hbc+9/bD78VetY81d66WxNfBXx5Y1DrG16lhz13qFKs5wp+SjXavQKGoV
c/T+zqUODpE7PJ/mZHOznLxP8uMo3n0a9hD4tjLiYCb+k9hExk9vinvkzwer
4FLX4NI6Ytbzu5tnWv7E9i+C0w7G71zHmfesbyXfV8Hlnlm1Sr8q+Fx+M9d7
BjwLg3P+g6rgYjlbLWGOMFeYow/F718Ftw7M77mZud+EPY7/BHa3Z6Yp1vge
xz2D3NscfEsVOd5cf77PrIKD5WJz+jHyVRW5Sk6X209xzYrQBGoD85vf7hyc
y4nYRUVoCrXFOb4z+eI48BXgZ/HnYFfiX43NxX8eO53xC8FT8R/HLsA/H3ug
CE47SW4D/4T/AXYOeAz4Wvx7sbH4l/nd+G9jl+NPwj7Ef0W+5v7rqhhzDSZX
cXbVzGplz/Dv2FjWZhx2nVyPjcefj1i/wvdjE8BXYLfjf8laT8KfaHzLDdh5
+GNcX/w75NOm2INp+FOqWHuv3e55w1rh/2h+4P6p4LbgRbGx4LuMU/w22Pnm
ljre5TvvqGNOl2OTc65T5E/GrsT+Wsf3rCK3mh9y/j/zLdcwPtXcYD7Brjbv
YFfV8W0Tcv5/N6757WLuV97Tqoh3+FvP2o1l5FHPnOd53zwv1jJTyogpY+kp
+RX/BWwu/jzs+TLypnl2DvaOOagMjpQrHy0jD8nbb2AP4z+EvYr/WhUcKpd+
jP9J8uprZegAr71Vhu7/DP/zKt7tO32Xc1DD9Mx8uG4VGsWzrOZb3W/y23yG
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
oKHq0MTyh3yiNrbO+L2Me9X21ij+5k+TBosg
            "]], 
           Polygon3DBox[CompressedData["
1:eJwt0ktLVVEYxvF1wsQMzj4aGh1TMzW1MrpAZAma1Vwd9AH6APY5onEXMiwv
GXQfFNTEopoYRFBEUBFFRanRRbuZWv0Wew/+vM96nnevtfZ+d8Ohw/0Dy0II
m7Ecw/kQzuJOEsKfkhCG6Pt0hfAiPYZz+I1fKCmEUMiyProX/foP8nqTNG+m
5+U/8BP3cBfP5DnZBH0e4zHjLTh3lH6BMvkr9Sv/G1bYr5WXoxf5S+jh7UUX
74CsU32AVfR1+WVcwTVcxaRsyRmX6Nt0om+EPoVBfMRK3oy6GHsxR88i55x8
1j/Hn8Vbei3vpfoO5fSH+I1k8zjtmaOlIZxRp/jTuIWbeCT/5y436E30RmzR
15K940KcAz7J63jv1ST20DvVDr270Yk96OD1ZFm8Vy1dRdfJ6rN8H68vSWcV
Z/ZcXw2vgrfGuoj2uB+vjbcBLUn67o287/o/4wuq+duyb94l7y6kZ9UW0myr
rFIdsR7GCRzzLcbVGv4OeXe8k/X+uD/WZ9l22Wq1zXoX3UivQwNmMJ2kdy/K
nuRTP+atcY/snoPZXCf4R5x7UvbYulT+NM6aP4XJ+C/zHqqvrd/ggt7jnhlS
RzFWSOdQr6+YpHdtwt/sPyyjK7N/rlneFOcZe7L/v5quKqTza+eVq/8B50l1
ag==
            "]]}], Lighting -> {{"Ambient", 
            RGBColor[0.30756835, 0.18676585, 0.147065275]}, {"Directional", 
            RGBColor[0.2306315, 0.0964065, 0.05229475], 
            ImageScaled[{0, 2, 2}]}, {"Directional", 
            GrayLevel[0.3], 
            ImageScaled[{2, 2, 2}]}, {"Directional", 
            RGBColor[0.2306315, 0.0964065, 0.05229475], 
            ImageScaled[{2, 0, 2}]}}]}, {}, {
        GrayLevel[1], 
        EdgeForm[None], 
        StyleBox[
         GraphicsGroup3DBox[{
           Polygon3DBox[CompressedData["
1:eJxNVVdPlUEQ/fS7svZesEuwi6LGFjEKxobRCBcBRUA6gqJiAUHgVYqKf4Dq
qwWp+gcA+QuWhPKgJoKYwLPnZM4NPpw7u3d3Z86e2ZkvIude8O5sz/PaAB9o
wk8tUAcUATVANRDhPO/TLM+LhN0MfMR4C+xGoA/jTbCPdI7ny4AGoB7YgbW1
Ac/bCXsN8xLgDlAOPNe+NVjrhp9w7gV6MF4Hux7oxXgD7GP5Y4xM4CHwAJiE
79/ACJCOeSlwH8jQOuf5QCVQAdzSnaqAQtmnQIEs9/0BvgBfgZu+3Y3xmoEu
oFN7XwGNQDT4fYfd74zHcMBiBhWDvpMUm/Ni7IvFnh9h5msA6Be/l8AL4Jwz
nc7DngFuY3wWNsW3cTGQLMtcXZVljHagD+gF2mR7gBagW3cgP/IkN+r3U7yX
IcYHaL4cNlW5YrwCzKOwXuhMo0ZxXYF5J/avdJb3bCAH2Ib5Xuzf7mxerneR
h3k49XGmL+8+6Jt+n4Eh3kH6UKcMZ9pkwi4C3iPWYmf56df5Kb2BRIwXYO0d
9iyEHcV/Y8AT8sJ8gtxgDziLc9CZFoPys1WcyT1dcRn/L/4bB35JI2oVlKZD
4h0ImH++nT04MwkbBbsE6ACfpc728Z7ffONGTXKBw87ydUS8epQz3mlS92J8
8sjDOEt3yZYOjDkhjUd1X75X1uIz33jz/1zlh3lgPWXJ8n07+HoDnnNhdwFz
sH837LTuzriXME+DvexMr05/Rr8uvS3unZbuA6ohchxRjoal47g4zYOvt4g7
39n6lPStU701yeeY9vPNvdYbD9Uta6pe77tZvJo0PiRtqXG39rT+Vxv0E3TW
J5Kc9STqSA2PO6vxGL35fMXrku8W1VuS6o88gppHqmd2hNmdgzpbJ72pe4Kz
XpUIe8FZb4x31hPLxCNU26z1k8561yndqV1atOj+DfqP/YM6reL7BofVzvbx
v0Zxr9OZZGdvJMWZLvRBDfapp0VLA2pdpfOVmh+V32POztNPqvi3ileMzp9w
xqtdusc6+77EOeNVIb9x+v+0+h97EL8b153lNM3N9D72wmrloMif6emcs/fz
G8BvRY3WeY563/DtWxEvzS+qv6Yo3hXlJUF3oi/WU6nOZSiH/DZkaS1T83rl
lvkrCXFXLtkHWYNhqjXWXK3Oh94E/bFG/wFFcfsj
            "]], 
           Polygon3DBox[CompressedData["
1:eJwlksdOVlEURs/l/mSDIk0FsVAmNJHQgkBUiEoJNbRQAwRQCEXKGJjCTF+A
EVOlKEVewAGvQOAVDG/A+rIHK1k359x99vnOLppdG/iWFEKoggRMWwjXcQj/
YQafgwQLz2AeL4U8PBnK8Ddww95bqMRHYBffg1G83HzvHd+v8UHYwDdhCG+G
bXwHWvAK872qqdqz5r2oB/UyAb/5/geTeC2c4xdQhy+oBntbYBF/D1uxn/EB
b4Tv+A9owj/BEr4Mn/Ev5ndVja94P6zH3vMAPmV+tjJSVrqj7roPY3g6HEUh
HEMGnmnuJ5CFN8BB7D2olzQ4jPyfR3gK/MR/QSr+wNy15yGeDxf4XyjAx83P
VibKptB87RKKdBc4xc8gD3+pvCKv8QqvN89OPb3Fc+BP5P/k4jVwFXvGyrrV
PKsVaMPbzX0VOvBOcx+DLrxXbxZ7hn14sWYm4TNUgleZz47OqMbfmb+N3kxv
16M7xl5DtZ7o/SPv8an5DGmWNHPDeLZ51trz2LwH9aIa3fhz8yyUwQv8o/ns
aQY0C/dwP1Cl
            "]]}], Lighting -> {{"Ambient", 
            GrayLevel[0.8]}}]}, {}, {}, {}, {}, {}}, {{
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0dsqhFEYBuA1DGNv7IpDZxR3QHEHiBsQxYFxStnvmRkkya6YMTZnSiiu
gHtALgG5AM+fg6f37at/tb71tw5PDqRiIYQJLpWo35aFkFPO5J5MJUJoMi/I
dvksn+jW+/nUR+U0WXL8mj3IV975psRZLXTSyxDjHHDNLBecMMc8CyyyxDIr
rLLGOhtsskWaDFm22eGQG3YpcMoMYwzSQwfNxPlyzzdeKLX/vTwnwxQ/9hqR
fdFe+gdd+qNsi97IN/vOuZNXMm/eaJ7Xj2nQ66kjSS01VFNFJRWU44iQiO4R
vR1xiiniKPb/v/4ACkMy3Q==
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0skr52EcB/AHZcsU/wEay4ydnxlJsh3spGlO4+IkB8tdThzcHEdO9p2M
fY0LF4oy/8Go8QeQmSgvObx6vz899f08PX3Tuvo6eqNCCKO0xISwaFhLDKFB
n5Dlcj8+hD2OnV3JS270//Ifd3p+gi5r5IfoENL4rpfKBnr0TjnACEPmcbnK
Gb+554UUOytpI4Mmaskki2w+8ZkccskjnwIKKaKYEiKU8oWvVNFOGc3U8ZFk
nu3/yy2nrDDmrj/lMP0Mmn/Ierr1iEzlm54kq+STt8iRufzRH7zTI9f6pHed
osK+DdkqL5wdOWvUazg3H5oPSI8L4SQ2hHWOWeOIVQ5Z4YBl9llij0V2WWCH
ebaZY4tZNpnhF9NsMMXk2/fsXmLaHatj3v+PV1CvSVo=
         "]], 
        Line3DBox[{429, 428, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 
         1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 
         1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1827, 1712, 
         441, 440, 439, 438, 437, 436, 435, 434, 433, 432, 431, 430, 429}]}, {
       
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0UkuBGAQBtBfNK7AUmKe53meZ7rppk09IxZscQbuwB24A3dgIxZYIWHt
icVLfUnVolJVmT2NnRSFEC74joQQLQ7hU32mIJ9zxQ13PPD0N0OJmQqaqSoL
oZoaaqmjngYaaaKZFlppo50OOumimx566aOfAQYZYpgRRhljnAkmmWKaGWaZ
Y54FFllimRVWWSNKjHU2iJNgky2SbLPDLnvskyJNhiw58hQ44JAjjnkttav7
NFFOhA+3e+SeW6655IwX/R/y8pf6Tk7OkiFNin322GWHbZJssUmCOBusE+Mt
8v/jX5yAM3w=
         "]], 
        Line3DBox[CompressedData["
1:eJwl0jkvhEEcwOFx7GpEolb5JnwFQS0qGjoVPoGzkejplVTu+2bXtbt2133f
9/1sFE9+/0wmM5k3b3l9c1VTXgihi7LiECoLQ6jQGq3TRm3XNu1lyDyo8zqi
J7yyTF9JCI/aqZeasmdF07rPqjmja5rVdd3g0LypMeJssc0Ou+xxbE9Ck7k7
zSk9zZ2rZ3pO2tzh7jPt1ze9sJ7RJ65Yyp1pbVjHdUB76Da3aos2aK1Wa6TU
NyhyZzSEQj3SfD3QoBlNk+SLPXbZ4o0Ym6yxyhMrLDDPHXPcMssE41wwyjlj
3DDDNdNcMcklUzyyzAOL3LPEC+s8s8ErcT7Y5p0dPknwQ4pv9vklS563HmqB
HmtET6P//8wfR05whQ==
         "]]}, {
        GrayLevel[0], 
        Line3DBox[CompressedData["
1:eJwl0bsrhWEAx/HncBz3204o/gOKURaKxWKhUFaOcr/fSXIf3Cmjw2YVo1VM
VgODYnT3keHT99czvO/b85a0dzV2RkIIg+zHQniLhnCSF8K2vauLup8TQnZK
CK/6QoldlBtChdZonbbQYXfrLNucsuLsSu944ot8zyyjigbaWOaQ3r/3skEf
/QwwyBDDjDDKGONMMMkU08wwyxzzrHLEAnts0kMr9VRSSh6fvu+RWzZ9+6Um
2GKGuLO4NtNk12q1lmuBFlJsH7m7Jc870wN9dm9ZznfsdTL/3uMsQx80XdO4
t1M1xo2dolGu7WRN4sKOaODc/vHPvknYX/rJsf2hB/qua7H///sLv31Bsg==

         "]]}, {
        GrayLevel[0.2], 
        Line3DBox[{1902, 2206, 2055, 1899, 2056, 1903, 2059, 1906, 2062, 1909,
          2065, 1912, 2068, 1915, 2071, 1918, 2074, 1921, 2077, 1924, 2080, 
         1927, 2083, 1930, 2086, 1933, 2089, 1936, 2092, 1939, 2095, 1942, 
         2098, 1945, 2101, 1948, 2104, 1951, 2211, 2107, 2212}], 
        Line3DBox[{1954, 2220, 2224, 2222, 2216, 2209, 1953, 2106, 1950, 2103,
          1947, 2100, 1944, 2097, 1941, 2094, 1938, 2091, 1935, 2088, 1932, 
         2085, 1929, 2082, 1926, 2079, 1923, 2076, 1920, 2073, 1917, 2070, 
         1914, 2067, 1911, 2064, 1908, 2061, 1905, 2058, 1901, 2205, 2214, 
         2218, 2225, 2217, 2223}], 
        Line3DBox[{1956, 2108, 1955, 2109, 1957, 2110, 1958, 2111, 1959, 2112,
          1960, 2113, 1961, 2114, 1962, 2115, 1963, 2116, 1964, 2117, 1965, 
         2118, 1966, 2119, 1967, 2120, 1968, 2121, 1969, 2122, 1970, 2123, 
         1971, 2124, 1972, 2125, 1973, 2126, 1974}], 
        Line3DBox[{1977, 2127, 1975, 2129, 1979, 2131, 1981, 2133, 1983, 2135,
          1985, 2137, 1987, 2139, 1989, 2141, 1991, 2143, 1993, 2145, 1995, 
         2147, 1997, 2149, 1999, 2151, 2001, 2153, 2003, 2155, 2005, 2157, 
         2007, 2159, 2009, 2161, 2011, 2163, 2013}], 
        Line3DBox[{2014, 2164, 2012, 2162, 2010, 2160, 2008, 2158, 2006, 2156,
          2004, 2154, 2002, 2152, 2000, 2150, 1998, 2148, 1996, 2146, 1994, 
         2144, 1992, 2142, 1990, 2140, 1988, 2138, 1986, 2136, 1984, 2134, 
         1982, 2132, 1980, 2130, 1976, 2128, 1978}], 
        Line3DBox[{2016, 2165, 2015, 2166, 2017, 2167, 2018, 2168, 2019, 2169,
          2020, 2170, 2021, 2171, 2022, 2172, 2023, 2173, 2024, 2174, 2025, 
         2175, 2026, 2176, 2027, 2177, 2028, 2178, 2029, 2179, 2030, 2180, 
         2031, 2181, 2032, 2182, 2033, 2183, 2034}], 
        Line3DBox[{2036, 2184, 2035, 2185, 2037, 2186, 2038, 2187, 2039, 2188,
          2040, 2189, 2041, 2190, 2042, 2191, 2043, 2192, 2044, 2193, 2045, 
         2194, 2046, 2195, 2047, 2196, 2048, 2197, 2049, 2198, 2050, 2199, 
         2051, 2200, 2052, 2201, 2053, 2202, 2054}], 
        Line3DBox[{2207, 2219, 2203, 2213, 2204, 1900, 2057, 1904, 2060, 1907,
          2063, 1910, 2066, 1913, 2069, 1916, 2072, 1919, 2075, 1922, 2078, 
         1925, 2081, 1928, 2084, 1931, 2087, 1934, 2090, 1937, 2093, 1940, 
         2096, 1943, 2099, 1946, 2102, 1949, 2105, 1952, 2208, 2215, 2210, 
         2221, 2226}], 
        Line3DBox[{2232, 2713, 2231, 2251, 2524, 2256, 2526, 2258, 2528, 2261,
          2530, 2263, 2532, 2265, 2534, 2267, 2536, 2269, 2538, 2271, 2540, 
         2273, 2542, 2275, 2544, 2277, 2546, 2279, 2548, 2281, 2550, 2283, 
         2552, 2285, 2555, 2288, 2558, 2292, 2561, 2248, 2518, 2721}], 
        Line3DBox[{2246, 2718, 2245, 2517, 2241, 2513, 4326, 2509, 4322, 2505,
          4318, 2501, 4314, 2497, 4310, 2493, 4306, 2489, 4302, 2485, 4298, 
         2481, 4294, 2477, 4290, 2473, 4286, 2469, 4282, 2465, 4278, 2461, 
         4274, 2457, 2237, 2453, 2230, 2712, 2723}], 
        Line3DBox[{2247, 2731, 2735, 2733, 2727, 2717, 2244, 2516, 2240, 2512,
          4325, 2508, 4321, 2504, 4317, 2500, 4313, 2496, 4309, 2492, 4305, 
         2488, 4301, 2484, 4297, 2480, 4293, 2476, 4289, 2472, 4285, 2468, 
         4281, 2464, 4277, 2460, 4273, 2456, 2236, 2452, 2229, 2711, 2725, 
         2729, 2736, 2728, 2734}], 
        Line3DBox[{2252, 2520, 2249, 2522, 2254, 2259, 2303, 2570, 2306, 2573,
          2309, 2576, 2312, 2579, 2315, 2582, 2318, 2585, 2321, 2588, 2324, 
         2591, 2327, 2594, 2330, 2597, 2333, 2600, 2336, 2603, 2339, 2606, 
         2342, 2609, 2289, 2553, 2286, 2556, 2290, 2559, 2293}], 
        Line3DBox[{2294, 2560, 2291, 2557, 2287, 2554, 2284, 2551, 2282, 2549,
          2280, 2547, 2278, 2545, 2276, 2543, 2274, 2541, 2272, 2539, 2270, 
         2537, 2268, 2535, 2266, 2533, 2264, 2531, 2262, 2529, 2260, 2527, 
         2257, 2525, 2255, 2523, 2250, 2521, 2253}], 
        Line3DBox[{2297, 2562, 2295, 2564, 2299, 2566, 2301, 2568, 2304, 2571,
          2307, 2574, 2310, 2577, 2313, 2580, 2316, 2583, 2319, 2586, 2322, 
         2589, 2325, 2592, 2328, 2595, 2331, 2598, 2334, 2601, 2337, 2604, 
         2340, 2607, 2343, 2610, 2345, 2612, 2347}], 
        Line3DBox[{2348, 2613, 2346, 2611, 2344, 2608, 2341, 2605, 2338, 2602,
          2335, 2599, 2332, 2596, 2329, 2593, 2326, 2590, 2323, 2587, 2320, 
         2584, 2317, 2581, 2314, 2578, 2311, 2575, 2308, 2572, 2305, 2569, 
         2302, 2567, 2300, 2565, 2296, 2563, 2298}], 
        Line3DBox[{2350, 2614, 2349, 2615, 2351, 2616, 2352, 2617, 2353, 2618,
          2354, 2619, 2355, 2620, 2356, 2621, 2357, 2622, 2358, 2623, 2359, 
         2624, 2360, 2625, 2361, 2626, 2362, 2627, 2363, 2628, 2364, 2629, 
         2365, 2630, 2366, 2631, 2367, 2632, 2368}], 
        Line3DBox[{2370, 2633, 2369, 2634, 2371, 2635, 2372, 2636, 2373, 2637,
          2374, 2638, 2375, 2639, 2376, 2640, 2377, 2641, 2378, 2642, 2379, 
         2643, 2380, 2644, 2381, 2645, 2382, 2646, 2383, 2647, 2384, 2648, 
         2385, 2649, 2386, 2650, 2387, 2651, 2388}], 
        Line3DBox[{2390, 2652, 2389, 2653, 2391, 2654, 2392, 2655, 2393, 2656,
          2394, 2657, 2395, 2658, 2396, 2659, 2397, 2660, 2398, 2661, 2399, 
         2662, 2400, 2663, 2401, 2664, 2402, 2665, 2403, 2666, 2404, 2667, 
         2405, 2668, 2406, 2669, 2407, 2670, 2408}], 
        Line3DBox[{2410, 2671, 2409, 2672, 2411, 2673, 2412, 2674, 2413, 2675,
          2414, 2676, 2415, 2677, 2416, 2678, 2417, 2679, 2418, 2680, 2419, 
         2681, 2420, 2682, 2421, 2683, 2422, 2684, 2423, 2685, 2424, 2686, 
         2425, 2687, 2426, 2688, 2427, 2689, 2428}], 
        Line3DBox[{2430, 2690, 2429, 2691, 2431, 2692, 2432, 2693, 2433, 2694,
          2434, 2695, 2435, 2696, 2436, 2697, 2437, 2698, 2438, 2699, 2439, 
         2700, 2440, 2701, 2441, 2702, 2442, 2703, 2443, 2704, 2444, 2705, 
         2445, 2706, 2446, 2707, 2447, 2708, 2448}], 
        Line3DBox[{2715, 2730, 2709, 2724, 2710, 2228, 2451, 2235, 2455, 4272,
          2459, 4276, 2463, 4280, 2467, 4284, 2471, 4288, 2475, 4292, 2479, 
         4296, 2483, 4300, 2487, 4304, 2491, 4308, 2495, 4312, 2499, 4316, 
         2503, 4320, 2507, 4324, 2511, 2239, 2515, 2243, 2716, 2726, 2719, 
         2732, 2737}], 
        Line3DBox[{2722, 2519, 2720, 2242, 2514, 2238, 2510, 4323, 2506, 4319,
          2502, 4315, 2498, 4311, 2494, 4307, 2490, 4303, 2486, 4299, 2482, 
         4295, 2478, 4291, 2474, 4287, 2470, 4283, 2466, 4279, 2462, 4275, 
         2458, 4271, 2454, 2234, 2450, 2227, 2449, 2714, 2233}], 
        Line3DBox[{3099, 3556, 3068, 3532, 3032, 3507, 2998, 3482, 2996, 3487,
          2958, 3458, 2920, 3434, 2918, 3440, 2885, 3412, 2843, 3385, 2840, 
         3390, 2803, 3363, 2800, 3368, 2756, 3327, 4339, 3331, 2760, 3337, 
         2739, 3308, 4328, 3311, 4331, 3315, 2744, 3319, 2749, 3322, 4334, 
         3324, 4336, 2753, 2791, 3360, 4342, 2797, 2832, 2837, 2878, 4345, 
         3432, 2916, 2948, 4347, 3480, 2994, 3025, 4349, 4359, 4352, 4362, 
         4356, 4357}], 
        Line3DBox[{3136, 3581, 3098, 3555, 3067, 3531, 3031, 3506, 2997, 3481,
          2995, 3486, 2957, 3457, 2919, 3433, 2917, 3439, 2884, 3411, 2842, 
         3384, 2839, 3389, 2802, 3362, 2799, 3367, 2755, 3326, 4338, 3330, 
         2759, 3336, 2738, 3307, 4327, 3310, 4330, 3314, 2743, 3318, 2748, 
         3321, 4333, 3323, 4335, 2752, 2790, 3359, 4341, 2796, 2831, 2836, 
         2877, 4344, 3431, 2915, 2947, 4346, 3479, 2993, 3024, 4348, 4358, 
         4351, 4361, 4355, 3576, 3130, 3158}], 
        Line3DBox[{3168, 3606, 3135, 3580, 3097, 3554, 3066, 3530, 3030, 3505,
          3029, 3511, 3002, 3485, 2956, 3456, 2954, 3463, 2926, 3438, 2883, 
         3410, 2841, 3383, 2838, 3388, 2801, 3361, 2798, 3366, 2754, 3325, 
         4337, 3329, 2758, 3335, 2765, 3342, 2740, 3309, 4329, 3313, 2742, 
         3317, 2747, 3320, 4332, 2751, 2786, 3357, 2789, 3358, 4340, 2795, 
         2830, 2835, 2876, 4343, 3430, 2914, 3454, 2952, 2987, 2992, 3504, 
         3028, 3060, 4350, 4360, 4354, 3575, 3129, 3601, 3162, 3190}], 
        Line3DBox[CompressedData["
1:eJwV0DFLQlEYgOHPxaE0UhCCjHAIgvoBRRDp3pBLtBS5W3uQbUo09Af6BS5O
CTW0BQkNgasIglNTQ1nR0nOGl+dezrnnO9xK47x+lomIfbVyEZsLEScscZd/
+YglTvg7HzHgD984Yp8PvOMNr3jNNptsssYDVnnIVe5whTV+z0Ws8YsbHDD4
zCxfmeeQxTSPH+50z08+8kljLVufsMwp35Uzp6ht7elYp7q0p8Oueqk0gy/p
TukbZ2cKETPvW54X/ZMjrvOCt/oHrT0sFA==
         "]], 
        Line3DBox[CompressedData["
1:eJwV0DFLAlAUgNHb0FBaIWRFhCAIQUGLUBGIuLVWJE0hQktIDU0NDQ35Axxy
aHSVaIlamxoKBBfBCB1tD6GmTsPH4d7h8d7LVs/3zyYi4kAPyYjD2YgmS7zi
Oo85zwJ/ZyIWOeQCRwx2+JGIeOQz7/jEFhu8YY01nvKCuywzwx2usMTxdESO
31zjDzfY4STfmGSXKfaYZp9L/OQyh/zSlHM3zQmmtK2iTuwqvFZdt+Z7vqur
1/+7cMC0N+a1pTl/ccRVXrLABvfY5ov+AHCjK/M=
         "]], 
        Line3DBox[CompressedData["
1:eJwVz7FKAlAUgOEjNIhmBArhFCIEBa0uOrhUa0giKBKIgyEUNDU0NNQDONQD
tEa1tAVNLTUYLYEhNdbYIlhLfQ0/HwcO93IKnb3abiIi6nqYjejNRVxzi2es
8pArbDPLCr8zEWUmzIv8MP+mI4Z85Q1HvOUdzzngMfvsc4f73GCd62yyyCoL
XONPKmKZU65yyBk+Ms1nzvOFuf9/ucAx83znp5Ley6ikslra1pFOdGr3kld8
4pcmejPn3DhhiTU1tOT2A1Y44CYv2OU9R/oD1FMvNA==
         "]], 
        Line3DBox[CompressedData["
1:eJwVz78rxHEcx/H3nSwO2cykRNH5sRhRV+pcolxR6pRJkeuSUmcxXLmbLov5
hhtMJovOwmKyGC7nDzAo2e88bnj2+LzqW5/Pd+LwdPskERG76gxHnI9GXOvV
+YgvPOYD87zjOq84xwLHucbuSMQqB+xJftsJvvMrFfHIDp/YYoO3rLDOKoss
8YwX3OQ+szzgDDOc5gZnme3fwwX2hiKWmLQHNa+cneay8trTpcr9N6ipe9+8
8Ue/+rTHvP2Pi9zSjqb8W4krrDHHJgt85ofaqtg3quofyN0uHA==
         "]], 
        Line3DBox[{3294, 3703, 3275, 3689, 3274, 3693, 3253, 3673, 3227, 3653,
          3201, 3631, 3172, 3610, 3171, 3613, 3142, 3588, 3108, 3564, 3107, 
         3567, 3076, 3541, 3044, 3518, 3043, 3520, 3010, 3495, 3009, 3497, 
         2970, 3471, 2969, 3473, 2935, 3450, 2934, 3451, 2898, 3424, 2897, 
         3426, 2899, 2901, 2936, 2937, 2976, 2978, 3014, 3016, 3051, 3053, 
         3546, 3085, 3116, 3119, 3595, 3151, 3183, 3185, 3639, 3211, 3661, 
         3237, 3679, 3262, 3284, 3287, 3711, 3304}], 
        Line3DBox[{3296, 3705, 3277, 3692, 3252, 3672, 3251, 3674, 3228, 3655,
          3203, 3633, 3175, 3612, 3174, 3614, 3143, 3589, 3110, 3566, 3109, 
         3568, 3078, 3542, 3077, 3543, 3045, 3521, 3012, 3496, 3011, 3498, 
         2972, 3472, 2971, 3474, 2973, 3475, 2974, 3476, 2975, 2977, 3013, 
         3015, 3524, 3050, 3083, 3084, 3115, 3117, 3594, 3150, 3182, 3184, 
         3638, 3210, 3660, 3235, 3260, 3261, 3698, 3285, 3710, 3303}], 
        Line3DBox[{3297, 3706, 3279, 3694, 3278, 3695, 3254, 3675, 3230, 3656,
          3229, 3657, 3204, 3634, 3177, 3615, 3176, 3616, 3144, 3590, 3112, 
         3569, 3111, 3570, 3080, 3544, 3079, 3545, 3047, 3522, 3046, 3523, 
         3048, 3049, 3081, 3082, 3113, 3114, 3593, 3149, 3180, 3181, 3637, 
         3209, 3233, 3234, 3678, 3259, 3282, 3283, 3709, 3302}], 
        Line3DBox[{3299, 3707, 3298, 3708, 3280, 3696, 3256, 3676, 3255, 3677,
          3231, 3658, 3206, 3635, 3205, 3636, 3178, 3617, 3146, 3591, 3145, 
         3592, 3147, 3148, 3618, 3179, 3207, 3208, 3659, 3232, 3257, 3258, 
         3697, 3281, 3300, 3301}], 
        Line3DBox[CompressedData["
1:eJwNzz1LAmAYhtEnHVP/QEviaGVtzkEtkVqEuIRWuDgU9EEpDeFatGZzYYNT
u6Br4NgQOERtQtFf6AwXh5tned/s4cnu8VxElDRLRdxkIj54xhEbfOGz7lS0
T5njDlNc44oymqYj/uYjfvSmgd3nk67VUU1VHbntsaBlbdt5bnGJB6ywzhL3
WWab57zkBe/5wFv22OeYI35xyG++M+mNv1zkjFkm/GGDC2xylV1ussd1PrLK
V7Y44RU/+Q+W4Cqd
         "]], 
        Line3DBox[CompressedData["
1:eJwV0L8rxGEcwPGPxfDFXblSFqEMyqB0C8MtNygDnQzCcpTNkTDIwA3qljvl
12pSwh+gTEoWUijFoJTByuZHXoZ3r+fzqWd4no5iqTBXFxFFvTdGrKci9rSt
qip6tl/iBad5xGHWOMAVLmpMKXOWn00RGab10RBxab7hCY95qA2taUoz9v3M
asS5j4nq9ZpEPKnF/pEZPjDNWya8Zy+/2MNvDrLL/TzbmWMnxznEZZa4wHlW
WGWZNR7wnGd84R1/eM1fvrHN+8Kb82zlBJs5yW6uMscdjvKUs7ximZva0v7/
f2pXf3ioNcE=
         "]], 
        Line3DBox[CompressedData["
1:eJwV0C1Lg1EYgOHHKQjTCTaDBkGHyY8xEQyWDcQVYRgmLL3BqEHXBEVQWNiC
TsFmUVjwB4gmQQTBYhUxmdbsflxvuLk4z4HDOWcy2alu90VEXa2RiFMd60RH
eh6O2OItq+xwhWcs85CzTDjGEv9yERP84jh7zPCNn0MRd3zgFe95zQs22WGL
u2ywwhrXWGeeJU5xlTOs8DcbMccfFhjmRfZzkQMc1ILWrQtc0mZ6rvbNDtK7
qKsXverJ/JsfHPWGeRWV89YNTrPBZbZ5o64S60fu8Z3NdD/9N53rUv+wHjAL

         "]], 
        Line3DBox[{3741, 4250, 4030, 3738, 3746, 3827, 4099, 3830, 4100, 3831,
          4101, 3834, 4103, 3836, 3841, 3883, 4144, 3885, 4146, 3887, 4148, 
         3889, 4150, 3891, 4152, 3893, 4154, 3855, 4117, 3852, 4120, 3856, 
         4123, 3858, 4126, 3861, 4129, 3864, 4132, 3820, 4090, 3817, 4255, 
         4094, 4256}], 
        Line3DBox[{3742, 3745, 4035, 3750, 4037, 3753, 4040, 3758, 4042, 3761,
          4045, 3766, 4048, 3770, 4052, 3775, 4056, 3780, 4061, 3786, 4066, 
         3790, 4070, 3795, 4075, 3799, 4079, 3805, 4084, 3809, 4088, 3815, 
         4093, 3816}], 
        Line3DBox[{3747, 3751, 4038, 3754, 4041, 3759, 4043, 3762, 4046, 3767,
          4049, 3771, 4053, 3776, 4057, 3781, 4062, 3787, 4067, 3791, 4071, 
         3796, 4076, 3800, 4080, 3806, 4085, 3810, 4089, 3812}], 
        Line3DBox[{3756, 3760, 4044, 3763, 4047, 3768, 4050, 3772, 4054, 3777,
          4058, 3782, 4063, 3788, 4068, 3792, 4072, 3797, 4077, 3801, 4081, 
         3803}], 
        Line3DBox[{3765, 3769, 4051, 3773, 4055, 3778, 4059, 3783, 4064, 3789,
          4069, 3793, 4073, 3794}], 
        Line3DBox[{3774, 3779, 4060, 3784, 4065, 3785}], 
        Line3DBox[{3821, 4264, 4268, 4266, 4260, 4253, 3819, 4092, 3814, 4087,
          3808, 4083, 3804, 4078, 3798, 4074, 3802, 4122, 3854, 4119, 3851, 
         4116, 3849, 4114, 3847, 4112, 3845, 4110, 3843, 4108, 3840, 4106, 
         3838, 3764, 3757, 4039, 3752, 4036, 3749, 4034, 3744, 4032, 3740, 
         4249, 4258, 4262, 4269, 4261, 4267}], 
        Line3DBox[{3824, 4095, 3822, 3828, 3873, 4137, 3874, 4138, 3876, 4139,
          3878, 3881, 3912, 4169, 3914, 4170, 3915, 4171, 3916, 4172, 3917, 
         4173, 3918, 4174, 3919, 4175, 3920, 4177, 3897, 4155, 3895, 4157, 
         3898, 4159, 3900, 4162, 3902, 4164, 3867, 4130, 3865, 4133, 3868}], 
        Line3DBox[{3869, 4134, 3866, 4131, 3863, 4128, 3860, 4125, 3862, 4160,
          3899, 4158, 3896, 4156, 3894, 4153, 3892, 4151, 3890, 4149, 3888, 
         4147, 3886, 4145, 3884, 4143, 3882, 4142, 3880, 4141, 3879, 4140, 
         3877, 3833, 3829, 4098, 3826, 4097, 3823, 4096, 3825}], 
        Line3DBox[{3871, 4135, 3870, 4136, 3872, 3875, 3909, 4167, 3910, 4168,
          3911, 3913, 3931, 4184, 3932, 3933, 3945, 4192, 3946, 4193, 3947, 
         4194, 3948, 4195, 3935, 4185, 3934, 4186, 3936, 4187, 3922, 4176, 
         3921, 4178, 3923, 4179, 3924, 4180, 3903, 4161, 3901, 4163, 3904, 
         4165, 3905}], 
        Line3DBox[{3907, 4166, 3906, 3908, 3928, 4183, 3929, 3930, 3942, 4191,
          3943, 3944, 3957, 4201, 3958, 3959, 3970, 4210, 3971, 4211, 3972, 
         4212, 3973, 4213, 3961, 4202, 3960, 4203, 3962, 4204, 3950, 4196, 
         3949, 4197, 3951, 4198, 3938, 4188, 3937, 4189, 3939, 4190, 3926, 
         4181, 3925, 4182, 3927}], 
        Line3DBox[{3941, 3940, 3954, 4200, 3955, 3956, 3966, 4208, 3967, 4209,
          3968, 3969, 3978, 3979, 3984, 3985, 3993, 3994, 4002, 4229, 4003, 
         4230, 3996, 4224, 3995, 4225, 3987, 4220, 3986, 4221, 3981, 4218, 
         3980, 4219, 3975, 4214, 3974, 4215, 3976, 4216, 3977, 4217, 3964, 
         4205, 3963, 4206, 3965, 4207, 3953, 4199, 3952}], 
        Line3DBox[{3983, 3982, 3990, 4223, 3991, 3992, 4000, 4001, 4006, 4007,
          4010, 4011, 4014, 4015, 4018, 4019, 4022, 4023, 4243, 4026, 4028, 
         4245, 4029, 4246, 4027, 4244, 4025, 4241, 4024, 4242, 4021, 4239, 
         4020, 4240, 4017, 4237, 4016, 4238, 4013, 4235, 4012, 4236, 4009, 
         4233, 4008, 4234, 4005, 4231, 4004, 4232, 3998, 4226, 3997, 4227, 
         3999, 4228, 3989, 4222, 3988}], 
        Line3DBox[{4251, 4263, 4247, 4257, 4248, 3739, 4031, 3743, 4033, 3748,
          3755, 3832, 4102, 3835, 4104, 3837, 4105, 3839, 4107, 3842, 4109, 
         3844, 4111, 3846, 4113, 3848, 4115, 3850, 4118, 3853, 4121, 3857, 
         4124, 3859, 4127, 3811, 4082, 3807, 4086, 3813, 4091, 3818, 4252, 
         4259, 4254, 4265, 
         4270}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
     VertexNormals -> CompressedData["
1:eJzt0rFNA0EURdGRychcApXQg0tAIqaFXzIlkCH/Jzlaw+zOnps86QSrL82+
fXzdPi9jjNfrGC/jt+r7/c4555xzzjnnnHPOOeecc84555xzzjnnnPPDeMQ3
evXlnHPOOeecc84555xzzjnnnHPOOeecc76YR5wfwquv/3wnXn0P59HyXn15
eLRbr758o0fTvfryjR55x5N45H0X88g7nsQj77uYR953MY+872IeTb+Hc845
55xzzjn/T4+e7s+685H/9T2+zznnnHPOOeecc84555xzzjnnnHPOOeecc35O
j6bfwznnR/Fo+j2cb/GI81159Z1+D+ecc37v1Xf6PZxzzjnnnHPOOeecc845
55xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc845
55xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc845
55xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHO+nP8ADbPD
Jg==
      "]], Axes -> True, AxesLabel -> {
      FormBox[
       TagBox["n", HoldForm], TraditionalForm], 
      FormBox[
       TagBox["m", HoldForm], TraditionalForm], 
      FormBox[
       TagBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], HoldForm], TraditionalForm]}, BoxRatios -> {1, 1, 0.4}, 
    DisplayFunction -> Identity, FaceGridsStyle -> Automatic, 
    ImageSize -> {1027.853998398347, 754.}, 
    Method -> {"DefaultBoundaryStyle" -> Directive[
        GrayLevel[0.3]], "RotationControl" -> "Globe"}, 
    PlotRange -> {{10, 90}, {10, 90}, {0., 0.18944792993857162`}}, 
    PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02], 
      Scaled[0.02]}, Ticks -> {Automatic, Automatic, Automatic}, 
    ViewPoint -> {-1.4584865243428364`, 2.475673008474175, 
     1.7871374355160226`}, ViewVertical -> {0., 0., 1.}],FormBox[
    FormBox[
     TemplateBox[{"\"prior\"", "\"post-vul\"", "\"post-wc\"", "\"post-med\""},
       "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, 
                    Opacity[0.5]]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.30100577, 0.22414668499999998`, 0.090484535]}, {
                    "Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, 
                    Opacity[0.5]]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 3], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{2, 0, 2}]}}, 
                    Opacity[0.5]]}, Lighting -> {{"Ambient", 
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875]}, {
                    "Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[
                    InsetBox[
                    Graphics3DBox[
                    SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                    DirectedInfinity[1]}, 
                    PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, 
                    ImagePadding -> 0, {DefaultBaseStyle -> {"Graphics3D", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Specularity[
                    GrayLevel[1], 6], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Lighting -> {{"Ambient", 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]}, {
                    "Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{2, 0, 2}]}}, 
                    Opacity[0.5]]}, Lighting -> {{"Ambient", 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]}, {
                    "Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{0, 2, 2}]}, {"Directional", 
                    GrayLevel[0.3], 
                    ImageScaled[{2, 2, 2}]}, {"Directional", 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    ImageScaled[{2, 0, 2}]}}, ImageSize -> {12, 12}, BoxStyle -> 
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]}], Center, Center, 
                    ImageScaled[{1, 1}]], AspectRatio -> Full, 
                    ImageSize -> {12, 12}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.16666666666666669`] -> 
                    Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.20067051333333336`, 0.14943112333333333`, 
                    0.06032302333333334], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.30100577, 0.22414668499999998, 0.090484535]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30100577, 0.22414668499999998`, 0.090484535], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.17614440000000003`, 0.12220819999999999`, 
                    0.028410200000000007`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.2642166, 0.18331229999999998, \
0.04261530000000001]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2642166, 0.18331229999999998`, 
                    0.04261530000000001]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.2642166, 0.18331229999999998`, 0.04261530000000001], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}], ",", 
                   RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.13133225533333337`, 0.16813654733333336`, 
                    0.22213960133333338`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.19699838300000003, 0.252204821, \
0.33320940200000004]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.19699838300000003`, 0.252204821, 
                    0.33320940200000004`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.19699838300000003`, 0.252204821, 0.33320940200000004`], 
                    Editable -> False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.10315676000000001`, 0.14189812000000002`, 
                    0.19874344000000005`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.15473514000000002, 0.21284718000000002, \
0.29811516000000005]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.15473514000000002`, 0.21284718000000002`, 
                    0.29811516000000005`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}], ",", 
                   RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "3"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.1830429875, 0.21424763749999998`, 0.0962851875], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.12202865833333335`, 0.14283175833333334`, 
                    0.064190125], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.1830429875, 0.21424763749999998, \
0.0962851875]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.1830429875, 0.21424763749999998`, 
                    0.0962851875]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.1830429875, 0.21424763749999998`, 
                    0.0962851875], Editable -> False, Selectable -> False]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.09336350000000002, 0.11526149999999999`, 
                    0.032480833333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.14004525, 0.17289224999999997, \
0.048721249999999994]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.14004525, 0.17289224999999997`, 
                    0.048721249999999994`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.14004525, 0.17289224999999997`, 0.048721249999999994`], 
                    Editable -> False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}], ",", 
                   RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Specularity", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False], 
                    ",", "6"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"Lighting", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"Ambient\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.30756835, 0.18676585, 0.147065275], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.20504556666666668`, 0.12451056666666668`, 
                    0.09804351666666666], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.30756835, 0.18676585, 0.147065275]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.30756835, 0.18676585, 0.147065275]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.30756835, 0.18676585, 0.147065275], Editable -> 
                    False, Selectable -> False]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.15375433333333333`, 0.06427100000000001, 
                    0.03486316666666667], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.2306315, 0.0964065, 0.05229475]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2306315, 0.0964065, 0.05229475]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0.3]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"\"Directional\"", ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.2306315, 0.0964065, 0.05229475], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.15375433333333333`, 0.06427100000000001, 
                    0.03486316666666667], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.2306315, 0.0964065, 0.05229475]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.2306315, 0.0964065, 0.05229475]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.2306315, 0.0964065, 0.05229475], Editable -> 
                    False, Selectable -> False], ",", 
                    RowBox[{"ImageScaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "0", ",", "2"}], "}"}], "]"}]}], 
                    "}"}]}], "}"}]}], ",", 
                   RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             Graphics3DBox[
              SphereBox[{0, 0, 0}], ViewPoint -> {0, 0, 
                DirectedInfinity[1]}, 
              PlotRange -> {{-0.7, 0.7}, {-0.7, 0.7}, All}, ImagePadding -> 
              0]}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "12"}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.665855343266634*^9, 3.6658553498438053`*^9}, 
   3.6658585522888803`*^9, {3.665858583554055*^9, 3.6658585875645742`*^9}, 
   3.665858642660055*^9, {3.665858833451995*^9, 3.665858876338552*^9}, {
   3.66585896212047*^9, 3.665859042060216*^9}, {3.665859073090148*^9, 
   3.665859108307809*^9}, 3.665859153968557*^9}]
}, Open  ]]
},
WindowSize->{1477, 911},
WindowMargins->{{Automatic, 101}, {Automatic, 5}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 7754, 198, 197, "Input"],
Cell[CellGroupData[{
Cell[8337, 222, 1858, 36, 46, "Input"],
Cell[10198, 260, 10150, 175, 249, "Output"],
Cell[20351, 437, 590, 9, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20978, 451, 490, 11, 28, InheritFromParent],
Cell[21471, 464, 7946, 140, 270, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29454, 609, 1756, 39, 114, InheritFromParent],
Cell[31213, 650, 28548, 547, 256, "Output"]
}, Open  ]],
Cell[59776, 1200, 2492, 65, 80, "Input"],
Cell[CellGroupData[{
Cell[62293, 1269, 1553, 36, 114, "Input"],
Cell[63849, 1307, 22973, 459, 256, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86859, 1771, 1409, 33, 97, "Input"],
Cell[88271, 1806, 40604, 750, 251, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128912, 2561, 2159, 49, 148, "Input"],
Cell[131074, 2612, 197302, 3478, 805, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
